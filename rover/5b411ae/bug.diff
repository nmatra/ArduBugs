diff --git a/APMrover2/Rover.h b/APMrover2/Rover.h
index eaf8afc..5fea298 100644
--- a/APMrover2/Rover.h
+++ b/APMrover2/Rover.h
@@ -511,7 +511,7 @@ private:
     void do_loiter_unlimited(const AP_Mission::Mission_Command& cmd);
     void do_loiter_time(const AP_Mission::Mission_Command& cmd);
     bool verify_nav_wp(const AP_Mission::Mission_Command& cmd);
-    bool verify_loiter_unlimited(const AP_Mission::Mission_Command& cmd);
+    bool verify_loiter_unlim();
     bool verify_loiter_time(const AP_Mission::Mission_Command& cmd);
     void do_wait_delay(const AP_Mission::Mission_Command& cmd);
     void do_within_distance(const AP_Mission::Mission_Command& cmd);
diff --git a/APMrover2/commands_logic.cpp b/APMrover2/commands_logic.cpp
index cb16655..0e9010e 100644
--- a/APMrover2/commands_logic.cpp
+++ b/APMrover2/commands_logic.cpp
@@ -171,7 +171,7 @@ bool Rover::verify_command(const AP_Mission::Mission_Command& cmd)
         return verify_RTL();
 
     case MAV_CMD_NAV_LOITER_UNLIM:
-        return verify_loiter_unlimited(cmd);
+        return verify_loiter_unlim();
 
     case MAV_CMD_NAV_LOITER_TIME:
         return verify_loiter_time(cmd);
@@ -228,14 +228,16 @@ void Rover::do_nav_wp(const AP_Mission::Mission_Command& cmd, bool stay_active_a
     // this is the delay, stored in seconds
     loiter_duration = cmd.p1;
 
-    Location cmdloc = cmd.content.location;
-    location_sanitize(current_loc, cmdloc);
-    mode_auto.set_desired_location(cmdloc, stay_active_at_dest);
+    mode_auto.set_desired_location(cmd.content.location, stay_active_at_dest);
 }
 
 void Rover::do_loiter_unlimited(const AP_Mission::Mission_Command& cmd)
 {
-    do_nav_wp(cmd, true);
+    previously_reached_wp = false;
+    Location cmdloc = cmd.content.location;
+    location_sanitize(current_loc, cmdloc);
+    set_next_WP(cmdloc);
+    distance_past_wp = 0;
 }
 
 // do_loiter_time - initiate loitering at a point for a given time period
@@ -305,9 +307,9 @@ bool Rover::verify_RTL()
     return mode_rtl.reached_destination();
 }
 
-bool Rover::verify_loiter_unlimited(const AP_Mission::Mission_Command& cmd)
+bool Rover::verify_loiter_unlim()
 {
-    verify_nav_wp(cmd);
+    loiter_start_time += loiter_duration;
     return false;
 }
 
