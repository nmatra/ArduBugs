sha;hex-8;package;category;summary;description;files;num. files;num. lines changed
0d522663b2d80106f69bd8e3bb88821ac1f6710a;0d522663;library;gps;SBF: fix the PVTMode to support PPK (and baseline) units;SBF: fix the PVTMode to support PPK (and baseline) units;['libraries/AP_GPS/AP_GPS_SBF.h'];1;2
903ef4d065129f54354b06dc7cce72fafe4b231f;903ef4d0;library;smartrtl;update example to new API and fix object copy;"update example to new API and fix object copy

ahrs should be a reference to DummyVehicle::ahrs, otherwise it will
act on a different object.

This also corrects the member initialization order: only pass a copy
or reference of an object to a constructor if it has already been
initialized.";['libraries/AP_SmartRTL/examples/SmartRTL_test/SmartRTL_test.cpp'];1;27
eed3c83079e3c18ddd9f9a1e5e80c2ae1de6d4d1;eed3c830;sub;sub;use static method to construct AP_Arming_Sub;"use static method to construct AP_Arming_Sub

This also fix a bug of calling AP_Param::setup_object_defaults() on the
parent.";['ArduSub/AP_Arming_Sub.h', 'ArduSub/Sub.h'];2;20
eb9dd8c5a28441a4eb15066b39b35b701942535b;eb9dd8c5;library;landing;Fix an error when computing the course offset for deepstall;Fix an error when computing the course offset for deepstall;['libraries/AP_Landing/AP_Landing_Deepstall.cpp'];1;2
ed2b8d3476a11c870939e946011f0e030eddc2e7;ed2b8d34;gcs;gcs_mavlink;refactor send_autopilot_verison() to use AP_FWVersion;"refactor send_autopilot_verison() to use AP_FWVersion

Make the method use the getter directly to get a reference of
AP_FWVersion and work out everything that needs to be sent. This allows
us to remove ifdefs and replace with runtime if/else.

Note that there's also a bug fix: we were not setting flight_custom_version
to zero in case GIT_VERSION wasn't defined.";['libraries/GCS_MAVLink/GCS_Common.cpp', 'libraries/GCS_MAVLink/GCS.h'];2;70
b682f3f6d9109431f35b66977bdfd1b7a3588ede;b682f3f6;plane;plane;fix parameter units;fix parameter units;['ArduPlane/quadplane.cpp'];1;4
44a436642b3c6f84ce4e8bd430d46d2a444c11f0;44a43664;copter;copter;complete rename to SmartRTL;"complete rename to SmartRTL

Also fix parameter description for CH7_OPT";['ArduCopter/defines.h', 'ArduCopter/system.cpp', 'ArduCopter/control_safe_rtl.cpp', 'ArduCopter/Copter.cpp', 'ArduCopter/Copter.h', 'ArduCopter/ArduCopter.cpp', 'ArduCopter/motors.cpp', 'ArduCopter/switches.cpp', 'ArduCopter/Parameters.cpp'];9;64
d3a18e803e41ff9333f7bcfbf8c6aea4e96e64c1;d3a18e80;library;gps;Fix MAVLink message field SYSTEM_TIME.time_unix_usec when GPS_AUTO_SWITCH = blend;"Fix MAVLink message field SYSTEM_TIME.time_unix_usec when GPS_AUTO_SWITCH = blend

The mavlink message field SYSTEM_TIME.time_unix_usec works fine with GPS_AUTO_SWITCH == 0 (no switch) or ==1 (usebest)
But when GPS_AUTO_SWITCH == 2 (blend) then state[GPS_BLENDED_INSTANCE].last_gps_time_ms gets initialized with 0 and never rewritten.

The consequence: SYSTEM_TIME.time_unix_usec gets stuck at zero.
The solution: Do not reset state[GPS_BLENDED_INSTANCE].last_gps_time_ms because it would overwrite the correct value already set on line 1149";['libraries/AP_GPS/AP_GPS.cpp'];1;1
58dec08b2909d69a1ab4636ec62e92e7eb81df14;58dec08b;gcs;gcs_mavlink;fix non static perf counter;"fix non static perf counter

Commit b9877e0d3850223ae6c2df3a68c3d888ca5be628
(GCS_MAVLink: make per channel perf counter non-static) made the
perf counters to be available per instance but missed the fact that
the perf infra doesn't copy the string.

Fix this by maintaining a the string inside the object.";['libraries/GCS_MAVLink/GCS_Common.cpp', 'libraries/GCS_MAVLink/GCS.h'];2;12
939ca36c331e0438f8a9ed4e2dda0412bd218f1e;939ca36c;library;safertl;simplify and prune regularly;"simplify and prune regularly

remove overlapping prunable loops (keeps longest loop)
replace use of Bitmask calls with flag
restart_pruning protection against overflow
remove argument to reset_simplification and reset_pruning
fix setting _simplify.path_points_completed
fix add_loop - compare length of new loop to sum of all existing loops that would be
replaced
add program error protection - an overflow of the path_points_count index is dangerous so although it should never happen, if it does, deactivate
reduce the simplify and prune path-points-completed numbers as points are popped off the path so that if the user aborts the SafeRTL simplification and pruning process any new points added aftwards";['libraries/AP_SafeRTL/AP_SafeRTL.cpp', 'libraries/AP_SafeRTL/AP_SafeRTL.h'];2;523
1a9bccaaa78de1d9a172a802b1fb6f846902c954;1a9bccaa;library;common;fix Bitmask out-of-range values;fix Bitmask out-of-range values;['libraries/AP_Common/Bitmask.h'];1;25
226eeeb73845c2554b76dd851cefa932ca99051e;226eeeb7;library;hal_linux;RCOutput_Sysfs: fix deleting _pwm_channels array;"RCOutput_Sysfs: fix deleting _pwm_channels array

delete [] should be called rather than delete.";['libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp'];1;2
048dfee68a694d31f40d5ee7cb6d2b80841df5e5;048dfee6;library;gps;make SBF driver more robust;"make SBF driver more robust

this fixes a crash bug in the SBF GPS driver where a badly formed packet
could cause crc16_ccitt to reference invalid memory";['libraries/AP_GPS/AP_GPS_SBF.cpp'];1;18
cb9c6265774ee547eed44019c5bf83ae27e2f432;cb9c6265;library;adsb;fix getting a copy rather than a reference;"fix getting a copy rather than a reference

These have been caught by making constructors private and enforcing
calling a create() method to create objects are supposed to be
statically allocated only.

The Vector3f reference was just nearby and was a change copied from
similar PR from Peter Barker (#6873).";['libraries/AP_ADSB/AP_ADSB.cpp'];1;8
a895d69b42bcf4cbb372e34a3d4b36d7805baa03;a895d69b;gcs;gcs_mavlink;Correct a bug in the FOR_EACH_ACTIVE_CHANNEL macro;Correct a bug in the FOR_EACH_ACTIVE_CHANNEL macro;['libraries/GCS_MAVLink/GCS.cpp'];1;4
a93ecb8b5adb74aa0b0825647daa1307d1401c1b;a93ecb8b;sub;sub;Fix Notify led to reflect when leak failsafe has been resolved.;Fix Notify led to reflect when leak failsafe has been resolved.;['ArduSub/failsafe.cpp'];1;4
1a207c919b4ef4580290a06d8d61e383ca9c63e3;1a207c91;plane;plane;fixed bug in TRIM_AUTO;"fixed bug in TRIM_AUTO

fixed trim for differential spoilers";['ArduPlane/radio.cpp'];1;2
0155434057e4bbc5c30bf52baebc4e9e78ae6110;01554340;library;rc_channel;fixed bug in manual with TRIM == MIN;"fixed bug in manual with TRIM == MIN

This fixes the bug described here:

https://discuss.ardupilot.org/t/arduplane-reverse-thrust-setup/18324/5

which otherwise would prevent output with TRIM == MIN or TRIM == MAX";['libraries/RC_Channel/RC_Channel.cpp'];1;8
d6845a911a9bbef77fcd834356bd986c361b1e29;d6845a91;library;ahrs;fix get_relative_position_NE_home calcalation;fix get_relative_position_NE_home calcalation;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;8
a035950a227992488cc355014d6bd9e1367c3ca1;a035950a;rover;rover;minor format fix;minor format fix;['APMrover2/commands_logic.cpp', 'APMrover2/AP_MotorsUGV.cpp'];2;4
e2d4182c757351aebe1f14548f9194ae72d844ed;e2d4182c;rover;rover;fix parameter conversion;fix parameter conversion;['APMrover2/Parameters.cpp'];1;1
c9927e6af606d57a2464763d37a2d4d3fcca9146;c9927e6a;rover;rover;bug fix to steering mode top speed;"bug fix to steering mode top speed

Also non-functional change to calc_throttle to make call to calc_speed_nudge consistent";['APMrover2/mode.cpp', 'APMrover2/mode_steering.cpp'];2;4
3642ecd9ef90987ae5ef18575098fe83d93e4b24;3642ecd9;library;compass;fix errors in addition of alternate LIS3MDL I2C address;"fix errors in addition of alternate LIS3MDL I2C address

testing shows ROTATION_YAW_90 is correct for mRo Neo M8N GPS/compass";['libraries/AP_Compass/AP_Compass.cpp', 'libraries/AP_Compass/AP_Compass_LIS3MDL.h'];2;19
164096225b89db08337c9cc67bf253409d301a7b;16409622;library;steercontroller;fix get_steering_out_rate bug when reversing;fix get_steering_out_rate bug when reversing;['libraries/APM_Control/AP_SteerController.cpp'];1;2
946a0a8e543ca16d2c2b6c58b57d401e00546397;946a0a8e;rover;rover;guided mode refactoring;"guided mode refactoring

add set-desired methods
add get_distance_to_destination
fix to one interation with no update to motors
slow down for turns";['APMrover2/mode.h', 'APMrover2/mode_guided.cpp'];2;164
efe70c8d3a1725ab17162563a2302b7b54010666;efe70c8d;library;navekf3;Fix possible compass nullptr dereference;Fix possible compass nullptr dereference;['libraries/AP_NavEKF3/AP_NavEKF3_Outputs.cpp'];1;3
dffa3d3b40bf2a58089ec997bb642c401c8670b8;dffa3d3b;library;navekf2;Fix possible compass nullptr dereference;Fix possible compass nullptr dereference;['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;4
ee6969939b16fed7adb9f3c9239e43f7063c69b7;ee696993;sub;sub;fix underflow in scheduler;"fix underflow in scheduler

4eee3b1317b954c7c1df16ba2d264e2af695b77d fixed this in Copter";['ArduSub/ArduSub.cpp'];1;2
f7a00b911e1d027d0e4999ce39079189300cac97;f7a00b91;copter;copter;minor format fix for motors.cpp;minor format fix for motors.cpp;['ArduCopter/motors.cpp'];1;6
db7c8439c6262c38c401c6048ac6fbd593e66f57;db7c8439;library;navekf3;Fix bug in wheel odometry timestamp correction;Fix bug in wheel odometry timestamp correction;['libraries/AP_NavEKF3/AP_NavEKF3_Measurements.cpp'];1;3
96d55e0dbeefc0667695bd99c79de1b723d1ba3d;96d55e0d;rover;rover;fix wheel encoder parameter names;"fix wheel encoder parameter names

extra underscore removed";['APMrover2/Parameters.cpp'];1;4
5b605d6e1c6797aab439d207a3ba9637ca12c5c1;5b605d6e;library;notify;Fix for Oreo LED gyro init inidication;"Fix for Oreo LED gyro init inidication

If parameter INS_GYRO_CAL is disabled, usually because operator is
arming on a moving vehicle such as a boat, the Oreo LEDs would wait
indefinitely for a gyro calibration that will never happen.  This
removes that dependency.  The LEDs will strobe blue only when gyros are
actually initializing. Not before.  Consequently, this greatly
simiplifies that portion of the code.";['libraries/AP_Notify/OreoLED_PX4.cpp'];1;33
08a3f55c90c92a5ab52029f4fcaa2528ec3626f8;08a3f55c;library;navekf3;Fix error in scaling of observation error;Fix error in scaling of observation error;['libraries/AP_NavEKF3/AP_NavEKF3_PosVelFusion.cpp'];1;6
9123b6034e50aa6ea48406270aa65b7b2721f97a;9123b603;library;srv_channel;update_aux_servo_function first checks function is valid;"update_aux_servo_function first checks function is valid

This resolves a bug in which the board could become unresponsive if an invalid function is selected";['libraries/SRV_Channel/SRV_Channel_aux.cpp'];1;11
3d13d984104f0c62cb95aa47c3e20c33d5111ca8;3d13d984;rover;rover;steering mode direction fix when reversing;"steering mode direction fix when reversing

this corrects the rotation direction when moving backwards in steering mode so that it's consistent with manual mode";['APMrover2/mode_steering.cpp'];1;19
2d0bce18a81ee152883369e4186385d343f4de84;2d0bce18;library;barometer;rename all local variable with prefix;"rename all local variable with prefix

fix last missing spaces";['libraries/AP_Baro/AP_Baro_SITL.cpp', 'libraries/AP_Baro/AP_Baro_SITL.h'];2;54
35ac86ff8d54fbe605a6e8b1a52468727ee59f51;35ac86ff;library;barometer;fix some style and const correctness;fix some style and const correctness;['libraries/AP_Baro/AP_Baro_SITL.cpp', 'libraries/AP_Baro/AP_Baro_SITL.h'];2;42
0e895f5c7416c0c5a05ddda9c0db28774b72f224;0e895f5c;library;barometer;fix instance shadowing;fix instance shadowing;['libraries/AP_Baro/AP_Baro_SITL.cpp', 'libraries/AP_Baro/AP_Baro_SITL.h'];2;6
22578bd7f0058413aee874fc7484c41d1a557c8b;22578bd7;sub;sub;fix absolute pressure sensor present flag;fix absolute pressure sensor present flag;['ArduSub/GCS_Mavlink.cpp'];1;7
efa59d47f2c09d2f14900dd14e93ae5d3faad77a;efa59d47;rover;rover;fix FS_THR_VALUE min range;fix FS_THR_VALUE min range;['APMrover2/Parameters.cpp'];1;2
2e451eb2bcdbc3d3e5e835aef3ca9e2db4e54989;2e451eb2;rover;rover;fix motor test for pilot passthrough of steering;fix motor test for pilot passthrough of steering;['APMrover2/motor_test.cpp'];1;2
e5b746c7dd5560b0a5c5b8efee4a61e89339ae4a;e5b746c7;library;motorsugv;fix motor test sequence;"fix motor test sequence

motor test sequence starts from 1";['APMrover2/AP_MotorsUGV.h', 'APMrover2/AP_MotorsUGV.cpp'];2;28
ebeb0923cbf5ccbaff090b7bc8caa16b3f9232d7;ebeb0923;rover;rover;motor test gets improved failure explanations;"motor test gets improved failure explanations

Also fix pass through for steering channel";['APMrover2/Rover.h', 'APMrover2/motor_test.cpp'];2;54
202b40562fc40893e9144749c34d2e5cda57f75f;202b4056;library;landing;Fix bad deepstall parameter group;Fix bad deepstall parameter group;['libraries/AP_Landing/AP_Landing_Deepstall.cpp'];1;8
0827b13febe0ab4b68be4fcb8240af97c6e2e5a7;0827b13f;library;navekf3;Fix default behaviour for height origin corrections;"Fix default behaviour for height origin corrections

Previous default was to apply in-flight height origin changes to local position instead of to reported origin height. This caused problems with copters that took off before getting GPS lock.";['libraries/AP_NavEKF3/AP_NavEKF3_Outputs.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3.cpp'];2;10
027552ef44731a847712e1d108854cec18e48640;027552ef;library;navekf2;Fix default behaviour for height origin corrections;"Fix default behaviour for height origin corrections

Previous default was to apply in-flight height origin changes to local position instead of to reported origin height. This caused problems with copters that took off before getting GPS lock.";['libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];2;12
993df82cfab8b255e7a2afee3f1f0aa7a9e6c4bd;993df82c;rover;rover;Fix bad parameter generation for AP_MotorUGV;Fix bad parameter generation for AP_MotorUGV;['APMrover2/Parameters.cpp'];1;2
603e903ccdd8748f8a6a7783e97f451fdd2e3121;603e903c;library;compass;QMC5883 Add internal i2c bus and fix rotation error;QMC5883 Add internal i2c bus and fix rotation error;['libraries/AP_Compass/AP_Compass_QMC5883L.h', 'libraries/AP_Compass/AP_Compass_QMC5883L.cpp', 'libraries/AP_Compass/AP_Compass.cpp'];3;33
cb1b9b667437f1f00626c3df6d93633c845688c2;cb1b9b66;library;gps;Fix SBF race condition on start;"Fix SBF race condition on start

Unsure what the underlying problem is, but the length of the first string in
the initilisation_blob increasing resulted in a race condition, waiting
longer before retrying the message resolves it, but we still need to identify
the underlying problem. This patch just results in the GPS working with current
configurations. Tested against AsteRx-M firmware 3.6.3";['libraries/AP_GPS/AP_GPS_SBF.cpp'];1;3
20889ff8a956ce7cae6ab512b06a0023715075d8;20889ff8;library;apmotors6dof;Add motor reverse parameters for motors 9-12;"Add motor reverse parameters for motors 9-12

Fix overruns found in coverity 145496-99";['libraries/AP_Motors/AP_Motors6DOF.cpp', 'libraries/AP_Motors/AP_Motors6DOF.h'];2;32
bd2ba1565c41572c32b05d687916f0af1da32a73;bd2ba156;library;ac_wpnav;minor format fix;minor format fix;['libraries/AC_WPNav/AC_WPNav.cpp'];1;4
ba8664193acae83a2de5533080658ae65c9bd9aa;ba866419;rover;rover;fix failsafe throttle;fix failsafe throttle;['APMrover2/Steering.cpp'];1;10
6615aee0b15d863e9d57451764b7a0d140a02087;6615aee0;sub;sub;fix wrong GCS_MAVLink fallthrough;"fix wrong GCS_MAVLink fallthrough

Coverity CID 142270";['ArduSub/GCS_Mavlink.cpp'];1;1
9cb672e85e97ecc964ffa9133f04d99841c69323;9cb672e8;library;srv_channel;added doc values for dspoilers;"added doc values for dspoilers

and fix missing Motor9 to Motor12 values";['libraries/SRV_Channel/SRV_Channel.cpp'];1;2
1fc85e9a8c4e6750c67f6cb274f941df64a8f29e;1fc85e9a;rover;rover;adjust skid steer motor mixing, fix rotation direction in reverse;"adjust skid steer motor mixing, fix rotation direction in reverse

balanced prioritisation of throttle vs steering when motors become saturated
direction of turning made consistent with normal (ie non-skid-steered) vehicles

Also includes fixes to motor mixing after peer review";['APMrover2/Steering.cpp'];1;46
0203b4c1b1978a41a708f2a70866957fd0f18ad3;0203b4c1;library;notify;RCOutputRGBLed: remove cork();"RCOutputRGBLed: remove cork()

cork()/push() will be called in the vehicle code.

The issue that led to this fix was as follows:
- on a Linux board (Navio 2) usage of this class didn't yield any PWM on
  the expected outputs on Rover (Copter and Plane worked as expected)

After dicsussion at #6339 rover code was changed (541538f) to use make
proper use of SRV_Channels API.

This fix is also the consequence of the discussion. TL^^DR: the output is
only done when commanded by the vehicle.";['libraries/AP_Notify/RCOutputRGBLed.cpp'];1;7
6c2bfe08cd5ed4edc437cc4f93f4624a155ffbcc;6c2bfe08;library;tracker;move send-logs-via-mavlink code into DataFlash;"move send-logs-via-mavlink code into DataFlash

Also, fix log download";['AntennaTracker/GCS_Mavlink.cpp'];1;8
60c6f8ad6088a6de974ff96d4e766824f5d1ad6f;60c6f8ad;library;gps;fix bug when injecting messages bigger than 255 bytes;"fix bug when injecting messages bigger than 255 bytes

Commit 5261654 changed the used injection method so change this method signature to use uint16 for message length like previous injection method did";['libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS.h'];2;8
9d0fa09d395e384aebd641536df9e18bee14bd3b;9d0fa09d;library;navekf3;Fix calculation of predicted LOS rate in terrain estimator;Fix calculation of predicted LOS rate in terrain estimator;['libraries/AP_NavEKF3/AP_NavEKF3_OptFlowFusion.cpp'];1;4
c69c5440a0378bb48b856a2f25e52f73c9f4530e;c69c5440;library;navekf2;Fix calculation of predicted LOS rate in terrain estimator;Fix calculation of predicted LOS rate in terrain estimator;['libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp'];1;4
4394c5145bb7143cb5b012ac478d05ef2b818fab;4394c514;library;hal_sitl;Fixes bug with uartF.;"Fixes bug with uartF.

uartF _timer_tick() was not being called in the scheduler.";['libraries/AP_HAL_SITL/Scheduler.cpp', 'libraries/AP_HAL_SITL/SITL_State.h'];2;3
ee28e49790c8a5bcd2cfb1f64789bd9c7513ee2f;ee28e497;rover;rover;steering mark floats as float and fix parenthesis;steering mark floats as float and fix parenthesis;['APMrover2/Steering.cpp'];1;16
32dc59baec012e2ed348aea94650e086abed6aa3;32dc59ba;rover;rover;fix throttle slew limit for skid steer out;fix throttle slew limit for skid steer out;['APMrover2/Rover.h', 'APMrover2/Steering.cpp', 'APMrover2/system.cpp'];3;31
2a9eceaf1017f2853490e48cb0573545cb4791f2;2a9eceaf;library;navekf3;Fix bugs causing height drift when using range beacons;Fix bugs causing height drift when using range beacons;['libraries/AP_NavEKF3/AP_NavEKF3_RngBcnFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Measurements.cpp'];2;45
f29951c2bf5019ab9de433e8c167bb3e099ca9ce;f29951c2;copter;copter;fix autotune accel max not being used until reboot;"fix autotune accel max not being used until reboot

Once autotune completes successfully, the discovered acceleration maximums should be used if the pilot tests the tune";['ArduCopter/control_autotune.cpp'];1;3
356a405e2df3b49aebe7260291d3563846788917;356a405e;copter;copter;autotune minor format fix;autotune minor format fix;['ArduCopter/control_autotune.cpp'];1;2
bd0229b7bce518defd3d2394648e070226a1450c;bd0229b7;library;gps;Fix bug in calculation of blended GPS delay;Fix bug in calculation of blended GPS delay;['libraries/AP_GPS/AP_GPS.cpp'];1;2
06d40a7901cc91c17a162518ca227b7ab36ff6b8;06d40a79;library;navekf3;Fix terrain estimator innovation consistency check;Fix terrain estimator innovation consistency check;['libraries/AP_NavEKF3/AP_NavEKF3_OptFlowFusion.cpp'];1;5
ce8e935896fc709b0cff82ef661788ecc53f2917;ce8e9358;library;navekf2;Fix terrain estimator innovation consistency check;Fix terrain estimator innovation consistency check;['libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp'];1;5
284fc0f3c5bb8d22c143fe7d55ea6b9aaea6b878;284fc0f3;library;navekf3;Fix bug in flow fusion for terrain estimation;"Fix bug in flow fusion for terrain estimation

Also remove unused class variables";['libraries/AP_NavEKF3/AP_NavEKF3_OptFlowFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_core.h'];2;6
b7e6e6f95fc9989f5a7b6086d76041813a235091;b7e6e6f9;library;navekf2;Fix bug in flow fusion for terrain estimation;"Fix bug in flow fusion for terrain estimation

Also remove unused class variables";['libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp'];2;6
92cdb541769dc47f6f9d8e920de3672a7f917c9c;92cdb541;plane;plane;Fix a fly away when aborting a landing;"Fix a fly away when aborting a landing

DO_LAND_START -> LAND waypoints in sequence would cause a perpetual abort state
due to the sticky nature of the abort states. If we restart a landing on
purpose while doing an abort, then we can move onto trying to land again.";['ArduPlane/commands_logic.cpp'];1;5
6a01c6519708f3072c9192f6c438f25e3da459ce;6a01c651;library;navekf3;Fix long description of EK3_OGN_HGT_MASK parameter (NFC);Fix long description of EK3_OGN_HGT_MASK parameter (NFC);['libraries/AP_NavEKF3/AP_NavEKF3.cpp'];1;5
7426bdb9b72d9bd5ff04f878d858bc9f3880c17b;7426bdb9;library;navekf2;Fix long description of EK2_OGN_HGT_MASK parameter;Fix long description of EK2_OGN_HGT_MASK parameter;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;5
a199604348db88903221a09df98214e57dfc2b4e;a1996043;library;beacon;fix get_boundary_points num_points;"fix get_boundary_points num_points

Thanks @OXINARF for finding this!";['libraries/AP_Beacon/AP_Beacon.cpp'];1;2
0cba133a1ed4a1c06d09ef5511439e6f174d7f1d;0cba133a;library;navekf3;Fix initialisation of state inhibit flags;Fix initialisation of state inhibit flags;['libraries/AP_NavEKF3/AP_NavEKF3_core.cpp'];1;2
36e7dfb5f66542caeff2ae75bd7b8b32de0f222c;36e7dfb5;library;navekf2;Improve GPS reference height estimator;"Improve GPS reference height estimator

Fix rounding error bug preventing state from updating after initial convergence.
Decouple GPS reference height from published EKf origin height.
Add bitmask parameter to control update and publishing of GPS reference height.";['libraries/AP_NavEKF2/AP_NavEKF2.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp'];8;65
9da3caca476b5f768b643a6a1f1590d7914354e1;9da3caca;library;navekf3;Improve GPS reference height estimator;"Improve GPS reference height estimator

Fix rounding error bug preventing state from updating after initial convergence.
Decouple GPS reference height from published EKf origin height.
Add bitmask parameter to control update and publishing of GPS reference height.";['libraries/AP_NavEKF3/AP_NavEKF3_Outputs.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3.h', 'libraries/AP_NavEKF3/AP_NavEKF3_core.h', 'libraries/AP_NavEKF3/AP_NavEKF3.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_core.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_PosVelFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Measurements.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Control.cpp'];8;63
e7a5dd6a6948d117ee498cbd68d967b8190116f7;e7a5dd6a;library;marvelmind;fix warning in example;fix warning in example;['libraries/AP_Beacon/examples/AP_Marvelmind_test/AP_Marvelmind_test.cpp'];1;11
5d0972f589a67cd6604e7561a99e8e46c82a8c49;5d0972f5;plane;plane;fix implicit cast to double warning in quadplane;fix implicit cast to double warning in quadplane;['ArduPlane/quadplane.cpp'];1;2
914bc53100bf22d71062cca71e1467d4d486956f;914bc531;library;dataflash;fix shadowing of logstructure in SITL;fix shadowing of logstructure in SITL;['libraries/DataFlash/DataFlash.h', 'libraries/DataFlash/DataFlash.cpp'];2;32
3bcc410048dad57c987b33871aa20d2980cb49b6;3bcc4100;library;beacon;fix pozyx west-east processing;fix pozyx west-east processing;['libraries/AP_Beacon/AP_Beacon_Pozyx.cpp'];1;4
3534d0a0ebd448e12d85ce4b1ea041a6882c7b66;3534d0a0;library;landing;Fix missing doc for LAND_TYPE;Fix missing doc for LAND_TYPE;['libraries/AP_Landing/AP_Landing.cpp'];1;2
51fa76d971eee3f843be88f525501cdecdb76e8d;51fa76d9;sub;sub;fixed startup order of setting mavlink system ID;"fixed startup order of setting mavlink system ID

Set sysid from param before you init the serial port so you always output the intended sysid. Ported the same fix as https://github.com/ArduPilot/ardupilot/commit/c01a7718c140b51cb10cbd0010876ec8744636c5";['ArduSub/system.cpp'];1;6
f6b3c00b194df8917b61864272c1246ad1f2de44;f6b3c00b;library;soaring;Fix initialisers in SoaringController. In-line method to get altitude in Variometer.;Fix initialisers in SoaringController. In-line method to get altitude in Variometer.;['libraries/AP_Soaring/AP_Soaring.cpp', 'libraries/AP_Soaring/Variometer.cpp', 'libraries/AP_Soaring/Variometer.h'];3;20
3e2b5269a6e2fd81b6482d4abb617565ff26277e;3e2b5269;library;terrain;fix Coverity issue 91367;"fix Coverity issue 91367

Also converts to using the get_relative_position_D_home() functions rather then attempting to derive home itself";['libraries/AP_Terrain/TerrainIO.cpp', 'libraries/AP_Terrain/AP_Terrain.cpp'];2;24
87c076da4dcab57e5b480857881ea493888fcc9b;87c076da;plane;plane;Fix missing break in GCS_MAVLink;"Fix missing break in GCS_MAVLink

Was causing AOA_SSA to send a landing message as wel";['ArduPlane/GCS_Mavlink.cpp'];1;1
1985dcd3668a05bd8f95c5afd10027e046184910;1985dcd3;library;navekf2;Fix bug in declination fusion;Fix bug in declination fusion;['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;2
478fb60a5bb5c3e067b759fda75b2f18c5953898;478fb60a;library;hal;BeagleBone Blue fix HMC5843 I2C bus number;BeagleBone Blue fix HMC5843 I2C bus number;['libraries/AP_HAL/board/linux.h'];1;2
a3cb6a42c91b3fa772762ecec50ec26bb6ec8ff5;a3cb6a42;library;boardconfig;drop target temperature for cube to 45;"drop target temperature for cube to 45

getting to 60 was taking far too long (15 minutes or so). 45 is more
achievable.

This is a result of the fix to the invensense temperature detection
code";['libraries/AP_BoardConfig/px4_drivers.cpp'];1;4
a0c5ac1949347541d41f21d805db8141ecdf86e7;a0c5ac19;copter;copter;fix compassmot for oneshot ESCs;fix compassmot for oneshot ESCs;['ArduCopter/compassmot.cpp'];1;2
010665f9153472a28ef072e20b402196a2b5368e;010665f9;copter;copter;fix esc calibration for one-shot;"fix esc calibration for one-shot

the cork and push need to be done from the vehicle level";['ArduCopter/esc_calibration.cpp'];1;6
ca8ae06bba85f39e4d9b1b464395100204299b60;ca8ae06b;copter;copter;minor format fix to landing-gear update function;minor format fix to landing-gear update function;['ArduCopter/landing_gear.cpp'];1;2
aaa26af3f41de2263b467e74b4b1df739bb120e3;aaa26af3;rover;rover;Fix constructor initialization order;Fix constructor initialization order;['APMrover2/Rover.cpp'];1;2
436d0f8c846f3fcbce8be15903e72000c681a560;436d0f8c;copter;copter;radio fix passthrough range on heli/coax/single;radio fix passthrough range on heli/coax/single;['ArduCopter/radio.cpp'];1;2
888cd8e31c8fa5c31f2d5788b6781f157627b16e;888cd8e3;sub;sub;Fix fs_pilot_timeout parameter metadata;Fix fs_pilot_timeout parameter metadata;['ArduSub/Parameters.cpp'];1;2
d58a05644406dc536aeb1dd88559336408ca00ae;d58a0564;sub;sub;Fix ekf failsafe parameter metadata;Fix ekf failsafe parameter metadata;['ArduSub/Parameters.cpp'];1;2
0e7f12049caa0b41d84bd87865ba1b4300e6e41f;0e7f1204;copter;copter;fix esc calibration is safety switch has been disabled;fix esc calibration is safety switch has been disabled;['ArduCopter/esc_calibration.cpp'];1;8
a3450a955d23ff743f5c55fa17bc7fad3d4b89cf;a3450a95;copter;copter;fix LED notify during auto esc calibration;fix LED notify during auto esc calibration;['ArduCopter/Copter.h', 'ArduCopter/esc_calibration.cpp'];2;34
49cc0965c04795eda51cfa87b0022177a84615de;49cc0965;library;inertialsensor;separate handling of FIFO and non-FIFO sensors;"separate handling of FIFO and non-FIFO sensors

FIFO sensors produce data at a well known rate, but samples come in
bunches, so we can't use the system clock to calculate deltaT.

non-FIFO sensors produce data when we sample them, but that rate is
less regular due to timing jitter.

For FIFO sensors this changes makes us use a learned sample rate,
which allows for different clock speeds on sensor and system board.

For non-FIFO sensors we use the system clock to measure deltaT

the overall effect is a fix for sensors that produce samples at other
than the claimed datasheet rate.";['libraries/AP_InertialSensor/AP_InertialSensor_Backend.h', 'libraries/AP_InertialSensor/AP_InertialSensor.h', 'libraries/AP_InertialSensor/AP_InertialSensor_Invensense.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_Backend.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_LSM9DS0.cpp'];5;161
36a633bc7a2027302685b877f0816938d6bd5d58;36a633bc;sub;sub;call BoardConfig.init_safety() at end of startup;"call BoardConfig.init_safety() at end of startup

this fixes a bug where motors can start on soft reboot";['ArduSub/system.cpp'];1;3
3eeff938b0a07127ce81b7809295cddac0e76e23;3eeff938;plane;plane;call BoardConfig.init_safety() at end of startup;"call BoardConfig.init_safety() at end of startup

this fixes a bug where motors can start on soft reboot";['ArduPlane/system.cpp'];1;2
10b89db49845b57b2c47ca10250126758d851290;10b89db4;copter;copter;call BoardConfig.init_safety() at end of startup;"call BoardConfig.init_safety() at end of startup

this fixes a bug where motors can start on soft reboot";['ArduCopter/system.cpp'];1;3
c5d17a9d927bcbcd1eea4ce052afe3dacb3ec3f4;c5d17a9d;rover;rover;call BoardConfig.init_safety() at end of startup;"call BoardConfig.init_safety() at end of startup

this fixes a bug where motors can start on soft reboot";['APMrover2/system.cpp'];1;3
f151fd369174e7345cad5bf244831267f377bd9d;f151fd36;library;antennatracker;call BoardConfig.init_safety() at end of startup;"call BoardConfig.init_safety() at end of startup

this fixes a bug where motors can start on soft reboot";['AntennaTracker/system.cpp'];1;2
1301b9797ac3cb445f50209f87b784dcdad7402d;1301b979;library;navekf3;Fix solution validity reporting bug;"Fix solution validity reporting bug

Fixes bug that causes relative position status to report as false when using optical flow and using range finder as the primary height sensor.";['libraries/AP_NavEKF3/AP_NavEKF3_OptFlowFusion.cpp'];1;4
082f429da3c4b6fe4037e7bd093d965d2a27002e;082f429d;library;navekf2;Fix solution validity reporting bug;"Fix solution validity reporting bug

Fixes bug that causes relative position status to report as false when using optical flow and using range finder as the primary height sensor.";['libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp'];1;4
3ad5c3775e6f06026e99daf61771555a384b9034;3ad5c377;library;proximity;rename get_distances to get_horizontal_distances;"rename get_distances to get_horizontal_distances

Also fix existing bug in return";['libraries/AP_Proximity/AP_Proximity.cpp', 'libraries/AP_Proximity/AP_Proximity_Backend.h', 'libraries/AP_Proximity/AP_Proximity.h', 'libraries/AP_Proximity/AP_Proximity_Backend.cpp'];4;42
949aa4d9ca900f93000b4f3b1f476dcfbbd1a8b7;949aa4d9;library;frsky_telem;replace VDOP with extra GPS status bits;"replace VDOP with extra GPS status bits

This removes VDOP (not really that useful) and replaces two of those
bits with GPS status info that now allows to differentiate between 3D
fix, DGPS, RTK Float, and RTK Fixed. This is written to maximize
backwards compatibility (by not shifting any other bits of the
gps_status variable)";['libraries/AP_Frsky_Telem/AP_Frsky_Telem.h', 'libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];2;8
008e6311478adaac1111250e74e6f7a2388bfa7b;008e6311;library;hal_linux;Util: fix overriden function signature;"Util: fix overriden function signature

While at it, add final and override to mark this as being the overriden
final implementation of this method.

Thanks to Phillip Khandeliants (@khandeliants) for reporting.";['libraries/AP_HAL_Linux/Util.h'];1;2
6f952fe3ddfa2ca79d9bc80dcf4df8ebe2583c80;6f952fe3;library;hal_linux;fix checking wrong value for pthread function;"fix checking wrong value for pthread function

Thanks to Phillip Khandeliants (@khandeliants) for reporting.";['libraries/AP_HAL_Linux/Thread.cpp'];1;2
7a6318434f41b2bdf2fc8ce0b6a72ab0cb5b3703;7a631843;sub;sub;Fix throttle value in some calls to;"Fix throttle value in some calls to
pos_control.relax_alt_hold_controllers";['ArduSub/control_auto.cpp', 'ArduSub/control_guided.cpp'];2;6
01e01d1df9244f3bfd5dbdb08190638e5626610d;01e01d1d;sub;sub;Fix logging bug where only one log was created after first arm;Fix logging bug where only one log was created after first arm;['ArduSub/motors.cpp', 'ArduSub/Log.cpp'];2;12
6a443fcce4fce50996f6d495ad78c8cda3f74fdb;6a443fcc;sub;sub;Fix redundant check in MAV_CMD_MISSION_START;Fix redundant check in MAV_CMD_MISSION_START;['ArduSub/GCS_Mavlink.cpp'];1;3
c73584c9b83a2e6e0aba2151daa6fc23fbb56d28;c73584c9;library;cpuinfo;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['Tools/CPUInfo/CPUInfo.cpp'];1;157
a6fe6024c1921d7fa1faa71aab8f6e4b03416962;a6fe6024;library;storagemanager;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/StorageManager/examples/StorageTest/StorageTest.cpp'];1;7
90661c528a9359b6f73a8ba853907e8e96a922b2;90661c52;library;rc_channel;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/RC_Channel/examples/RC_Channel/RC_Channel.cpp'];1;3
720edc0fde080f3f0b094feff89d1df0a29281e3;720edc0f;library;pid;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/PID/examples/pid/pid.cpp'];1;7
b2c8bc8074fabfb0fc314d2b16dc22d9330294d6;b2c8bc80;gcs;gcs_mavlink;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/GCS_MAVLink/examples/routing/routing.cpp'];1;3
892a999ba54aaaaac27d1d4e2e56f2306a3c029c;892a999b;library;filter;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/Filter/examples/LowPassFilter2p/LowPassFilter2p.cpp', 'libraries/Filter/examples/Derivative/Derivative.cpp', 'libraries/Filter/examples/LowPassFilter/LowPassFilter.cpp', 'libraries/Filter/examples/Filter/Filter.cpp'];4;56
49c9e3c7682195c8ada5e34de2597eaed97deef6;49c9e3c7;library;dataflash;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/DataFlash/examples/DataFlash_AllTypes/DataFlash_AllTypes.cpp'];1;2
4a2b90b707e0dcc554d858f367efc22e1268a4b6;4a2b90b7;library;rangefinder;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_RangeFinder/examples/RFIND_test/RFIND_test.cpp'];1;7
7abd22a33e641109027a1d36f876a6a4e398804a;7abd22a3;library;parachute;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Parachute/examples/AP_Parachute_test/AP_Parachute_test.cpp'];1;3
45ca91808dc0151770a48e003eae13b55ca35267;45ca9180;library;opticalflow;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_OpticalFlow/examples/AP_OpticalFlow_test/AP_OpticalFlow_test.cpp'];1;3
2f50e865c2cdc9191451703c80f6ba1212563f52;2f50e865;library;notify;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Notify/examples/ToshibaLED_test/ToshibaLED_test.cpp', 'libraries/AP_Notify/examples/AP_Notify_test/AP_Notify_test.cpp'];2;26
0be022694a3f4b8480e521f89aca9524d25e034f;0be02269;library;mount;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Mount/examples/trivial_AP_Mount/trivial_AP_Mount.cpp', 'libraries/AP_Module/examples/ModuleTest/ModuleTest.cpp'];2;6
f2812c1efd77906f33b0bb3db50c622515e5dafb;f2812c1e;library;math;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Math/examples/eulers/eulers.cpp', 'libraries/AP_Math/examples/polygon/polygon.cpp', 'libraries/AP_Math/examples/location/location.cpp', 'libraries/AP_Math/examples/rotations/rotations.cpp'];4;328
8d357983ee30120469f2e4fccf68fe11e5cb8707;8d357983;library;hal_linux;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_HAL_Linux/examples/GPIOTest/GPIOTest.cpp'];1;4
34199b4af0b052357780fc134155899a3ca3ac72;34199b4a;library;hal;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_HAL/examples/RCInput/RCInput.cpp', 'libraries/AP_HAL/examples/RCOutput2/RCOutput.cpp', 'libraries/AP_HAL/examples/RCInputToRCOutput/RCInputToRCOutput.cpp', 'libraries/AP_HAL/examples/RCOutput/RCOutput.cpp', 'libraries/AP_HAL/examples/Storage/Storage.cpp', 'libraries/AP_HAL/examples/Printf/Printf.cpp', 'libraries/AP_HAL/examples/AnalogIn/AnalogIn.cpp', 'libraries/AP_HAL/examples/UART_test/UART_test.cpp'];8;101
292fa5f4137ca85fe6e9a593ea8abec0df8f58d2;292fa5f4;library;gps;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_GPS/examples/GPS_AUTO_test/GPS_AUTO_test.cpp', 'libraries/AP_GPS/examples/GPS_UBLOX_passthrough/GPS_UBLOX_passthrough.cpp'];2;14
7fb816c812b3de28131aa9d783fa533d8a2bc843;7fb816c8;library;declination;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Declination/examples/AP_Declination_test/AP_Declination_test.cpp'];1;53
d3e27d87208c4c4fb11364f275fc1fa546a5c218;d3e27d87;library;compass;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Compass/examples/AP_Compass_test/AP_Compass_test.cpp'];1;12
2200302081529e7b098de39d5af851b99f862abe;22003020;library;common;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Common/examples/AP_Common/AP_Common.cpp'];1;22
3f4a3e535b86b639098525d3286ad969990c1853;3f4a3e53;library;airspeed;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_Airspeed/examples/Airspeed/Airspeed.cpp'];1;5
fede727d38fb903d09743761b074d465430abc6b;fede727d;library;ahrs;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.cpp'];1;25
320c5e1b968b2ac3b04039f396299ca0fa95cad3;320c5e1b;library;ac_pid;example fix travis warning;"example fix travis warning
missing function declaration
implicit cast
some style fix";['libraries/AC_PID/examples/AC_PID_test/AC_PID_test.cpp'];1;11
9c587d8d678edbd78e79fd3b752bb87be4a9dafb;9c587d8d;library;battmonitor;fix warning in example;fix warning in example;['libraries/AP_BattMonitor/examples/AP_BattMonitor_test/AP_BattMonitor_test.cpp'];1;13
1adf247a608ea2b90f00150d78a5bc4ae80b2185;1adf247a;library;boardconfig;fix board type number for aerofc;"fix board type number for aerofc

Types 7-12 are being used by vrbrain boards. Even if they are inside
another ifdef, they can't be the same because it's used by the BRD_TYPE
parameter.  Use 13 for aerofc since it was already the one being used in
the parameter description.

Thanks to Michael du Breuil for noticing it.";['libraries/AP_BoardConfig/AP_BoardConfig.h'];1;5
70ab44a048c8631578fa7c32c96427bbc27fdaa3;70ab44a0;library;antennatracker;fix for mavlink update;fix for mavlink update;['AntennaTracker/GCS_Mavlink.cpp'];1;3
6b523cbd46033a8b16de71a4b53e55ca5ffe0a04;6b523cbd;library;gps;Fix a memory leak in QURT GPS;"Fix a memory leak in QURT GPS

Fixes part of #6000";['libraries/AP_GPS/AP_GPS_QURT.cpp'];1;4
fc9eb797bee2bc716fe170b764d068816440a533;fc9eb797;sub;sub;Fix redundant call;Fix redundant call;['ArduSub/commands.cpp'];1;3
33d0fa3e82058e839abb2cd5d7c4f479c8c4c7d2;33d0fa3e;library;ahrs;Fix an index out of bounds;"Fix an index out of bounds

Coverity 137817, getPrimaryCoreIMUIndex() can return -1, which is then invalid to pass to get_delta_velocity_dt";['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;18
4cb43b1c2774acacda5b8726d4b59f06f81b0a75;4cb43b1c;library;dataflash;correct repeated FMT logging bug;correct repeated FMT logging bug;['libraries/DataFlash/DataFlash_Backend.h', 'libraries/DataFlash/DataFlash_MAVLink.h'];2;4
6b4a46d467bf26a48322cc86ff2dbd276e60f28f;6b4a46d4;library;battmonitor;fix to use the return value of get_pec_support;fix to use the return value of get_pec_support;['libraries/AP_BattMonitor/AP_BattMonitor_SMBus_Maxell.cpp'];1;63
ec5bbbd2d026c8ebead9cc5e41b8679023a89ac4;ec5bbbd2;library;dataflash;fix BAR2 and BAR3 message format after baro log struct changed;fix BAR2 and BAR3 message format after baro log struct changed;['libraries/DataFlash/LogStructure.h'];1;4
9979e4bbe59fae5f728e24acda0a38f8d2ac663b;9979e4bb;library;ac_precland;fix usage of distance_to_target;fix usage of distance_to_target;['libraries/AC_PrecLand/AC_PrecLand.cpp'];1;7
c37209a8d5eef1887bc32a2a2cd83563920f0212;c37209a8;library;barometer;Limit ground temperature used for the altitude;"Limit ground temperature used for the altitude

Fix an incorrect EAS2TAS that was double counting altitude";['libraries/AP_Baro/AP_Baro.h', 'libraries/AP_Baro/AP_Baro.cpp'];2;104
353202e03c29d7a6d99f38b379242a91046db43c;353202e0;copter;copter;Fix parameter metadata;Fix parameter metadata;['ArduCopter/Parameters.cpp'];1;2
1b00dfb642762e30a36e40d236b5b05299c1dbfc;1b00dfb6;library;gps;Fix parameter metadata;Fix parameter metadata;['libraries/AP_GPS/AP_GPS.cpp'];1;2
a9a85213831382c6b57b48c068dde6d358a61031;a9a85213;library;opticalflow;Fix parameter metadata;Fix parameter metadata;['libraries/AP_OpticalFlow/OpticalFlow.cpp'];1;2
646d68c76d8c095325b90bac3c6e216031eb4ebf;646d68c7;library;navekf2;Fix parameter metadata;Fix parameter metadata;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;4
84e5e088de9fb3d58fef8e353b6ace17aebee5ec;84e5e088;library;boardconfig;Fix parameter metadata;Fix parameter metadata;['libraries/AP_BoardConfig/AP_BoardConfig.cpp'];1;2
af97a3974bddb507b4565627b326d4e9002af4af;af97a397;plane;plane;initialise target height correctly on quadplane transition;"initialise target height correctly on quadplane transition

this fixes a bug where a plane in QSTABILIZE would drop suddenly if
switched to FBWA when the target altitude had not been initialised";['ArduPlane/quadplane.cpp'];1;6
c0238be34599e20e9d07a560f6632a59f8db42e4;c0238be3;library;frsky_telem;fix sending messages 3 times;"fix sending messages 3 times

Initialize variable
Also some small style changes";['libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];1;17
2aec41e0efba4cd11d85239c884ad4011493ae80;2aec41e0;library;hal_sitl;Fix SIM_GPS_DISABLE not disabling the ublox GPS with PVT support;Fix SIM_GPS_DISABLE not disabling the ublox GPS with PVT support;['libraries/AP_HAL_SITL/sitl_gps.cpp'];1;2
41fe4d0515cb34e206501701089aeed3c84df553;41fe4d05;library;landing;fix to remove reorder warning;fix to remove reorder warning;['libraries/AP_Landing/AP_Landing.h'];1;6
d612209c19e2f68bd37833fa9e2ee8a677269ad9;d612209c;sitl;sitl;Gazebo fix implicit cast;Gazebo fix implicit cast;['libraries/SITL/SIM_Gazebo.cpp', 'libraries/SITL/SIM_Gazebo.h'];2;42
afb488c6274768b9770a8891846b7172586c2315;afb488c6;library;gps;fix implicit conversion warning from float to double;fix implicit conversion warning from float to double;['libraries/AP_GPS/AP_GPS.cpp'];1;6
491b545fabb5e6565d519081a31f0706429402d4;491b545f;sitl;sitl;fix gimbal connection on Windows;fix gimbal connection on Windows;['libraries/SITL/SIM_Gimbal.cpp'];1;5
304c9b6e7236138c15fe7d69e534bb2ed3f8882f;304c9b6e;rover;rover;Fixed a bug in reverse;"Fixed a bug in reverse

If a user was driving in reverse and when into an auto mission the
rover would try to do the whole mission in reverse.  This fixes that.";['APMrover2/Rover.h', 'APMrover2/commands_logic.cpp', 'APMrover2/APMrover2.cpp', 'APMrover2/system.cpp'];4;20
3410db50225289673c74c445b73f0ab4fb139a06;3410db50;rover;rover;Fix motor_active check to checkout throttle output servo;Fix motor_active check to checkout throttle output servo;['APMrover2/control_modes.cpp'];1;4
2ef647381601563e90aa8683cee631952b8e4c12;2ef64738;library;servorelayevents;fix do_set_servo;"fix do_set_servo

this was broken by the recent SRV_Channels changes

thanks to Jacob for noticing this!";['libraries/AP_ServoRelayEvents/AP_ServoRelayEvents.cpp'];1;22
7afcbf51ecbda7083c47f92ab73a76c52efdc08a;7afcbf51;library;math;also fix SEC_PER_WEEK;also fix SEC_PER_WEEK;['libraries/AP_Math/definitions.h'];1;2
1982285e237a0f6cf6f742342d3660e590e0351f;1982285e;library;math;update MSEC_PER_SEC definition to fix GPS time calcs;update MSEC_PER_SEC definition to fix GPS time calcs;['libraries/AP_Math/definitions.h'];1;2
b82098ca44bcfe18b92a38d3baec9dfbf2eb5281;b82098ca;library;gps;fix blended ground course;"fix blended ground course

Thanks to jyl58 for finding this";['libraries/AP_GPS/AP_GPS.cpp'];1;2
3e628f30ffa6fca7bcc9d0430a675921f0af57ec;3e628f30;library;gps;fix blending when accuracy reported as 1mm;"fix blending when accuracy reported as 1mm

Thanks to Michael DuBreuil for suggesting the fix";['libraries/AP_GPS/AP_GPS.cpp'];1;6
b7ad8da9b9e0602697200d06914eac66aebaa320;b7ad8da9;library;gps;minor bracketing fix;"minor bracketing fix

This silences a warning from eclipse
No functional change";['libraries/AP_GPS/AP_GPS.cpp'];1;2
ef1399a52ff63d3562e9f75c1388b7e26b21ea60;ef1399a5;library;gps;fixups after peer review;"fixups after peer review

This includes these changes:
RATE_MS, RATE_MS2 parameter description Range minimum reduced to 50
_blend_health_counter is reset to 0 if blending is disabled
GPS_MAX_RECEIVERS is replaced with GPS_BLENDED_INSTANCE where appropriate
simplify all_consistent functions check of number of receivers
calc_blended_weights fix for initial check of how many receivers we have
remove unnecessary setting of GPS last time when blending fails
remove RebootRequired from AUTO_SWITCH param description";['libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS.h'];2;145
6b26bdd454597b79d4d469ec9f441cf14da19c33;6b26bdd4;library;gps;Add option to blend  multiple GPS receivers;"Add option to blend  multiple GPS receivers

Fix pre-existing bug in hard switch logic
Update GPS_AUTO_SWITCH description
protect against zero accuracy estimates returned by GPS drivers";['libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS.h'];2;598
c1959952b363859f764b09a16302229d3538e3d0;c1959952;sub;sub;Bug fix for camera_tilt_smooth() conflict with RC_CHANNELS_OVERRIDE;Bug fix for camera_tilt_smooth() conflict with RC_CHANNELS_OVERRIDE;['ArduSub/joystick.cpp', 'ArduSub/ArduSub.cpp', 'ArduSub/Sub.h'];3;30
7a8783f35ead83a6a908a3f40a948e265ee6b317;7a8783f3;library;navekf3;Fix bug preventing reset to GPS;"Fix bug preventing reset to GPS

This fixes a bug that prevented the reset to the GPS position occurring if GPS velocity observations were still passing innovation consistency checks.";['libraries/AP_NavEKF3/AP_NavEKF3_Control.cpp'];1;3
b7c4945000bc466100f83057901994f73afd64ab;b7c49450;library;navekf2;Fix bug preventing reset to GPS;"Fix bug preventing reset to GPS

This fixes a bug that prevented the reset to the GPS position occurring if GPS velocity observations were still passing innovation consistency checks.";['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;3
e8c5612587e26d44993c5e6bc1331fd25c7931cf;e8c56125;copter;copter;fix reference to PosControl param descriptions;"fix reference to PosControl param descriptions

No functional change";['ArduCopter/Parameters.cpp'];1;4
7b3af5863444b8cbf44ff0bab419590837be2c8f;7b3af586;library;ac_avoidance;fix AVOID_ANGLE_MAX parameter description;fix AVOID_ANGLE_MAX parameter description;['libraries/AC_Avoidance/AC_Avoid.cpp'];1;2
eb746eaeef95360ccfad549252bd9785f2eda289;eb746eae;plane;plane;fix SYSID_ENFORCE parameter description;fix SYSID_ENFORCE parameter description;['ArduPlane/Parameters.cpp'];1;2
b8f24fba98b00eb62a3dbf2a9fd0876f620f3fed;b8f24fba;rover;rover;fix SYSID_ENFORCE parameter description;fix SYSID_ENFORCE parameter description;['APMrover2/Parameters.cpp'];1;2
627e3faf41e8f2daf450056e49ed04c1fed6699f;627e3faf;copter;copter;fix SYSID_ENFORCE parameter description;fix SYSID_ENFORCE parameter description;['ArduCopter/Parameters.cpp'];1;2
bc8943201949a841fa13e1083ea87f3a7d6070b1;bc894320;tools;replay;fix rangefinder instantiation;fix rangefinder instantiation;['Tools/Replay/Replay.h'];1;2
da03cf29d6b64b6d52bc7e70dcecabec86ef160e;da03cf29;library;notify;Display: pad GPS status/sat count to fix stray chars;Display: pad GPS status/sat count to fix stray chars;['libraries/AP_Notify/Display.cpp'];1;4
06b394bf43801b1fa091a78a0739c9d9fe73559c;06b394bf;library;jsbutton;Fix param metadata for relay enum values;Fix param metadata for relay enum values;['libraries/AP_JSButton/AP_JSButton.cpp'];1;4
a4c5247fba745fa4c7706a1680d9575e959a0dcb;a4c5247f;plane;plane;prepare 3.8.0-beta3;"prepare 3.8.0-beta3

key fix is the servo slew rate bug";['ArduPlane/version.h'];1;4
fb8a61df2279117e5fa1d1553ebcca9e7350573e;fb8a61df;sub;sub;Fix RC and SERVO parameter paths;Fix RC and SERVO parameter paths;['ArduSub/Parameters.cpp'];1;4
ea05804a94ea75334342aaa5e9f9d6be04437c5f;ea05804a;sub;sub;fix frame report and -Wundef warning;fix frame report and -Wundef warning;['ArduSub/setup.cpp'];1;37
544ea2ecd4e2e42295f242214f8b911b5560137e;544ea2ec;sub;sub;Fix parameter metadata;Fix parameter metadata;['ArduSub/Parameters.cpp'];1;14
4278ae8a6451fbf14a7cf60d15f7b80f35f00f74;4278ae8a;sub;sub;Fix surface/bottom detector logic;Fix surface/bottom detector logic;['ArduSub/surface_bottom_detector.cpp'];1;12
fdf9e5fde08934d856259a95dbd6f30a499c8123;fdf9e5fd;sub;sub;Fix unused variables in acro and stabilize;Fix unused variables in acro and stabilize;['ArduSub/control_acro.cpp', 'ArduSub/control_stabilize.cpp'];2;2
b4250bac6f6e6eb7914cd215c7ad52e7e9378613;b4250bac;sub;sub;Fix parameter metadata;Fix parameter metadata;['ArduSub/Parameters.cpp'];1;10
e1882d95969ebf120035f6fd9639940c67cac1ab;e1882d95;sub;sub;Fix camera low pass filter and allow button holding.;Fix camera low pass filter and allow button holding.;['ArduSub/joystick.cpp', 'ArduSub/ArduSub.cpp', 'ArduSub/control_manual.cpp', 'ArduSub/Sub.h'];4;78
accbbce304f7dcb784bd2d06ec7a31bdec17be2c;accbbce3;sub;sub;Turn counter (#23);"Turn counter (#23)

* Sub: Add turn counter to avoid tether tangling.

* Sub: Add turn counter.

* Sub: Bug fix in turn counter.";['ArduSub/turn_counter.cpp', 'ArduSub/ArduSub.cpp', 'ArduSub/Sub.h'];3;69
d3f5f59b8c6933105ff97d281783de7ac1d486ab;d3f5f59b;sub;sub;fix surface bottom detection;"fix surface bottom detection

output_min() to make sure throttle limits are false when disarmed";['ArduSub/surface_bottom_detector.cpp', 'ArduSub/control_stabilize.cpp'];2;21
7265351a0d3e5b7a15e0b2a1371eca2ed8ac49cd;7265351a;sub;sub;Fix joystick scaling to 1100-1900 range;Fix joystick scaling to 1100-1900 range;['ArduSub/joystick.cpp'];1;2
7e33957af20a32afd457009d1a259344a55afe66;7e33957a;sub;sub;Fix typo in defines.h;Fix typo in defines.h;['ArduSub/defines.h'];1;3
3c6b6ba8e9d1fe0c3c4fd915cf7c594559b9c512;3c6b6ba8;sub;sub;Fix handling of SET_HOME_POSITION;Fix handling of SET_HOME_POSITION;['ArduSub/GCS_Mavlink.cpp'];1;2
577240b8d4d25093fa730519408dbab250572a5f;577240b8;sub;sub;Fix units for surface_depth parameter (cm);Fix units for surface_depth parameter (cm);['ArduSub/Parameters.cpp'];1;4
0c73ad5f4bf65ca5907a40b0c02ee35a64109326;0c73ad5f;sub;sub;Fix units for surface depth;Fix units for surface depth;['ArduSub/surface_bottom_detector.cpp', 'ArduSub/config.h', 'ArduSub/control_althold.cpp'];3;6
fa4adee7a026cbb5332ed57971adcbf37cee2faf;fa4adee7;sub;sub;fix surface units for alt_hold;fix surface units for alt_hold;['ArduSub/surface_bottom_detector.cpp', 'ArduSub/control_althold.cpp'];2;20
c7bd04966af78987143cd610dd52cc074cedb4cc;c7bd0496;sub;sub;Temporary fix for nav check arming failure;Temporary fix for nav check arming failure;['ArduSub/arming_checks.cpp'];1;1
321e92cf4c380568b4248ebd306be7b360b5e873;321e92cf;sub;sub;Minor bug fix in radio.;Minor bug fix in radio.;['ArduSub/radio.cpp'];1;7
02b806927043b95d23c89a677fffd38cf7840cb0;02b80692;sub;sub;Fix ADSB file for compilation.;Fix ADSB file for compilation.;['ArduSub/adsb.cpp'];1;4
29b06d2d4a986ba1cde33c93e66a90fb71aed1c5;29b06d2d;library;srv_channel;fixed output slew rate handling;"fixed output slew rate handling

this fixes a bug that happens when the RC output speed is much lower
than the main loop speed, such as with forward throttle for
quadplanes. We need to base the slew on the last sent output, not the
last value read back (at 50Hz) from the IO board, or we will slew the
channel at 6x to 8x slower than the correct rate.";['libraries/SRV_Channel/SRV_Channel_aux.cpp'];1;2
97145f20fcf64031005bb2892b7796493f272611;97145f20;plane;plane;fix startup of CLI menu system;fix startup of CLI menu system;['ArduPlane/system.cpp', 'ArduPlane/Plane.cpp', 'ArduPlane/GCS_Plane.cpp', 'ArduPlane/GCS_Plane.h'];4;17
23f959b92fefbc61b9d011bd0b0e185941521f1b;23f959b9;library;navekf3;fix copied parameter descriptions;fix copied parameter descriptions;['libraries/AP_NavEKF3/AP_NavEKF3.cpp'];1;4
8c7b214d71e5cce6445578a01141e9a462c5a124;8c7b214d;library;battmonitor;fix param description;fix param description;['libraries/AP_BattMonitor/AP_BattMonitor.cpp'];1;4
18b54467657241669c05052af4e454419ac6c1f4;18b54467;library;camera;Fix an incorrect label on CAM_DURATION;Fix an incorrect label on CAM_DURATION;['libraries/AP_Camera/AP_Camera.cpp'];1;2
7a1cbf76d34eb9d3e0e99d4f515c3218ac7d5ea6;7a1cbf76;plane;plane;Remove ALT_MIX;"Remove ALT_MIX

Closes #4998, and fix a tab/spaces error on the previous parameter";['ArduPlane/Parameters.cpp', 'ArduPlane/Parameters.h'];2;24
9535b45cc9e81d5a9595e1012c5ab9f7dcd1b232;9535b45c;library;inertialsensor;examples: fix double to float warnings;"examples: fix double to float warnings

While at it add function prototype.";['libraries/AP_InertialSensor/examples/INS_generic/INS_generic.cpp'];1;41
dd98fc75a9ae3c4bd5bcd984dd21e4c964fc3195;dd98fc75;library;compass;BMM150: fix sampling time;"BMM150: fix sampling time

We configure the sensor with an ODR of 30 Hz. There's no need to keep
calling the update function at 100Hz.";['libraries/AP_Compass/AP_Compass_BMM150.cpp'];1;2
93aa40a9e0d889a7095e1d237aca9189b606a8c6;93aa40a9;library;ahrs;Fix EKF3 gyro bias reporting and improve code clarity;Fix EKF3 gyro bias reporting and improve code clarity;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp', 'libraries/AP_AHRS/AP_AHRS_NavEKF.h'];2;58
7ea0baefb1022ebfa22006454bd3aab376c809a7;7ea0baef;library;gps;re-fix SBP fix status;re-fix SBP fix status;['libraries/AP_GPS/AP_GPS_SBP.cpp'];1;4
512bd08326e1aaf4d043832dc1bffbbc5228888f;512bd083;library;gps;fix SBP supported status;fix SBP supported status;['libraries/AP_GPS/AP_GPS_SBP.h', 'libraries/AP_GPS/AP_GPS_SBP.cpp'];2;6
52e8f687d9c9f416b8db175df3f542283474eae9;52e8f687;library;navekf3;fix logic bug introduced by magnetometer use changes;fix logic bug introduced by magnetometer use changes;['libraries/AP_NavEKF3/AP_NavEKF3_MagFusion.cpp'];1;2
8688d1ddac69fbfa25fac17dace601cd7dd077d9;8688d1dd;library;navekf3;Improve range finder selection logic;"Improve range finder selection logic

Fixes bug that could leave it locked out of range finder use.";['libraries/AP_NavEKF3/AP_NavEKF3_PosVelFusion.cpp'];1;16
e2757c17c89f8d979140ca2137527fbd5bc36dd1;e2757c17;library;ahrs_navekf;fix ekf variable naming and initialisation;fix ekf variable naming and initialisation;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp', 'libraries/AP_AHRS/AP_AHRS_NavEKF.h'];2;64
a8fd1d8bcd6f10d945ed90fe57fe925bd10ce38c;a8fd1d8b;library;navekf3;fix potential time-stamping bug;"fix potential time-stamping bug

Use a consistent time reference";['libraries/AP_NavEKF3/AP_NavEKF3_Measurements.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_core.cpp'];2;5
eedfe13f9cc9bfbb5535a90230d20ab31d449817;eedfe13f;library;notify;fix ToshibaLED_I2C and check both I2C buses;"fix ToshibaLED_I2C and check both I2C buses

the rgb value was never being set meaning the led was always off
external bus is checked first";['libraries/AP_Notify/ToshibaLED_I2C.cpp'];1;21
d1434602a5716f00a9fd3ca1417a5cf013b31e7e;d1434602;library;tecs;bug fix - use takeoff integrator during land abort;bug fix - use takeoff integrator during land abort;['libraries/AP_TECS/AP_TECS.cpp'];1;2
1fc0dbe0bd5e299705f549a448874f0d2639f19c;1fc0dbe0;library;gps;fix GSOF highest supported status;fix GSOF highest supported status;['libraries/AP_GPS/AP_GPS_GSOF.h'];1;2
855d91145a89a76ba89e7ac6f0d427799bed11ed;855d9114;library;gps;ublox - fix incorrect step ordering;ublox - fix incorrect step ordering;['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h'];2;80
1c1e6e939823f00b1e4730f887fad76b4bd25d73;1c1e6e93;library;gps;Support more fix types;Support more fix types;['libraries/AP_GPS/AP_GPS_NOVA.h', 'libraries/AP_GPS/AP_GPS_ERB.cpp', 'libraries/AP_GPS/AP_GPS_SBP.cpp', 'libraries/AP_GPS/AP_GPS_NOVA.cpp', 'libraries/AP_GPS/AP_GPS_SBF.cpp', 'libraries/AP_GPS/AP_GPS_GSOF.cpp', 'libraries/AP_GPS/AP_GPS_GSOF.h', 'libraries/AP_GPS/AP_GPS_ERB.h', 'libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS.h', 'libraries/AP_GPS/AP_GPS_SBP.h', 'libraries/AP_GPS/AP_GPS_UBLOX.h', 'libraries/AP_GPS/AP_GPS_SBF.h'];13;74
46877851853e3b4b381f92f65e938a3a7f9ae7d0;46877851;library;param;fixed a bug in default file handling;"fixed a bug in default file handling

this fixes a bug in how default file values are handled that affects
any common sub-objects. When we had a default value for something like
SERVO12_FUNCTION then configured_in_defaults_file() would return true
for SERVO1_FUNCTION as it shares a common default value pointer

this changes the implementation to use the object pointer instead";['libraries/AP_Param/AP_Param.h', 'libraries/AP_Param/AP_Param.cpp'];2;79
305239b46763f19b3c0f67ba6ce1f3ffd2ae8fcf;305239b4;library;opticalflow_onboard;fix scale in gyro calculation;"fix scale in gyro calculation

Scale was wrong due to incorrect gyro integration";['libraries/AP_OpticalFlow/AP_OpticalFlow_Onboard.cpp'];1;7
d472fbde0c76192e2e5ceb3337a01d36848403f9;d472fbde;library;gps;fix PX4 GPS driver leap seconds;fix PX4 GPS driver leap seconds;['libraries/AP_GPS/AP_GPS_PX4.cpp'];1;13
d2431dafd045b91a79b07fa327819b8d26060e9a;d2431daf;library;ahrs;fix description;fix description;['libraries/AP_AHRS/AP_AHRS.cpp'];1;2
8b38ce666dd69b4cff1b8096265fc49e6fe74252;8b38ce66;sitl;sitl;SIM_XPlane: fix fabsf/abs warning^^ location alts are in integer cm;SIM_XPlane: fix fabsf/abs warning^^ location alts are in integer cm;['libraries/SITL/SIM_XPlane.cpp'];1;2
96d73affaef3c61e6692d341b1bcddbc0e8a6cd6;96d73aff;copter;copter;fix float warning^^ get_velocity_z() returns float;fix float warning^^ get_velocity_z() returns float;['ArduCopter/baro_ground_effect.cpp'];1;2
b561837b41d1edd031eb05eef1d3ca66541f0380;b561837b;library;rangefinder_bebop;Fix mode selection;"Fix mode selection

mistakes in selecting mode";['libraries/AP_RangeFinder/AP_RangeFinder_Bebop.cpp'];1;5
8a1f4e048f2e574c0b2773dff67694696202c72c;8a1f4e04;library;rangefinder_bebop;fix spi speed;"fix spi speed

Set spi speed. Else 0 will be sent at each transfer.";['libraries/AP_RangeFinder/AP_RangeFinder_Bebop.cpp'];1;1
e627bbc912cdd4671fa14f62de0512e8027acc35;e627bbc9;library;hal;Board fix typo for baro BMP280_SPI;Board fix typo for baro BMP280_SPI;['libraries/AP_HAL/AP_HAL_Boards.h'];1;2
a52db9f29d86dfe062026f885365b5c3802b1da9;a52db9f2;copter;copter;fix motors_checks to AP_Arming;fix motors_checks to AP_Arming;['ArduCopter/arming_checks.cpp', 'ArduCopter/arming_checks.h'];2;5
ee9588c674b9085a9f71115ffc11728c19faaf85;ee9588c6;copter;copter;fix proximity arming checks;fix proximity arming checks;['ArduCopter/arming_checks.cpp'];1;8
b31d2a59dae0ac83dd1d0f2fdec04fa78762fbe7;b31d2a59;rover;rover;Fix skid steer in when in skid steer out;Fix skid steer in when in skid steer out;['APMrover2/Steering.cpp'];1;9
e0a3caea13120ba9909c7e95188c1dffe39246d8;e0a3caea;rover;rover;Steering fix style;Steering fix style;['APMrover2/Steering.cpp'];1;64
6aeef76768f99368807d1b72b4730be47cb35aa6;6aeef767;library;proximity;fix get_boundary_points in case of multiple sensors;fix get_boundary_points in case of multiple sensors;['libraries/AP_Proximity/AP_Proximity.cpp'];1;2
8aa100d16456bda1b14db943422a7e71f14159bb;8aa100d1;library;barometer;fix for change to timer API;fix for change to timer API;['libraries/AP_Baro/AP_Baro_BMP280.h', 'libraries/AP_Baro/AP_Baro_BMP280.cpp'];2;8
5aa4bc436895c391b421ecba83b30092152f5a5b;5aa4bc43;library;params;fix seg fault in debug function;"fix seg fault in debug function
otherwise at start, when loading paramter is could fail at AP_Param.cpp:611, Debug(""scan past end of eeprom"")""";['libraries/AP_Param/AP_Param.cpp'];1;2
c133b515e050edf370ea83f3f080b8570f4cd6cc;c133b515;library;servorelayevents;fixed trim bug;"fixed trim bug

thanks to Buzz for noticing!";['libraries/AP_ServoRelayEvents/AP_ServoRelayEvents.cpp'];1;2
37c6bec902877f511ceaa57d306f9aca97419529;37c6bec9;library;hal_qurt;fixed a bug in new_input();"fixed a bug in new_input()

same as for HAL_Linux";['libraries/AP_HAL_QURT/RCInput.cpp'];1;7
a0a8472a44321f97b65bb93b055a0f6c45ff8c83;a0a8472a;library;proximity;fix consumption of distance-sensor messages;fix consumption of distance-sensor messages;['libraries/AP_Proximity/AP_Proximity_MAV.h', 'libraries/AP_Proximity/AP_Proximity.cpp', 'libraries/AP_Proximity/AP_Proximity_Backend.h', 'libraries/AP_Proximity/AP_Proximity.h', 'libraries/AP_Proximity/AP_Proximity_MAV.cpp'];5;21
742cdf6b13a7cfa7e39c24a035b68d7d369582b8;742cdf6b;copter;copter;fix arming while armed bug;"fix arming while armed bug

If a mavlink command was sent to arm the vehicle while it was already armed, the in_arm_motors boolean was left as true meaning the vehicle could never be armed again using a mavlink message.  This resolves issue #5546.";['ArduCopter/motors.cpp'];1;1
0a18f5e7b2369a4a91cf2da7565c45a880f522f9;0a18f5e7;library;hal_linux;fixed a bug in RCInput::new_input;"fixed a bug in RCInput::new_input

when a library called read() it would clear the new input flag, which
would cause new_input() in the main loop to return false. This could
trigger a false RC failsafe.";['libraries/AP_HAL_Linux/RCInput.h', 'libraries/AP_HAL_Linux/RCInput.cpp', 'libraries/AP_HAL_Linux/RCInput_Multi.cpp'];3;37
c0be20ece25a8868e89c8c9549cafafcc8195f63;c0be20ec;sitl;sitl;XPLANE fix member shadowing;XPLANE fix member shadowing;['libraries/SITL/SIM_XPlane.cpp'];1;4
9389ec2274cbff25fe69a77b40f88f7584eadac6;9389ec22;library;navekf2;fix parameter descriptions;fix parameter descriptions;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;3
195e32c2fc5fe8c789e226b73b0a9d497dfbd233;195e32c2;library;navekf3;fix some parameter descriptions;fix some parameter descriptions;['libraries/AP_NavEKF3/AP_NavEKF3.cpp'];1;5
eaf56766362025045f56ee3f6fa4d4682dfd5df2;eaf56766;sitl;sitl;fixed unselection bitmask bug in XPlane;fixed unselection bitmask bug in XPlane;['libraries/SITL/SIM_XPlane.cpp'];1;9
da45aef5c6293b08437791598559cf1cc5baf275;da45aef5;library;hal;fixed a logic bug in the srxl state machine;"fixed a logic bug in the srxl state machine

when decoding invalid input the buflen could grow to beyond the buffer
size, overwriting the next block of memory. On Disco this ended up
overwriting the Perf::_instance variable, which led to a segmentation
fault";['libraries/AP_HAL/utility/srxl.cpp'];1;12
bc9facf6084ede325269085394f0b896bebb02ab;bc9facf6;library;mount;Fix Alexmos gimbal Mavlink targeting mode;Fix Alexmos gimbal Mavlink targeting mode;['libraries/AP_Mount/AP_Mount_Alexmos.cpp'];1;1
946d30476a6ab332a9899e7ad4c0599f6e9c3a24;946d3047;library;inertialsensor;fix whoami for MPU6k;fix whoami for MPU6k;['libraries/AP_InertialSensor/AP_InertialSensor_Invensense.cpp'];1;1
a4108251e3be32eb4c1800b47ec8e21e52b659e1;a4108251;library;barometer;fix get_last_update(instance);"fix get_last_update(instance)

The method was not using the instance parameter. Instead it always use
primary barometer. Bug was not detected because method
get_last_update() is used where instance is _primary.

Detected with warnings, warnings are useful :-)";['libraries/AP_Baro/AP_Baro.h'];1;2
8033e0c31575c9f56b75cefafa8be7be28a907ea;8033e0c3;copter;copter;fix compilation when gripper disabled;fix compilation when gripper disabled;['ArduCopter/commands_logic.cpp'];1;6
889ec829fc90b1de67effd6b1ac0d0f862022d66;889ec829;library;opticalflow;fix warning in SITL compilation;fix warning in SITL compilation;['libraries/AP_OpticalFlow/AP_OpticalFlow_SITL.cpp'];1;3
990d5fd0e580b008483eab231fe8a0cbf753a2f8;990d5fd0;copter;copter;fix compilation when logging disabled;fix compilation when logging disabled;['ArduCopter/Log.cpp'];1;4
d011783d76a14e3da2298e6dd2f7bf4174001df4;d011783d;copter;copter;fix FRAME_TYPE param description;fix FRAME_TYPE param description;['ArduCopter/Parameters.cpp'];1;2
bdfb12123f6763bb5acb02354c49375d98f102dd;bdfb1212;library;motors;fix frame-type enum for Y6B;"fix frame-type enum for Y6B

Also remove unused NEW_PLUS";['libraries/AP_Motors/AP_MotorsMatrix.cpp', 'libraries/AP_Motors/AP_Motors_Class.h'];2;5
e31d6d051d5b7d4e3871f5d33eb68b79584a5dcf;e31d6d05;copter;copter;get_frame_mav_type switch fix;"get_frame_mav_type switch fix

This returns generic as the mavtype and avoids warnings of unreachable code
Thanks to muramura for suggesting this";['ArduCopter/system.cpp'];1;4
71eb46dd04eb720bf91867e8369d7700d8794eaa;71eb46dd;library;navekf3;Fix bug in loss of aiding fallback;"Fix bug in loss of aiding fallback

Fixes a bug introduced by the introduction of range beacon fusion to the fallback test.";['libraries/AP_NavEKF3/AP_NavEKF3_Control.cpp'];1;10
6dc7d25fde9670aa8bd55de2567c47129dd3af13;6dc7d25f;library;navekf2;Fix bug in loss of aiding fallback;"Fix bug in loss of aiding fallback

Fixes a bug introduced by the introduction of range beacon fusion to the fallback test.";['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;10
b114d3928e3fab23c9fd5f50e88923197563ab5c;b114d392;library;ac_avoid;fix distance to lean angle logic;"fix distance to lean angle logic

Fixes from PR review including
(a) make some local variables const
(b) rename angle_max to veh_angle_max
(c) fix distance_to_lean_pct logic so distance of zero returns maximum lean angle";['libraries/AC_Avoidance/AC_Avoid.cpp', 'libraries/AC_Avoidance/AC_Avoid.h'];2;25
378bd84b2984b02f0353f39fdaea7c989e7d7059;378bd84b;rover;rover;Fixed a bug in the wp loiter functionality;"Fixed a bug in the wp loiter functionality

Had a bug where the rover would loiter for ever and not resume even
though its loiter time had expired.  This resolves that.";['APMrover2/Steering.cpp', 'APMrover2/commands_logic.cpp'];2;12
377a74706536407954303b88c491ecf4c724d692;377a7470;copter;copter;minor format fix for fall through for payload-place;minor format fix for fall through for payload-place;['ArduCopter/commands_logic.cpp'];1;2
a43229de0f5fddcfdf33e6f441876bfe9cc8d5a0;a43229de;copter;copter;fix z-axis accel parameter description;fix z-axis accel parameter description;['ArduCopter/Parameters.cpp'];1;2
39969e7d8ef9f363db10838eb99596925a69e8c1;39969e7d;library;navekf3;added EKF3 for EKF experimentation;"added EKF3 for EKF experimentation

AP_NavEKF3: Implement same maths as PX4/ecl EKF

Replace attitude vector states with quaternions
Remove gyro scale factor states
Add XY accel delta velocity bias estimation
Initial tuning
Add GPS body frame offset compensation

AP_NavEKF3: Fix bugs and consolidate aiding switch logic

Switching in and out of aiding modes was being performed in more than one place and was using two variables.
The reversion out of GPS mode due to prolonged loss of GPS was not working.
This consolidates the logic and ensures that PV_AidingMode is only changed by the setAidingMode function.

AP_NavEKF3: prevent multiple fusion mode changes per filter update

AP_NavEKF3: Update tuning defaults

AP_NavEKF3: Fix bug causing switching in and out of aiding
If the GPS receiver was disconnected and no data received, then then the gpsGoodToAlign check did not get a chance to run and becasue it was previously true the EKF would switch back into aiding.
This prevents this by ensuring that gpsGoodToAlign defaults to false when the check is not being performed.
An additional check has also been dded to ensure that there is GPS data to fuse before we declare ready to use GPS.

AP_NavEKF3: Fix bug preventing planes recovering from bad magnetometers
This bug created a race condition whereby if the EKF had to reset the yaw to the GPS ground course to recover from a bad magnetometer, the new heading could be over-written by the bad magnetic heading when the plane reached the height for the scheduled reset.

AP_NavEKF3: Improve switch-over to backup magnetometer
When switching over to a back up magnetometer, ensure that the earth field estimate are reset. Otherwise mag earth field estimates due to the previous failed mag could cause data from the new mag to be rejected.

AP_NavEKF3: enable automatic use of range finder height

AP_NavEKF3: Fix bug in handling of invalid range data

AP_NavEKF3: Fix height drift on ground using range finder without GPSAP_NavEKF3:

AP_NavEKF3: Handle yaw jumps due to core switches

AP_NavEKF3: Enable simultaneous GPS and optical flow use

AP_NavEKF3: fix console status reporting

AP_NavEKF3: send messages to mavlink instead of console

This allows the GCS to better handle the display of messages to the user.

AP_NavEKF3: replace deprecated function call

AP_NavEKF3: Compensate for sensor body frame offsets

AP_NavEKF3: Fix bug in median filter code

AP_NavEKF3: save some memory in the position offsets in EKF3

We don't need to copy that vector3f for every sample. A uint8_t does the job

AP_NavEKF3: Add fusion of range beacon data

AP_NavEKF3: Bring up to date with EKF2

AP_NavEKF3: Misc range beacon updates

AP_NavEKF3: Add mising accessors

AP_NavEKF3: remove duplicate include

AP_NavEKF3: Prevent NaN's when accessing range beacon debug data

AP_NavEKF3: Update range beacon naming

AP_NavEKF3: updates

AP_NavEKF3: miscellaneous changes

AP_NavEKF3: misc updates

AP_NavEKF3: misc range beacons updates

AP_NavEKF3: add missing rover default param";['libraries/AP_NavEKF3/AP_NavEKF3_RngBcnFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_VehicleStatus.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_core.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_MagFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_OptFlowFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Buffer.h', 'libraries/AP_NavEKF3/AP_NavEKF3_Control.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_AirDataFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Outputs.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3.h', 'libraries/AP_NavEKF3/AP_NavEKF3_core.h', 'libraries/AP_NavEKF3/AP_NavEKF3_PosVelFusion.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_GyroBias.cpp', 'libraries/AP_NavEKF3/AP_NavEKF3_Measurements.cpp'];15;10837
fd8916ef386a04e9aa08defd4bd4c412699757b1;fd8916ef;library;dataflash;fix Baro 3 labels;fix Baro 3 labels;['libraries/DataFlash/LogStructure.h'];1;2
c846cc249d13b0fd0772d77666e6ef3109ee8fa9;c846cc24;copter;copter;fix heli pos-hold run-up-complete issue;fix heli pos-hold run-up-complete issue;['ArduCopter/control_poshold.cpp'];1;12
a09d4db4fd07c4866d42bc17aca70547dc6db691;a09d4db4;library;motorsmulticopter;fix battery resistance calculation;fix battery resistance calculation;['libraries/AP_Motors/AP_MotorsMulticopter.cpp'];1;2
b296bc1d003a5a4bacfab08fc44ce1b7fdae2381;b296bc1d;library;gps;MAV driver fix for sanity checks of cog, sat count;MAV driver fix for sanity checks of cog, sat count;['libraries/AP_GPS/AP_GPS_MAV.cpp'];1;6
8118222946475e84954da5b1d5a443e32ea69278;81182229;library;gps;MAV driver fix for GPS_INPUT altitude;MAV driver fix for GPS_INPUT altitude;['libraries/AP_GPS/AP_GPS_MAV.cpp'];1;2
9fc0bc19e73aa929b5f8c5912dc42dcd02e6ce24;9fc0bc19;library;beacon;fix potential out-of-bounds write to beacon_state;"fix potential out-of-bounds write to beacon_state

uncovered by covarity and wickedshell";['libraries/AP_Beacon/AP_Beacon_Backend.cpp'];1;4
6e47bed97db1d437ceedbab502300053673fd82f;6e47bed9;library;rangefinder;fix hard fault with LightWareI2C;fix hard fault with LightWareI2C;['libraries/AP_RangeFinder/AP_RangeFinder_LightWareI2C.cpp', 'libraries/AP_RangeFinder/AP_RangeFinder_LightWareI2C.h'];2;17
5900653b7fa3ef635b89304774a134e6f42576f7;5900653b;copter;copter;Commands_logic fix  comparing floating point with ==;Commands_logic fix  comparing floating point with ==;['ArduCopter/commands_logic.cpp'];1;4
8d4bad0742c137a60144ccaaa6f95ee61dc50a20;8d4bad07;copter;copter;Commands_logic fix implicit cast to double;Commands_logic fix implicit cast to double;['ArduCopter/commands_logic.cpp'];1;2
385e5badd8e16f3816f418143682d6d5058e1266;385e5bad;library;compass;LIS3MDL  fix order;LIS3MDL  fix order;['libraries/AP_Compass/AP_Compass_LIS3MDL.h'];1;2
c49c851a578fa1ce27ab385e09a83f8e52b42f9d;c49c851a;library;compass;AK09916  fix order;AK09916  fix order;['libraries/AP_Compass/AP_Compass_AK09916.h'];1;2
79a9e8dfad228c33471a794fb373906df5f1adb3;79a9e8df;library;math;Matrix_alg fix implicite cast from bool to float;Matrix_alg fix implicite cast from bool to float;['libraries/AP_Math/matrix_alg.cpp'];1;2
fb7a00799fe88d537744520fbf7bf675db4b4562;fb7a0079;library;math;quaternion fix missing return;quaternion fix missing return;['libraries/AP_Math/quaternion.cpp'];1;2
665ba1c009f9f44fcab64ae8e439e16e8d74cc51;665ba1c0;library;navekf2;Fix bug in reporting of vertical position reset;"Fix bug in reporting of vertical position reset

Fixes a bug that allows the last reported reset time to to wind back and an out of date reset delta to be reported if a switch to a core that has previously been reset occurs.
Allows multiple consumers provided they access on the same frame.";['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;23
7f347e39dd45942d7e587f5ea0544a36169bf985;7f347e39;library;navekf2;Fix bug in reporting of horizontal position reset;"Fix bug in reporting of horizontal position reset

Fixes a bug that allows the last reported reset time to to wind back and an out of date reset delta to be reported if a switch to a core that has previously been reset occurs.
Allows multiple consumers provided they access on the same frame.";['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;23
656d9bb2c4c5d4c364314f39b7176b5f863cb971;656d9bb2;library;navekf2;Fix bug in reporting of yaw reset;"Fix bug in reporting of yaw reset

Fixes a bug that allows the last reported reset time to to wind back and an out of date reset delta to be reported if a switch to a core that has previously been reset occurs.
Allows multiple consumers provided they access on the same frame";['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;25
51ccfca31c1c2fd945b5d649d509864eb9558c48;51ccfca3;library;navekf2;fix format of statustext for beacon init;fix format of statustext for beacon init;['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;4
0df45703f1b4f8707280808078c4d888a47270e7;0df45703;library;navekf2;Fix errors in position reset delta publishing;Fix errors in position reset delta publishing;['libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2.h'];2;44
d50fd3a6cdc5a21718457f41e8c15e7f14f9330e;d50fd3a6;library;opticalflow;fix onboard init;"fix onboard init

mistake in patch to avoid segfault which enabled
AP_OpticalFlow_Linux instead of AP_OpticalFlow_Onboard.
Store a reference to ahrs in order to execute init later, when
ahrs is initialized.";['libraries/AP_OpticalFlow/OpticalFlow.cpp', 'libraries/AP_OpticalFlow/OpticalFlow.h'];2;9
8d3361cef4c13b60b0326e1a3a8dcd2748d268c7;8d3361ce;library;hal_linux;RCInput_RPI: fix using Util class on constructor;"RCInput_RPI: fix using Util class on constructor

Program received signal SIGSEGV, Segmentation fault.
0x000b8760 in Linux::UtilRPI::get_rpi_version() const ()
(gdb) bt
 #0  0x000b8760 in Linux::UtilRPI::get_rpi_version() const ()
 #1  0x000b57ac in Linux::RCInput_RPI::RCInput_RPI() ()
 #2  0x0000acfc in _GLOBAL__sub_I__ZN9HAL_LinuxC2Ev ()
 #3  0x000e1600 in __libc_csu_init ()
 #4  0x76cad228 in __libc_start_main (main=0x7efff774, argc=1994186752,
     argv=0x76cad228 <__libc_start_main+168>, init=0xe15b4 <__libc_csu_init>,
     fini=0xe1614 <__libc_csu_fini>, rtld_fini=0x76fdf464 <_dl_fini>,
     stack_end=0x7efff774) at libc-start.c:246
 #5  0x0000afa4 in _start ()";['libraries/AP_HAL_Linux/RCInput_RPI.cpp', 'libraries/AP_HAL_Linux/RCInput_RPI.h'];2;32
bc476e19873918709fa5c26d4ade88dcd19e4d50;bc476e19;library;adc;fix ADS1115 instantiation;"fix ADS1115 instantiation

This can't be called on constructor since hal may not be initialized at
that time.";['libraries/AP_ADC/AP_ADC_ADS1115.cpp'];1;7
b36ee10e7c2682cd9aaa9cf0cbfb8b47f8e1e824;b36ee10e;library;compass;fix wrong memset in compass calibrator;fix wrong memset in compass calibrator;['libraries/AP_Compass/CompassCalibrator.cpp'];1;12
451c2f146dd9c5ba0f76773e0ce39ea7227be421;451c2f14;library;accelcal;fix bug preventing accel cal fit to run more than one iteration;"fix bug preventing accel cal fit to run more than one iteration

The check for fitness being smaller than the last value should use the
absolute value, to mean the fitness isn't changing since last iteration.
It's currently always quiting the function after the first iteration.

However for Gauss Newton we anyway want to run as many iterations as we
can, because there are ups and downs along the iteration so we might get
say best result where before and after iterations were bad. The lines
above takes care that sane and the best is selected.";['libraries/AP_AccelCal/AccelCalibrator.cpp'];1;5
6c9f46bafbe300713d5a8f47f10a7955bcd3f279;6c9f46ba;tools;replay;fix shadowed declaration;"fix shadowed declaration

../../Tools/Replay/Replay.cpp: In member function ‘FILE* Replay::xfopen(const char*, const char*)’:
../../Tools/Replay/Replay.cpp:485:60: warning: declaration of ‘filename’ shadows a member of ‘Replay’ [-Wshadow]
 FILE *Replay::xfopen(const char *filename, const char *mode)
                                  ^";['Tools/Replay/Replay.cpp'];1;6
ac3f49b06f5f5352b66145273ca2e4b9eb14612f;ac3f49b0;library;rpiouart_driver;fix warning;"fix warning

cast PKT_MAX_REGS to uint32_t to be able to compare without a warning";['libraries/AP_HAL_Linux/RPIOUARTDriver.cpp'];1;2
37c2c0a822a8dd52053e83309fed41f4fe9cb642;37c2c0a8;library;stats;fix variable reset time bug;"fix variable reset time bug

Use Jan 1st 2016 as epoch time rather than Unix epoch.

PixHawk's 32-bit floats can't store a 32-bit timestamp.";['libraries/AP_Stats/AP_Stats.cpp'];1;8
b16226dddf33f0754f3644444ba2195006e2a5c0;b16226dd;library;barometer;fixed a bug with corrupted conversions in MS5611 driver;"fixed a bug with corrupted conversions in MS5611 driver

the datasheet says that if you get back zero in an ADC read that the
next value can be corrupt. I have seen this happen on the FMUv1,
leading to bad altitude readings";['libraries/AP_Baro/AP_Baro_MS5611.cpp', 'libraries/AP_Baro/AP_Baro_MS5611.h'];2;15
c62050dc1b687887e0f0ba0367361aeded727f29;c62050dc;library;gps_sbf;fix accuracy reported by driver;fix accuracy reported by driver;['libraries/AP_GPS/AP_GPS_SBF.cpp'];1;7
c1647b13eb90d63b688895f5847a232e376e7d73;c1647b13;library;hal_linux;fix leaking strings;fix leaking strings;['libraries/AP_HAL_Linux/PWM_Sysfs.cpp'];1;2
02c2ba1331e3b9562f9c2248867f09b306f8cf9a;02c2ba13;library;compass;fixed dup semaphore bug;"fixed dup semaphore bug

thanks to Lucas for spotting this!";['libraries/AP_Compass/AP_Compass_LSM303D.cpp'];1;2
0d3adef8b249537891b4a33f9b4d3d99e4d86bae;0d3adef8;library;inertialsensor;MPU6000: remove TODO leftover;"MPU6000: remove TODO leftover

This will never be done as blindly changing speed is not the way to fix
communication issues.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;1
530d3230df596e5e7c102c2ee8870eedb44bfee1;530d3230;library;linux;Scheduler: don't ignore return values;"Scheduler: don't ignore return values

Several return values in the constructor of the scheduler were ignored
before, while they should be respected.

I found that bug while strac'ing ardupilot as it failed at some later
point.

Signed-off-by: Ralf Ramsauer <ralf.ramsauer@othr.de>";['libraries/AP_HAL_Linux/Scheduler.cpp'];1;13
5386edb7916ac42aeafa1bd872f0f4e7414933ec;5386edb7;library;frsky_telem;fix setting of land_complete flag;"fix setting of land_complete flag

When is_flying is true, land_complete should be set to 0, and
conversely.";['libraries/AP_Frsky_Telem/AP_Frsky_Telem.h', 'libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];2;10
76f1e4243abd614bb6e9cc265db92f6bf2f11f1f;76f1e424;library;hal_linux;remove double assignment;"remove double assignment

_dma_packet_tx.crc is already assigned below, we don't neet to set it to
0 before. While at it move the assignment to .crc up and fix coding
style.";['libraries/AP_HAL_Linux/RPIOUARTDriver.cpp'];1;14
0d1e50b50b11a2ad40fe0795100f6781059e9c01;0d1e50b5;plane;plane;fix typo, check wp_nav is initialized;fix typo, check wp_nav is initialized;['ArduPlane/quadplane.cpp'];1;2
80cf1207b7eec482221fb1bdea8105f726b15bfe;80cf1207;library;hal_vrbrain;UARTDriver: fix writting with failures;"UARTDriver: fix writting with failures

When the buffer wraps and we do it in 2 steps, we can't actually do the
second part if it fails or if we wrote less bytes than we intended,
otherwise we will corrupt the data being sent.";['libraries/AP_HAL_VRBRAIN/UARTDriver.cpp'];1;13
68fc08fe5244de49d242085e04007204f1ae0660;68fc08fe;library;hal_vrbrain;fix resetting TX buffer;"fix resetting TX buffer

We can't give the TX buffer 16 bytes more since next time begin() is
called it will compare the buffer size to the value the caller is trying
to set.  In this case we would free and alloc the buffer again each time
begin was called.";['libraries/AP_HAL_VRBRAIN/UARTDriver.cpp'];1;2
26650049c0f90552b9c7a6fd8771c90e86132c4f;26650049;library;hal_linux;UARTDriver: fix writting/reading with failures;"UARTDriver: fix writting/reading with failures

When the buffer wraps and we do it in 2 steps, we can't actually do the
second part if it fails or if we wrote less bytes than we intended,
otherwise we will corrupt the data being sent.";['libraries/AP_HAL_Linux/UARTDriver.cpp'];1;19
deec4ec6afcadd9f6e20ec07d348baf04ca75f6f;deec4ec6;library;compass;Rework compass calibrator;"Rework compass calibrator

Summary of significant changes:
  -Autsave doesn't depend on STREAM_EXTRA3
  -Don't risk only saving one compass on copter if CAL_ALWAYS_REBOOT is set
  -Only calibrate compasses that are both health and marked for use (there was a inconsistency in handling the mask)
  -Fix incorrect failure reporting on DO_ACCEPT_MAG_CAL with a mask of 0 if a channel was specifically not started
  -Fix not starting the buzzer if the delay is set to 0 seconds
  -Always send MAG_CAL_REPORT until its acknowledged
  -Correct the field in MAG_CAL_REPORT for autosave to indicate if the compass had actually been saved, rather then being scheduled to be saved
  -Remmove unused public interfaces";['libraries/AP_Compass/CompassCalibrator.h', 'libraries/AP_Compass/AP_Compass_Calibration.cpp', 'libraries/AP_Compass/AP_Compass.cpp', 'libraries/AP_Compass/AP_Compass.h', 'libraries/AP_Compass/CompassCalibrator.cpp'];5;181
5a7f9a38feca88bb837dd93508c8bab4c1f8511c;5a7f9a38;library;dataflash;fix RCIN and RCOU structure types;fix RCIN and RCOU structure types;['libraries/DataFlash/LogStructure.h'];1;4
17883f66830f1aebbd76e0bea06ef2fc9408614f;17883f66;library;inertialsensor;fix INS_generic example (call BoardConfig.init());fix INS_generic example (call BoardConfig.init());['libraries/AP_InertialSensor/examples/INS_generic/INS_generic.cpp'];1;7
68f0777dac5f48cdbb98e92d480d1c06e03b76a5;68f0777d;library;param;fixed bug with deeply nested parameter trees;"fixed bug with deeply nested parameter trees

enumeration could loop forever if the IDs overlapped due to 8 bit
masking";['libraries/AP_Param/AP_Param.h', 'libraries/AP_Param/AP_Param.cpp'];2;12
1e2e24eeac996a263f30103ebeb1092069c91aa7;1e2e24ee;copter;copter;fix wrong range in Throw mode;"fix wrong range in Throw mode

Fixes #5038";['ArduCopter/control_throw.cpp'];1;2
0bd3b8ecbdabedd0e7baae77692c48dffe81880a;0bd3b8ec;library;boardconfig;fixed bug in fmu safety mask set;fixed bug in fmu safety mask set;['libraries/AP_BoardConfig/px4_drivers.cpp'];1;2
3d1db896551f1f859e3d6cef9885c4c00275944f;3d1db896;plane;plane;Fix typos;Fix typos;['ArduPlane/release-notes.txt', 'ArduPlane/servos.cpp'];2;4
97795114258ee6f27bfbd10ae5ee1a8560c51de8;97795114;library;navekf2;Fix bug in median filter code;Fix bug in median filter code;['libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];1;4
d0ba259d0d813a83d074912ecd5e6ee1f7769f85;d0ba259d;library;navekf;Fix bug in median filter code;Fix bug in median filter code;['libraries/AP_NavEKF/AP_NavEKF_core.cpp'];1;4
83b8208b8b7818f1019ab2f261565af8740f5d87;83b8208b;copter;copter;fix PRX_ parameters duplicate underscore in param name;fix PRX_ parameters duplicate underscore in param name;['ArduCopter/Parameters.cpp'];1;5
e6e6e36da7352061ee1c2f67068896d2e30c09fe;e6e6e36d;library;gps_mav;fix hdop conversion;fix hdop conversion;['libraries/AP_GPS/AP_GPS_MAV.cpp'];1;4
20dcd6e0822fcb4d924749c10c9dc43371871000;20dcd6e0;library;rcoutput_bebop;fix motor order;"fix motor order

Accidentally pushed in commit 298f7bffb9ca7eb9ae5b9329351c98acddab8fa2
The order of the motors shouldn't have been changed on version 5 because
it is specific to older versions of the ESC controller firmware";['libraries/AP_HAL_Linux/RCOutput_Bebop.cpp'];1;2
b5a2bf2c6fe091fc1a8ba26bc85a13fe2b2631a8;b5a2bf2c;plane;plane;only revert a tuning parameter if it has been set;"only revert a tuning parameter if it has been set

fixes a 2nd transmitter tuning bug found by expntly";['ArduPlane/tuning.cpp'];1;6
70265f9100976d3ca0fe05c2cd9383b0a7b8888e;70265f91;plane;plane;fixed bug in transmitter tuning;"fixed bug in transmitter tuning

This bug affects transmitter tuning of parameters that have never been
saved to eeprom and don't have a default value in the AP_Param
tables. When reverting these parameters became zero which could lead
to a crash

many thanks to expntly for finding this bug!";['ArduPlane/tuning.h', 'ArduPlane/tuning.cpp'];2;15
9722c3a1c36870aca5ffc29c471fb40686e2970e;9722c3a1;library;dataflash;fix logging of ekf core;fix logging of ekf core;['libraries/DataFlash/LogFile.cpp'];1;2
5ff78b8e47339c39733594ceb22f5eb64088cf99;5ff78b8e;library;ahrs;fix rotation of acceleration into earth frame;fix rotation of acceleration into earth frame;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;4
f3a035694a614c4a687903d6c6e78e58d198b093;f3a03569;copter;copter;fix ekf check to always call mode_requires_gps;fix ekf check to always call mode_requires_gps;['ArduCopter/ekf_check.cpp'];1;2
77dbf99ceee67340c27e655f4f08688a06c97100;77dbf99c;library;ac_poscontrol;fix bug related to ekfNavVelGainScaler;fix bug related to ekfNavVelGainScaler;['libraries/AC_AttitudeControl/AC_PosControl.cpp'];1;4
49e47fd679eb74682884658fae17521b17c86889;49e47fd6;library;frsky_telem;airspeed scaling factor fix;airspeed scaling factor fix;['libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];1;2
263f68568329f60d5c062d33b8ff0e2674d8ec45;263f6856;copter;copter;ekf failsafe can trigger in LAND;"ekf failsafe can trigger in LAND

Thanks to John Ingersoll for the report and detailed fix
Resolves issue #4827";['ArduCopter/ekf_check.cpp'];1;2
635826c05636246ac04b87122d601dedf2c8013d;635826c0;library;navekf2;Fix reporting of terrain estimator innovations;"Fix reporting of terrain estimator innovations

Terrain height is relevant whenever optical flow data is present";['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;7
b0072b587c579809c76674a5e02ea63e905f9732;b0072b58;library;navekf2;fix reporting of optical flow use status;fix reporting of optical flow use status;['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;2
4e017bf5b3da4f2a9ffc2e1cc0a37b94edac2bdc;4e017bf5;plane;plane;fixed loiter mode when Q_GUIDED_MODE=1;"fixed loiter mode when Q_GUIDED_MODE=1

This fixes the fixed wing behaviour of LOITER mode whne
Q_GUIDED_MODE=1.

Many thanks to the PertUAV team for finding and reporting this bug";['ArduPlane/quadplane.h', 'ArduPlane/navigation.cpp', 'ArduPlane/quadplane.cpp'];3;22
0f000efc6f0ac7865bcd9e917e7be26864a927f5;0f000efc;plane;plane;Fix use of logical op instead of bitwise op;"Fix use of logical op instead of bitwise op

../../ArduCopter/GCS_Mavlink.cpp: In member function 'void Copter::send_extended_status1(mavlink_channel_t)':
../../ArduCopter/GCS_Mavlink.cpp:281:37: error: suggest parentheses around operand of '!' or change '&' to '&&' or '!' to '~' [-Werror=parentheses]
     uint32_t sensors_error_flags = !control_sensors_health & control_sensors_enabled & control_sensors_present^^
                                     ^
compilation terminated due to -Wfatal-errors.
cc1plus: all warnings being treated as errors

Thanks to Ralph Campbell <ralphcampbell1@gmail.com> for the bug report.";['ArduPlane/GCS_Mavlink.cpp'];1;2
b24d850695b6e044a1af4f6bf9c0a946c7198c39;b24d8506;copter;copter;Fix use of logical op instead of bitwise op;"Fix use of logical op instead of bitwise op

../../ArduCopter/GCS_Mavlink.cpp: In member function 'void Copter::send_extended_status1(mavlink_channel_t)':
../../ArduCopter/GCS_Mavlink.cpp:281:37: error: suggest parentheses around operand of '!' or change '&' to '&&' or '!' to '~' [-Werror=parentheses]
     uint32_t sensors_error_flags = !control_sensors_health & control_sensors_enabled & control_sensors_present^^
                                     ^
compilation terminated due to -Wfatal-errors.
cc1plus: all warnings being treated as errors

Thanks to Ralph Campbell <ralphcampbell1@gmail.com> for the bug report.";['ArduCopter/GCS_Mavlink.cpp'];1;2
b4a3e8a9c9590e1c89d748f40f6f5a52cf43a44d;b4a3e8a9;rover;rover;Fix use of logical op instead of bitwise op;"Fix use of logical op instead of bitwise op

../../ArduCopter/GCS_Mavlink.cpp: In member function 'void Copter::send_extended_status1(mavlink_channel_t)':
../../ArduCopter/GCS_Mavlink.cpp:281:37: error: suggest parentheses around operand of '!' or change '&' to '&&' or '!' to '~' [-Werror=parentheses]
     uint32_t sensors_error_flags = !control_sensors_health & control_sensors_enabled & control_sensors_present^^
                                     ^
compilation terminated due to -Wfatal-errors.
cc1plus: all warnings being treated as errors

Thanks to Ralph Campbell <ralphcampbell1@gmail.com> for the bug report.";['APMrover2/GCS_Mavlink.cpp'];1;2
25bee93fcc245256cd70a018c4e273bf7154e5d7;25bee93f;library;dataflash;fix EKF5 message;fix EKF5 message;['libraries/DataFlash/LogStructure.h'];1;2
8001cc403b536e7550b4e292f6c8fd8fd1b6148e;8001cc40;library;frsky_telem;fix is_flying assignment;fix is_flying assignment;['libraries/AP_Frsky_Telem/AP_Frsky_Telem.h'];1;2
5e022bf631e8162cd7bbd566762b2343a51c64b8;5e022bf6;library;frsky_telem;fix *_ap.value issue for Plane;"fix *_ap.value issue for Plane

set_is_flying does operations on a nullptr, plus we loose the ability to
update ap_status accordingly for Plane";['libraries/AP_Frsky_Telem/AP_Frsky_Telem.h', 'libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];2;25
9c4b3ec1e1031c34ec6b7ce512c643b6efde1805;9c4b3ec1;library;gps;Fix incorrect incrementing of last_baud rate;"Fix incorrect incrementing of last_baud rate

This is a revert of 7c3b8dceb which tried to start at index 0 of the
array of baudrates, however because of the way last_baud is used
this lead to a GPS always being reported as being 1 index off which
lead to users getting reports of baud rates that their GPS wasn't
configured for

Also renames last_baud to be current_baud as that is how it's
actuallly used and should reduce future confusion

And fixed some tabs/vs space issues around where the last_baud rate
was incremented.";['libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS.h'];2;44
06388b0417e03c044dda9e89493034030a7dceff;06388b04;library;global;Fix typos;Fix typos;['AntennaTracker/GCS_Mavlink.cpp', 'Tools/CHDK-Scripts/Cannon SX260/3DR_EAI_SX260.lua', 'libraries/AP_Terrain/TerrainGCS.cpp', 'libraries/GCS_MAVLink/GCS_Common.cpp', 'Tools/APM2_2560_bootloader/stk500boot.c', 'libraries/AP_HAL/RCInput.h', 'libraries/AP_HAL/AP_HAL_Boards.h', 'libraries/AP_GPS/AP_GPS.cpp', 'Tools/CHDK-Scripts/kap_uav.lua', 'Tools/CHDK-Scripts/Cannon S100/3DR_EAI_S100.lua', 'libraries/AP_Arming/AP_Arming.cpp'];11;22
60d8adcca0386c3f371ca42992f2e26ed1aad761;60d8adcc;library;navekf2;Fix height drift on ground using range finder without GPS;Fix height drift on ground using range finder without GPS;['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp'];1;6
879771420381738e29a3058556a8ef79f24f830f;87977142;library;navekf2;Fix bug in handling of invalid range finder  data;Fix bug in handling of invalid range finder  data;['libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];1;9
175faf1e4184f9000aaaf77f56ae0877ab2ffefe;175faf1e;library;navekf2;Fix bug in published yaw reset value found during code review;Fix bug in published yaw reset value found during code review;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;5
c5adb91017d7c6391df467f33c043c9cebe97a4c;c5adb910;rover;rover;Creating Beta Release 3 with recent parameter corruption fix.;Creating Beta Release 3 with recent parameter corruption fix.;['APMrover2/version.h'];1;2
a8a31b1c2421baf561f08e7eb42d481e88ea7291;a8a31b1c;copter;copter;fix health reporting to GCS for optical flow and precision landing;"fix health reporting to GCS for optical flow and precision landing

Includes slight restructuring to logic for other sensors but these should not have any functional effect";['ArduCopter/GCS_Mavlink.cpp'];1;34
1a3fc566824831f8b3ea5da6c803b39cda9ba420;1a3fc566;rover;rover;fix typo in parameter;fix typo in parameter;['APMrover2/Parameters.cpp'];1;2
733786830df0fd869bb863025d272b88976d2b4d;73378683;copter;copter;config.h fix typo;config.h fix typo;['ArduCopter/config.h'];1;2
1a1c74950138ca0ad89fb06fc4bbfb53f79a50b7;1a1c7495;copter;copter;fix typo in parameters.cpp;fix typo in parameters.cpp;['ArduCopter/Parameters.cpp'];1;2
fd87a4f180564cf823a7e8fbec9baa99e2682667;fd87a4f1;library;dataflash;fix unused result warning;fix unused result warning;['libraries/DataFlash/DataFlash_File.cpp'];1;7
a5f20d8c442638229861524ffb7e003020a01cdf;a5f20d8c;plane;plane;fix for AP_FrSky_Telem API change;fix for AP_FrSky_Telem API change;['ArduPlane/Plane.h'];1;4
0bcc9c4cb083958a3043d2ffa8fafec8b9eb68f7;0bcc9c4c;copter;copter;fix for AP_FrSky_Telem API change;fix for AP_FrSky_Telem API change;['ArduCopter/Copter.cpp'];1;2
a4d0ad8571df90738f8f92f0d0961d1055dea8d4;a4d0ad85;library;inertialsensor;Fix name of sensor;Fix name of sensor;['libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.cpp'];1;4
cbbc4d6774741132762dbf2b5364ac795be92358;cbbc4d67;plane;plane;don't flare due to crash detection unless crash detection enabled;"don't flare due to crash detection unless crash detection enabled

this fixes the issue in this bug report:

http://discuss.ardupilot.org/t/auto-landing-bug-crash-with-3d-video-and-logs-ardupilot-3-6-0";['ArduPlane/landing.cpp'];1;2
0051ecb28873f3ed46a145a923c454d1de8e1fb4;0051ecb2;copter;copter;fix LAND_SPEED_HIGH;fix LAND_SPEED_HIGH;['ArduCopter/control_land.cpp'];1;15
4eee3b1317b954c7c1df16ba2d264e2af695b77d;4eee3b13;copter;copter;fix underflow in scheduler;"fix underflow in scheduler

If fast_loop method executed time is over MAIN_LOOP_MICROS,
scheduler.run method set value is  0.";['ArduCopter/ArduCopter.cpp'];1;2
68630a86fe44d6b82e4ef561042c24893b472e1a;68630a86;copter;copter;fix logging after log download;"fix logging after log download

Downloading a log causes DataFlash to stop logging.

Restart logging when we are not downloading and start_logging is called.";['ArduCopter/Log.cpp'];1;6
83c3659acc5dd625280af64fcecd71b6598ff7ef;83c3659a;copter;copter;report version print fix;"report version print fix

Found by Covarity";['ArduCopter/setup.cpp'];1;2
0e5a91bb1b8bb27ed7809ff5f204b5c7b2893530;0e5a91bb;library;tracker;fix return results from preflight calibration;"fix return results from preflight calibration

Was always returning success even in cases where it failed
Issue found by Coverity";['AntennaTracker/GCS_Mavlink.cpp'];1;3
3349e244928ed21d207a61a55586fafc96c53234;3349e244;copter;copter;fix autotune unit conversions for step sizes;fix autotune unit conversions for step sizes;['ArduCopter/control_autotune.cpp'];1;12
68d3655195df9aaec4b76c685cfd9a00a00779ab;68d36551;copter;copter;fix rtl's use of rally point alt;"fix rtl's use of rally point alt

Thanks to OXINARF for spotting this";['ArduCopter/control_rtl.cpp'];1;10
43ad1f372d47008a34bf9c736f48857529b31499;43ad1f37;copter;copter;change function from computing return altitude to computing return target;"change function from computing return altitude to computing return target

Also fix altitude for rally points";['ArduCopter/Copter.h', 'ArduCopter/control_rtl.cpp'];2;39
e732cda577b18d58560a5c9cdd7058d27daedb3a;e732cda5;copter;copter;when calculating RTL return alt use rtl_path directly;"when calculating RTL return alt use rtl_path directly

At the same time, fix bug: check return point for terrain and not origin twice";['ArduCopter/Copter.h', 'ArduCopter/control_rtl.cpp'];2;24
53f021626920d2bef310265aa120e9bae2591bc7;53f02162;copter;copter;sport - fix call to relax_alt_hold_controller;sport - fix call to relax_alt_hold_controller;['ArduCopter/control_sport.cpp'];1;4
5061b29031d910881a19a126a900567325d1aa30;5061b290;copter;copter;poshold - fix call to relax_alt_hold_controller;poshold - fix call to relax_alt_hold_controller;['ArduCopter/control_poshold.cpp'];1;4
aa4661835e61f5eb467619c216237d52e43e4296;aa466183;copter;copter;brake - fix call to relax_alt_hold_controller;brake - fix call to relax_alt_hold_controller;['ArduCopter/control_brake.cpp'];1;2
5b277f4fb590a3c36f168a5e15c5c97a3da74f64;5b277f4f;copter;copter;autotune - fix call to relax_alt_hold_controllers;autotune - fix call to relax_alt_hold_controllers;['ArduCopter/control_autotune.cpp'];1;4
34055944cdc34f7eb023c9b1e943f7fdcbea7b06;34055944;library;ac_poscontrol;fix relax_alt_hold_controllers;fix relax_alt_hold_controllers;['libraries/AC_AttitudeControl/AC_PosControl.cpp'];1;2
ac04fcd8367e45a0b5429ddcf812f331088057a4;ac04fcd8;library;ac_attcontrol;fix set_yaw_target_to_current_heading;fix set_yaw_target_to_current_heading;['libraries/AC_AttitudeControl/AC_AttitudeControl.h'];1;2
5fd3c79202e116e4070f9bf4e952bfa9ae9bd0a7;5fd3c792;plane;plane;Fix typos;Fix typos;['ArduPlane/GCS_Mavlink.cpp'];1;2
7a9fe95ccbe56f85ee1782cdf1c0757bcd223194;7a9fe95c;plane;plane;Fix typos;Fix typos;['ArduPlane/Parameters.cpp'];1;2
1b872b88f81181552edd5928e9482a9ee77640a7;1b872b88;library;antennatracker;Fix typos;Fix typos;['AntennaTracker/control_auto.cpp'];1;4
22422bd7b313432d554af7e29e6edba4ac76e896;22422bd7;copter;copter;autotune bug fix to autotune_updating_p_up_d_down;"autotune bug fix to autotune_updating_p_up_d_down

This resolves an issue in which the D term could be reduced far lower than
it should have been.";['ArduCopter/control_autotune.cpp'];1;2
e17fdb2aa9dfff6de5679bcba97b1d093843eb1f;e17fdb2a;library;dataflash;Avoid null pointer dereference;"Avoid null pointer dereference

Confirms that the loop successfully found a log structure before using it.

Should fix CID 126742";['libraries/DataFlash/DataFlash.cpp'];1;5
b12edf6a71ff4dd45398b94ec489cb17b0e281b9;b12edf6a;library;adsb;fix bug where the update timeout wasn't being stored correctly;"fix bug where the update timeout wasn't being stored correctly

- causes immediate timeout so all samples were dropped
- now the timeout is current and respects the time-since-last-comms/packet so we can ignore stale packets";['libraries/AP_ADSB/AP_ADSB.cpp'];1;5
418cc817a39d2c4ba2317f0c7e0b6eb7ae113393;418cc817;library;hal_linux;SPIUARTDriver: fix conversion to SPIDevice;"SPIUARTDriver: fix conversion to SPIDevice

We need to use the fullduplex method to transfer both tx and rx at the
same time.";['libraries/AP_HAL_Linux/SPIUARTDriver.cpp'];1;5
9749b91d461455687ed47247085e25e277ae1444;9749b91d;sitl;sitl;initialise sigaction structs - valgrind fix;initialise sigaction structs - valgrind fix;['libraries/AP_HAL_SITL/SITL_cmdline.cpp'];1;4
5f5c20062575c5553b3bc763b813646989862868;5f5c2006;plane;plane;Fix filename in header;Fix filename in header;['ArduPlane/system.cpp', 'ArduPlane/test.cpp'];2;5
8f11bf7373c4cec48a11f5df61e3f6e0cb7d665f;8f11bf73;library;adc;ADS1115: fix typo;ADS1115: fix typo;['libraries/AP_ADC/AP_ADC_ADS1115.cpp'];1;2
e174014477537c5257edba5538a000b64d00f110;e1740144;library;tracker;fix PITCH_MIN parameter description;fix PITCH_MIN parameter description;['AntennaTracker/Parameters.cpp'];1;2
a159eedd8c01fab1ec713fe250166158204c4c1e;a159eedd;library;rangefinder;fix bus for Lightware on some boards;fix bus for Lightware on some boards;['libraries/AP_RangeFinder/RangeFinder.cpp'];1;2
4dfb277683978a432d0e95924763453c9e0b3e7b;4dfb2776;library;rangefinder;fix LightwareI2C conversion to I2CDevice;fix LightwareI2C conversion to I2CDevice;['libraries/AP_RangeFinder/AP_RangeFinder_LightWareI2C.cpp'];1;3
d8b58690ad56ca6cdbbdc075010a21d27e0fffe2;d8b58690;library;tecs;Remove useless 'if' statement;"Remove useless 'if' statement

This should fix CID 91386.

Before removing the 'if', I checked the log to confirm that both branch
didn't end-up being equal by mistake in some commit. But it looks like
the file was added in the project this way.";['libraries/AP_TECS/AP_TECS.cpp'];1;14
db665e6de77ba3305af4a322cca7d2aac9c7d740;db665e6d;rover;rover;Fix filename in header;Fix filename in header;['APMrover2/test.cpp'];1;2
f2d5eb9a97012a71bdf94c85c319cea909a1d098;f2d5eb9a;library;rangefinder_maxsonari2cxl;Fix driver after I2CDevice conversion;"Fix driver after I2CDevice conversion

* Simplify semaphore releasing logic
* Fix typo";['libraries/AP_RangeFinder/AP_RangeFinder_MaxsonarI2CXL.cpp'];1;32
66fdfbb85094b2d1e399aadae2d40bd237b96d83;66fdfbb8;library;rangefinder_lightwarei2c;Fix driver after I2CDevice conversion;"Fix driver after I2CDevice conversion

* Fix semaphore not being released in ::get_reading
* Simplify semaphore releasing logic
* Fix typo";['libraries/AP_RangeFinder/AP_RangeFinder_LightWareI2C.cpp'];1;27
a372f33cc0d930332f28a62e0da30239f1b92f3a;a372f33c;library;rangefinder;fix PulsedLightLRF detection;"fix PulsedLightLRF detection

    - Most of the boards use bus 1 for first I2C
    - If the bus doesn't exist, let the detect() method fail when it
      call start_reading(), because _dev would be invalid";['libraries/AP_RangeFinder/AP_RangeFinder_PulsedLightLRF.cpp'];1;8
69405cc99aa82186dc6153a3bb2d9f8ef586b412;69405cc9;library;inertialsensor;fix timing debug macro;"fix timing debug macro

- Use ""INS_"" prefix for the name in order to limit the scope for that macro.

- Don't define it in the code and check if it is defined instead of checking
  the value. With that, there's no need to touch the code for enabling debug,
  only a reconfiguration is necessary (e.g., `CXXFLAGS='-DINS_TIMING_DEBUG' waf
  configure ...`).";['libraries/AP_InertialSensor/AP_InertialSensor.cpp'];1;10
e34cdc6666c4ff8d65959d4aba5c231da2550838;e34cdc66;library;navekf2;Fix bug preventing planes recovering from bad magnetometers;"Fix bug preventing planes recovering from bad magnetometers

This bug created a race condition whereby if the EKF had to reset the yaw to the GPS ground course to recover from a bad magnetometer, the new heading could be over-written by the bad magnetic heading when the plane reached the height for the scheduled reset.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp'];2;40
e2b8807260bb7e66ed84ae7941d1316095244435;e2b88072;library;navekf2;Fix bug causing switching in and out of aiding;"Fix bug causing switching in and out of aiding

If the GPS receiver was disconnected and no data received, then then the gpsGoodToAlign check did not get a chance to run and becasue it was previously true the EKF would switch back into aiding.
This prevents this by ensuring that gpsGoodToAlign defaults to false when the check is not being performed.
An additional check has also been dded to ensure that there is GPS data to fuse before we declare ready to use GPS.";['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];2;4
9a23152ee45e385d3721e924ca2b7d9124051991;9a23152e;library;navekf2;Fix bugs and consolidate aiding switch logic;"Fix bugs and consolidate aiding switch logic

Switching in and out of aiding modes was being performed in more than one place and was using two variables.
The reversion out of GPS mode due to prolonged loss of GPS was not working.
This consolidates the logic and ensures that PV_AidingMode is only changed by the setAidingMode function.";['libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp'];6;189
487bbc3ed21a6ad309afc7f70229d106236ab2fc;487bbc3e;library;navekf;Fix reporting of position status;"Fix reporting of position status

Split publishing of local position into horiz and vert components with separate validity checks
Split status reporting into separate update and get functions and only update once after each loop update. This removes unnecessary re-calculation of the status logic and ensures all consumers get the same data (avoid possible race conditions).";['libraries/AP_NavEKF/AP_NavEKF_core.cpp', 'libraries/AP_NavEKF/AP_NavEKF_core.h', 'libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];4;165
897d2fb1fb3676ee320382acd2e86b0250cd7420;897d2fb1;library;hal_linux;use OwnPtr for _device in UARTDriver;"use OwnPtr for _device in UARTDriver

Otherwise we're going to leak memory without any need.
Before this fix we've created ConsoleDevice 4 times in case -A switch hadn't been supplied,
but we hadn't ever deleted those. Now there's no memory leak here.";['libraries/AP_HAL_Linux/UARTDriver.h'];1;5
a34a5c1aa3e0a09a2851c5f86bc5788a64ec77c7;a34a5c1a;library;notify;Display_SSD1306_I2C: Fix after conversion to I2CDevice;"Display_SSD1306_I2C: Fix after conversion to I2CDevice

    - Initialize device on hw_init() method, allowing it not to be
      present
    - Add missing lock
    - Add packed attribute to structs
    - Move defines to source file";['libraries/AP_Notify/Display_SSD1306_I2C.cpp', 'libraries/AP_Notify/Display_SSD1306_I2C.h'];2;26
56180089351cac15ebf3eb87fa36d217d915f033;56180089;library;notify;ToshibaLED_I2C: Fix driver after I2CDevice conversion;"ToshibaLED_I2C: Fix driver after I2CDevice conversion

    - Add missing semaphore take on bus
    - Initialize device on init function rather than constructor: the
      constructor may run before I2CDeviceManager is initialized since our
      AP_Notify objects are static so it can't be used.";['libraries/AP_Notify/ToshibaLED_I2C.cpp', 'libraries/AP_Notify/ToshibaLED_I2C.h'];2;27
85c0c9819478f9740646d9ce9664a3f49ea6d7ba;85c0c981;library;adc;ADS1115: fix driver after conversion to I2CDevice;"ADS1115: fix driver after conversion to I2CDevice

In _start_conversion(), the check for return code of _dev->transfer() was
inverted. The structure also needs to be PACKED, otherwise there will be
a hole in the middle.  Fix these issues and use be16_t where it makes
sense.

In read() we need to check for the second byte of config register, so
either make it an array of uint8_t or convert from big endian to host
endianness.  It's simpler to leave it as it was, accessing just the
first byte. Also the conversion value is in be16 type an needs to be
converted to host endiannes, not the opposite.

Fix bus number: all boards that use it expect it to be on bus 1, not 0.";['libraries/AP_ADC/AP_ADC_ADS1115.cpp'];1;39
de5025a46f7ae46da65dcf7955158f642c5ae007;de5025a4;library;airspeed;I2C: fix after conversion to I2CDevice;"I2C: fix after conversion to I2CDevice

    - Allow to fail init";['libraries/AP_Airspeed/AP_Airspeed_I2C.cpp'];1;13
5ef1568137bebf5c7fa519c215532a713437f37c;5ef15681;library;hal_empty;fix sitl;"fix sitl

Sitl or anyone using AP_HAL_Empty implementation doesn't have any
I2CDevice, so it's pointless to return an empty one.";['libraries/AP_HAL_Empty/I2CDevice.h'];1;2
8681911a0b3676cf676933e8e0610b609440ba61;8681911a;copter;copter;small fix to precision land descent rate;small fix to precision land descent rate;['ArduCopter/control_land.cpp'];1;2
10470b2dc1286d187e3ef5343280550b43691b99;10470b2d;library;navekf2;fix bug in initialisation of declination co-variances;"fix bug in initialisation of declination co-variances

Co-variances were being re-zeroed after being set. This meant that the initial declination learning was sensitive to measurement errors which could result in poor initial yaw accuracy.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];4;58
6b04a81b8da8cf0398f22e70c4a98dee3145cdb1;6b04a81b;library;navekf2;Fix plane in-flight yaw reset bug;"Fix plane in-flight yaw reset bug

Fixes bugs that prevented planes being able to reset yaw to GPS to recovery from takeoff with a bad magnetoemter.

1) If the velocity innovation check had not failed by the time the in-air transition occurred, then the yaw reset would not be performed
2) The velocity states were not being reset
3) The non fly-forward vehicle (copter) reset could occur first and effectively lock out the fly-forward vehicle (plane) yaw check.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;34
55dee347e0de1d423023e2d44e6fdb51fda13be7;55dee347;library;navekf2;Fix bug in averaged filter delta time;"Fix bug in averaged filter delta time

Average EKF time delta was not being updated.";['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];3;11
191c34612ddcd12220c8c4c6254aee1a3407a2e1;191c3461;library;navekf2;Fix bug in use of corrected IMU data;"Fix bug in use of corrected IMU data

IMU data was being corrected before being used by the co-variance prediction, whereas the delta angles and velocities in the derivation were supposed to be uncorrected.
This patch creates separate variable for the corrected data";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];4;34
b7dd4dad64ef0303d0da1755702e5c00d7abe7cd;b7dd4dad;library;hal;Fix ByteBuffer::reserve() breaking buffer state;"Fix ByteBuffer::reserve() breaking buffer state

When using reserved(), the reserved memory cannot be read before it's
written, therefore we cannot update 'tail' until the caller of
reserved() is done writing.

To solve that, a method called 'commit()' was added so the caller can
inform that is done with the memory usage and is safe to update 'tail'.
The caller also has to inform the length that was actually written.

This solution was developed to work considering the usage context of
this class: 1 reader and 1 writer **only**.";['libraries/AP_HAL/utility/RingBuffer.h', 'libraries/AP_HAL/utility/RingBuffer.cpp'];2;59
43d401288450c187a016a30ca42e8b96d94065c9;43d40128;library;hal;Fix TOCTOU in ByteBuffer::peekiovec();Fix TOCTOU in ByteBuffer::peekiovec();['libraries/AP_HAL/utility/RingBuffer.cpp'];1;8
a079c7bf4c91815b66f210f458bd191d017edc14;a079c7bf;library;tracker;bug fix re ignoring invalid START_LAT message;bug fix re ignoring invalid START_LAT message;['AntennaTracker/system.cpp'];1;1
fe68fe65e255bdc550c61ba73296105da251f04d;fe68fe65;library;motors;Single and Coax fix flap gains;Single and Coax fix flap gains;['libraries/AP_Motors/AP_MotorsSingle.cpp', 'libraries/AP_Motors/AP_MotorsCoax.cpp'];2;104
094dd9d769b748869db9db8a345c16531ffeccc8;094dd9d7;tools;replay;Fix bug preventing use of IMT data during replay;Fix bug preventing use of IMT data during replay;['Tools/Replay/Replay.cpp'];1;2
5c599225741a1385c79dc7b4521a413c0f6a2ec4;5c599225;library;navekf2;Fix bug that could publish bad compass offsets;"Fix bug that could publish bad compass offsets

Magnetometer bias states will subject to larger errors early in flight before flight motion makes the offsets observable and the state variances reduce.
Adds a check on state variances.
Replaces the parameter check with a check of the actual filter fusion method being used.";['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;11
ec5c46058483b3291c9429c291e0115c38f6c916;ec5c4605;library;navekf2;Fix predicted nav reporting;"Fix predicted nav reporting

Predicted nav should never be false if current nav is true";['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;4
e6f62080f55197f0718bec32f7e59eb37b5b0f7d;e6f62080;library;inertialsensor;fix best_diff on gyro initialization;"fix best_diff on gyro initialization

Without this patch, if accel_diff.length() > 0.2f and j == 0, then
best_diff[k] would be zero forever since diff_norm[k] >= 0 for any j.";['libraries/AP_InertialSensor/AP_InertialSensor.cpp'];1;4
c2da36d505685e48d922333399b0becf7059193f;c2da36d5;gcs;gcs_mavlink;fix race condition when recieving last waypoint;"fix race condition when recieving last waypoint

only shows up when the waypoint is about to time out";['libraries/GCS_MAVLink/GCS_Common.cpp'];1;12
b70b9ed8d16dcd766a9102d6c2f2b754a0e1c598;b70b9ed8;library;hal_linux;fix warning on 64b printf;"fix warning on 64b printf

../../libraries/AP_HAL_Linux/Perf.cpp: In member function ‘void Linux::Perf::_debug_counters()’:
../../libraries/AP_HAL_Linux/Perf.cpp:85:36: warning: format ‘%llu’ expects argument of type ‘long long unsigned int’, but argument 4 has type ‘uint64_t {aka long unsigned int}’ [-Wformat=]
                     c.name, c.count)^^
                                    ^";['libraries/AP_HAL_Linux/Perf.cpp'];1;9
80bda572ba8e949ad52e1afeda990b3d409cc3a3;80bda572;library;ac_attutudecontrol;Yaw shift fix;Yaw shift fix;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;3
a1548405c111df1f1214ccfd940134e9aab860c9;a1548405;library;ac_attitudecontrolheli;fix althold lean angle max;fix althold lean angle max;['libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp'];1;1
f514e76f52cdc5787e27928bc38296f1158c3291;f514e76f;plane;plane;reset ground_start_count if we lose 3D fix;"reset ground_start_count if we lose 3D fix

thanks to Michael for this suggestion";['ArduPlane/ArduPlane.cpp'];1;3
ba2382c409cc514e3b5a54e24e82e34a2bfa4c91;ba2382c4;library;motorscoax;Fix servo 3 and 4 feed through sign;Fix servo 3 and 4 feed through sign;['libraries/AP_Motors/AP_MotorsCoax.cpp'];1;4
23f8227e361ae5656c24646c67a427cff8a40773;23f8227e;library;motors;bug fix to save params on disarm;"bug fix to save params on disarm

Previously was saving during arming  as well as disarming.
Thanks to OXINARF for finding this!";['libraries/AP_Motors/AP_Motors_Class.cpp'];1;4
9bd8878c8bd86ec28640a75f9807bb74273ce35f;9bd8878c;library;ac_attitudecontrolheli;fix update_althold_lean_angle_max;fix update_althold_lean_angle_max;['libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp'];1;2
8fff32bde3611e3bf0dbe7fb2db80fa4a35f3131;8fff32bd;library;motorssingle;fix stability patch use of throttle_hover;fix stability patch use of throttle_hover;['libraries/AP_Motors/AP_MotorsSingle.cpp'];1;2
da059028051dc1ccc49e0d4c5724cf4bb968a30e;da059028;library;motorscoax;fix stability patch use of throttle_hover;fix stability patch use of throttle_hover;['libraries/AP_Motors/AP_MotorsCoax.cpp'];1;2
07564aa03f48e5a48dc93f18a69c24d1587ed5e3;07564aa0;plane;plane;fixed an attitude control bug in quadplane transition;"fixed an attitude control bug in quadplane transition

The motors would briefly spike at the end of the transition which
could cause a major pitch deviation";['ArduPlane/quadplane.cpp'];1;3
037a7980d66b6d483073240b75cedb0b7a491047;037a7980;plane;plane;fix calculation of override PWM;fix calculation of override PWM;['ArduPlane/px4_mixer.cpp'];1;10
fb07b8c4cc12160e1903520490f0b3d64400bdca;fb07b8c4;library;mission;fix bounds checking of MISSION_ITEM lat/lon;fix bounds checking of MISSION_ITEM lat/lon;['libraries/AP_Mission/AP_Mission.cpp'];1;12
b9cee76bbe60a215842655a80eab87f4cf810536;b9cee76b;plane;plane;fix quadplane integrator to always clip to at least 0 to throttle_max;fix quadplane integrator to always clip to at least 0 to throttle_max;['ArduPlane/quadplane.cpp'];1;2
0c06e62bce0a34c9018d62f96f75c40aa29bf401;0c06e62b;library;tracker;fixed calibration bug;fixed calibration bug;['AntennaTracker/system.cpp', 'AntennaTracker/tracking.cpp'];2;18
a16018f9fecfa491b31c082d510930e7aed130e5;a16018f9;library;motors;Missed Single fix;Missed Single fix;['libraries/AP_Motors/AP_MotorsSingle.cpp'];1;8
a94a19bd093accf751602420707b1aa283c0b49b;a94a19bd;library;navekf2;Fix bug causing continual yaw resets;Fix bug causing continual yaw resets;['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;2
722eb0d70669ed0ad72b6f444a8cd46157a94791;722eb0d7;library;navekf2;Fix bug for start of wind speed estimation;"Fix bug for start of wind speed estimation

The commencement of airspeed fusion could cause pitch errors due to small variances and large innovations. This issue is addressed by the following changes:
1) The airspeed measurement is used to set wind states to a value that reduces initial innovations.
2) The wind state variances are set to values that better reflect the wind speed uncertainty";['libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];1;27
4c66e145635899d1555a4511a362caa083eb3684;4c66e145;sitl;sitl;fixed air resistance bug for heli, balloon and singlecopter;fixed air resistance bug for heli, balloon and singlecopter;['libraries/SITL/SIM_Balloon.cpp', 'libraries/SITL/SIM_Helicopter.cpp', 'libraries/SITL/SIM_SingleCopter.cpp'];3;6
75d5c87788e12437ccdff4d3c639a2ad222629f0;75d5c877;library;motors;Fix setpoint bug with 0~1 conversion in AP_MotorsHeli;Fix setpoint bug with 0~1 conversion in AP_MotorsHeli;['libraries/AP_Motors/AP_MotorsHeli.h'];1;2
c9284e5f64b7acd2f141f256154b631a0a295697;c9284e5f;copter;copter;fix flip after throttle changed to 0 to 1 range;fix flip after throttle changed to 0 to 1 range;['ArduCopter/control_flip.cpp'];1;24
74121fdaebeeae498d15eaed8232f3ba6039c417;74121fda;library;navekf2;fix bug preventing in-flight alignment;fix bug preventing in-flight alignment;['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;1
16cb7078cd235c8dca3e68bc7d2cc4dfd7cb8202;16cb7078;library;navekf2;Fix misleading pre-flight status reporting;Fix misleading pre-flight status reporting;['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;4
42da33593d571e817388a0884a290666e3ead6f6;42da3359;library;navekf2;fix yaw fusion numerical health reporting;fix yaw fusion numerical health reporting;['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;18
cf05e110fcaaafa73779f6d855c52f226fc5a10f;cf05e110;library;navekf2;fix scaling error in use of IMU noise parameters;"fix scaling error in use of IMU noise parameters

Also remove process noise from state transition matrix where it was mistakenly left in after the derivation";['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp'];1;16
7e49d0c53f8bef7b4f845b22a1342f67f49b9b11;7e49d0c5;library;hal_linux;Thread: fix alignment warning;"Thread: fix alignment warning

../../libraries/AP_HAL_Linux/Thread.cpp: In member function ‘void Linux::Thread::_poison_stack()’:
../../libraries/AP_HAL_Linux/Thread.cpp:87:31: warning: cast from ‘uint8_t* {aka unsigned char*}’ to ‘uint32_t* {aka unsigned int*}’ increases required alignment of target type [-Wcast-align]
         for (p = (uint32_t *) end^^ p > curr^^ p--) {
                               ^
../../libraries/AP_HAL_Linux/Thread.cpp:93:31: warning: cast from ‘uint8_t* {aka unsigned char*}’ to ‘uint32_t* {aka unsigned int*}’ increases required alignment of target type [-Wcast-align]
         for (p = (uint32_t *) end^^ p < curr^^ p++) {
                               ^
../../libraries/AP_HAL_Linux/Thread.cpp:98:39: warning: cast from ‘uint8_t* {aka unsigned char*}’ to ‘uint32_t* {aka unsigned int*}’ increases required alignment of target type [-Wcast-align]
     _stack_debug.start = (uint32_t *) begin^^
                                       ^
../../libraries/AP_HAL_Linux/Thread.cpp:99:37: warning: cast from ‘uint8_t* {aka unsigned char*}’ to ‘uint32_t* {aka unsigned int*}’ increases required alignment of target type [-Wcast-align]
     _stack_debug.end = (uint32_t *) end^^
                                     ^";['libraries/AP_HAL_Linux/Thread.cpp'];1;18
18af4da6908882e9835df5786e562e13e317d079;18af4da6;library;hal_linux;Thread: fix warning regarding shadow member;"Thread: fix warning regarding shadow member

../../libraries/AP_HAL_Linux/Thread.cpp: In member function ‘void Linux::Thread::_poison_stack()’:
../../libraries/AP_HAL_Linux/Thread.cpp:63:20: warning: declaration of ‘start’ shadows a member of 'this' [-Wshadow]
     uint8_t *end, *start, *curr^^
                    ^";['libraries/AP_HAL_Linux/Thread.cpp'];1;10
7379d120e175c3a6dc91af28942038bc67465bcd;7379d120;library;gps;fix _parse_decimal_100() with negative numbers;"fix _parse_decimal_100() with negative numbers

_parse_decimal_100() did not parse the fractional part for negative
numbers. Furthermore, use the third decimal (when present) for proper
rounding.";['libraries/AP_GPS/AP_GPS_NMEA.h', 'libraries/AP_GPS/AP_GPS_NMEA.cpp'];2;26
71e10c9132d969e549b63f590ddb9f11d1fa676d;71e10c91;library;hal_linux;fix include order;"fix include order

Sort include alphabetically and make them in order:

Main header
system headers
library headers
local headers

While reordering, change a include of endian.h to our sparse-endian.h
which is more reliant to toolchain changes.";['libraries/AP_HAL_Linux/GPIO.h', 'libraries/AP_HAL_Linux/UARTDevice.cpp', 'libraries/AP_HAL_Linux/Storage_FRAM.cpp', 'libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp', 'libraries/AP_HAL_Linux/UDPDevice.cpp', 'libraries/AP_HAL_Linux/SPIDriver.cpp', 'libraries/AP_HAL_Linux/AnalogIn_ADS1115.cpp', 'libraries/AP_HAL_Linux/Heat_Pwm.cpp', 'libraries/AP_HAL_Linux/AnalogIn_IIO.cpp', 'libraries/AP_HAL_Linux/RCOutput_ZYNQ.cpp', 'libraries/AP_HAL_Linux/RCInput.cpp', 'libraries/AP_HAL_Linux/HAL_Linux_Class.cpp', 'libraries/AP_HAL_Linux/Semaphores.h', 'libraries/AP_HAL_Linux/RCInput_AioPRU.cpp', 'libraries/AP_HAL_Linux/GPIO_RPI.cpp', 'libraries/AP_HAL_Linux/RCOutput_Raspilot.cpp', 'libraries/AP_HAL_Linux/Storage.cpp', 'libraries/AP_HAL_Linux/GPIO.cpp', 'libraries/AP_HAL_Linux/ConsoleDevice.cpp', 'libraries/AP_HAL_Linux/I2CDriver.cpp', 'libraries/AP_HAL_Linux/sbus.cpp', 'libraries/AP_HAL_Linux/Util.cpp', 'libraries/AP_HAL_Linux/RCOutput_Sysfs.cpp', 'libraries/AP_HAL_Linux/AnalogIn.cpp', 'libraries/AP_HAL_Linux/CameraSensor_Mt9v117.cpp', 'libraries/AP_HAL_Linux/RCOutput_PRU.cpp', 'libraries/AP_HAL_Linux/GPIO_Sysfs.h', 'libraries/AP_HAL_Linux/RCInput_RPI.cpp', 'libraries/AP_HAL_Linux/RCInput_ZYNQ.cpp', 'libraries/AP_HAL_Linux/ToneAlarm.cpp', 'libraries/AP_HAL_Linux/RCInput_Raspilot.cpp', 'libraries/AP_HAL_Linux/TCPServerDevice.cpp', 'libraries/AP_HAL_Linux/OpticalFlow_Onboard.cpp', 'libraries/AP_HAL_Linux/PWM_Sysfs.cpp', 'libraries/AP_HAL_Linux/Perf.cpp', 'libraries/AP_HAL_Linux/RCInput_UART.cpp', 'libraries/AP_HAL_Linux/RCInput_UDP.cpp', 'libraries/AP_HAL_Linux/SPIUARTDriver.cpp', 'libraries/AP_HAL_Linux/AnalogIn_Navio2.cpp', 'libraries/AP_HAL_Linux/RPIOUARTDriver.cpp', 'libraries/AP_HAL_Linux/Perf_Lttng.cpp', 'libraries/AP_HAL_Linux/RCOutput_Bebop.cpp', 'libraries/AP_HAL_Linux/Semaphores.cpp', 'libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp', 'libraries/AP_HAL_Linux/RCInput_PRU.cpp', 'libraries/AP_HAL_Linux/UARTDriver.cpp'];46;831
de96ca95a6949e1c76bfa990b35c5d4341a1b290;de96ca95;library;cpuinfo;cast result of sizeof to unsigned long;"cast result of sizeof to unsigned long

That fix works when size_t is 32 or 64 bits.";['Tools/CPUInfo/CPUInfo.cpp'];1;14
1ac712fa65c42e8b4945650bfe22c8b0f063b624;1ac712fa;library;math;fix is_zero() after template conversion;fix is_zero() after template conversion;['libraries/AP_Math/AP_Math.h'];1;2
eb90ef23a18eac0a0cb2916560271f8eb8ca75c1;eb90ef23;library;math;AP_GeodesicGrid: fix algorithm for null vector;"AP_GeodesicGrid: fix algorithm for null vector

If v is the null vector, then alpha * v is still the null vector for any alpha
as a real number. That means that the null vector doesn't cross any section.";['libraries/AP_Math/AP_GeodesicGrid.cpp', 'libraries/AP_Math/AP_GeodesicGrid.h'];2;14
39fc17f384461f9072c88ad479f3a1b0d55d34ba;39fc17f3;library;dataflash;Fix parameter description for param_parse.py;Fix parameter description for param_parse.py;['libraries/DataFlash/DataFlash.cpp'];1;4
1fad97185135d91fef22849cc5fed7065f01de5e;1fad9718;plane;plane;Fix typos;Fix typos;['ArduPlane/Parameters.cpp', 'ArduPlane/APM_Config.h.reference', 'ArduPlane/release-notes.txt', 'ArduPlane/commands_logic.cpp', 'ArduPlane/px4_mixer.cpp', 'ArduPlane/Attitude.cpp'];6;20
63f2ab38dd9b264e039916610fca3a7922b6b1e1;63f2ab38;rover;rover;Fix typos;Fix typos;['APMrover2/commands_logic.cpp', 'APMrover2/release-notes.txt'];2;4
6b93f974d39942db589542f45fec94e3cd8de395;6b93f974;library;antennatracker;Fix typos;Fix typos;['AntennaTracker/GCS_Mavlink.cpp', 'AntennaTracker/servos.cpp', 'AntennaTracker/AntennaTracker.txt'];3;6
ce241dd97a8628743a4f285deecc0e071b79f190;ce241dd9;copter;copter;Fix typos;Fix typos;['ArduCopter/events.cpp', 'ArduCopter/config.h', 'ArduCopter/system.cpp', 'ArduCopter/ReleaseNotes.txt', 'ArduCopter/flight_mode.cpp', 'ArduCopter/radio.cpp'];6;18
1062aed91e49e07cd0ae916e07c05ae31052691d;1062aed9;tools;tools;Fix typos;Fix typos;['Tools/ArduPPM/WorkBasket/spektrum_to_ppm_encoder/spektrum_to_ppm_encoder.pde', 'Tools/autotest/pysim/util.py', 'Tools/ArduPPM/ATMega32U2/LUFA/ManPages/ChangeLog.txt', 'Tools/ArduPPM/ATMega32U2/LUFA/Scheduler/Scheduler.h', 'Tools/ArduPPM/ATMega32U2/Projects/arduino-usbserial/makefile', 'Tools/ArduPPM/ATMega32U2/LUFA/Doxygen.conf', 'Tools/autotest/web-firmware/index.html', 'Tools/ArduPPM/WorkBasket/readme.txt', 'Tools/ArduPPM/Libraries/PPM_Encoder.h', 'Tools/autotest/aircraft/Rascal/README.Rascal', 'Tools/LogAnalyzer/example_output.xml', 'Tools/autotest/pysim/fdpexpect.py', 'Tools/LogAnalyzer/LogAnalyzer.py', 'Tools/ArduPPM/ATMega32U2/LUFA/ManPages/BuildingLinkableLibraries.txt', 'Tools/ArduPPM/ATMega32U2/Bootloaders/arduino-usbdfu/makefile', 'Tools/ArduPPM/ATMega328p/manual.txt', 'Tools/ArduPPM/Libraries/changelog_v3.txt', 'Tools/APM2_2560_bootloader/stk500boot.c', 'Tools/autotest/sim_vehicle.py', 'Tools/Linux_HAL_Essentials/RCInput_UART/pic_firmware.asm', 'Tools/ArduPPM/Libraries/PPM_Encoder_v3.h', 'Tools/APM2_2560_bootloader/Makefile', 'Tools/ArduPPM/WorkBasket/Experimental/PPM_Encoder.h', 'Tools/SerialProxy/SerialProxy/Form1.cs'];24;116
64d14356b95481050126471c563aca13df6b4ef1;64d14356;library;navekf2;Fix typos;Fix typos;['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Buffer.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp'];8;40
2f88e3265714e620a7c34f2afdd062cc6e47d739;2f88e326;library;hal_flymaple;Fix typos;Fix typos;['libraries/AP_HAL_FLYMAPLE/Scheduler.cpp', 'libraries/AP_HAL_FLYMAPLE/RCInput.cpp', 'libraries/AP_HAL_FLYMAPLE/UARTDriver.cpp', 'libraries/AP_HAL_FLYMAPLE/FlymaplePortingNotes.txt', 'libraries/AP_HAL_FLYMAPLE/AnalogIn.h', 'libraries/AP_HAL_FLYMAPLE/RCOutput.cpp', 'libraries/AP_HAL_FLYMAPLE/I2CDriver.h', 'libraries/AP_HAL_FLYMAPLE/Storage.cpp', 'libraries/AP_HAL_FLYMAPLE/utility/EEPROM.cpp'];9;24
2236640f664e9763f41d81730a6fad1f570e1bf1;2236640f;library;hal_linux;Fix typos;Fix typos;['libraries/AP_HAL_Linux/I2CDriver.h', 'libraries/AP_HAL_Linux/RCInput_UART.cpp', 'libraries/AP_HAL_Linux/sbus.cpp', 'libraries/AP_HAL_Linux/RCInput_RPI.cpp', 'libraries/AP_HAL_Linux/AnalogIn_IIO.cpp', 'libraries/AP_HAL_Linux/Flow_PX4.cpp'];6;14
267a74ebb2790674570a81c6848bffc4206d219b;267a74eb;library;navekf;Fix typos;Fix typos;['libraries/AP_NavEKF/AP_NavEKF_core.cpp', 'libraries/AP_NavEKF/AP_NavEKF_core.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp', 'libraries/AP_NavEKF/Models/GimbalEstimatorExample/RunSimulation.m', 'libraries/AP_NavEKF/Models/AttErrVecMathExample/GenerateEquations.m', 'libraries/AP_NavEKF/Models/GimbalEstimatorExample/GenerateEquations.m'];6;42
4047fb63fc1b567374b88e58f070a99d43e0a84e;4047fb63;library;gps;Fix typos;Fix typos;['libraries/AP_GPS/AP_GPS_SBF.cpp', 'libraries/AP_GPS/AP_GPS_PX4.cpp', 'libraries/AP_GPS/AP_GPS.h', 'libraries/AP_GPS/AP_GPS_SBP.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.cpp'];5;12
481e3a2af6300fd82de42353e86ce1013dba6d91;481e3a2a;library;math;Fix typos;Fix typos;['libraries/AP_Math/edc.cpp', 'libraries/AP_Math/location.cpp', 'libraries/AP_Math/vector3.h', 'libraries/AP_Math/AP_Math.cpp', 'libraries/AP_Math/matrix_alg.cpp'];5;10
00b19150342975bdc42ccb9361a57a2ab383f2a4;00b19150;library;hal_empty;Fix typos;Fix typos;['libraries/AP_HAL_Empty/I2CDriver.h'];1;6
2bf9aa94adfabe7da8d3a367d9e0c57c365e665e;2bf9aa94;library;ahrs;Fix typos;Fix typos;['libraries/AP_AHRS/AP_AHRS_DCM.cpp', 'libraries/AP_AHRS/AP_AHRS_NavEKF.cpp', 'libraries/AP_AHRS/AP_AHRS_NavEKF.h'];3;6
2802775e7da58f0821ed807a1140c2b2b8375d2a;2802775e;library;motors;Fix typos;Fix typos;['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsHeli_Single.cpp', 'libraries/AP_Motors/AP_MotorsHeli.h'];3;6
dfe38b61de1890632652174832edd728052f940a;dfe38b61;library;mission;Fix typos;Fix typos;['libraries/AP_Mission/AP_Mission.cpp', 'libraries/AP_Mission/AP_Mission.h'];2;6
91e9dd10babe7fba81ad2d566315281e38820506;91e9dd10;library;hal_sitl;Fix typos;Fix typos;['libraries/AP_HAL_SITL/sitl_gps.cpp'];1;2
eb418f54ee63124264cb162cc84cb991375bc7bf;eb418f54;library;hal;Fix typos;Fix typos;['libraries/AP_HAL/Device.h', 'libraries/AP_HAL/RCInput.h', 'libraries/AP_HAL/I2CDriver.h'];3;10
aa4b66509f60d31679329cfd69b0e435f12e9432;aa4b6650;library;accelcal;Fix typos;Fix typos;['libraries/AP_AccelCal/AccelCalibrator.h', 'libraries/AP_AccelCal/AP_AccelCal.h', 'libraries/AP_AccelCal/AccelCalibrator.cpp'];3;8
fcbed13533a0d30efec1817e2038dab7a548c52b;fcbed135;library;mount;Fix typos;Fix typos;['libraries/AP_Mount/AP_Mount_Backend.h', 'libraries/AP_Mount/SoloGimbalEKF.cpp', 'libraries/AP_Mount/SoloGimbal_Parameters.cpp'];3;6
af13e2cca4a548b3481bc4c0dc159629ebcf2e42;af13e2cc;library;declination;Fix typos;Fix typos;['libraries/AP_Declination/AP_Declination.cpp'];1;6
e6564c2efae39060efdb2fd22c3b7c41dc0031b2;e6564c2e;library;boardconfig;Fix typos;Fix typos;['libraries/AP_BoardConfig/AP_BoardConfig.cpp'];1;2
2e58653983c3ca3052f668e1dd5f38c17488e03b;2e586539;library;compass;Fix typos;Fix typos;['libraries/AP_Compass/AP_Compass_HMC5843.cpp'];1;2
5237c86bca7e68134f5a0160925904b9000ab275;5237c86b;library;battmonitor;Fix typos;Fix typos;['libraries/AP_BattMonitor/AP_BattMonitor_SMBus_I2C.cpp'];1;2
d5a2c57c5edb0b89df633edf7c7ce99f23064cae;d5a2c57c;library;inertialsensor;Fix typos;Fix typos;['libraries/AP_InertialSensor/AuxiliaryBus.h', 'libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.cpp'];2;6
08a022fa6ac05a8e9cb9508c558608554bdefee2;08a022fa;library;frsky_telem;Fix typos;Fix typos;['libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp'];1;4
8d6cc587c515c2ef613a3a9ed5cb87e36230ee03;8d6cc587;library;apm_control;Fix typos;Fix typos;['libraries/APM_Control/AP_AutoTune.cpp', 'libraries/APM_Control/TuningGuide.txt'];2;4
3033c538342a822d9686a925b2c197a453f9576d;3033c538;library;ac_wpnav;Fix typos;Fix typos;['libraries/AC_WPNav/AC_WPNav.h'];1;4
a8889e5765e51669d4a6183b26f5f95274c0d2d3;a8889e57;library;common;Fix typos;Fix typos;['libraries/AP_Common/AP_Common.h'];1;2
f6ad89103cb155e7d9591b3c5d062b494ef07e0b;f6ad8910;library;arming;Fix typos;Fix typos;['libraries/AP_Arming/AP_Arming.cpp'];1;2
3f92a64b99ec2cfa95abf8a750e6e18a57a2cbba;3f92a64b;gcs;gcs_mavlink;Fix typos;Fix typos;['libraries/GCS_MAVLink/examples/routing/routing.cpp', 'libraries/GCS_MAVLink/MAVLink_routing.cpp'];2;8
e31a37e7a85879377e6bdf1e386e386079c58178;e31a37e7;library;notify;Fix typos;Fix typos;['libraries/AP_Notify/ToneAlarm_Linux.cpp', 'libraries/AP_Notify/Buzzer.cpp'];2;4
287eb69502dee07cf6562ac61094740982dd313f;287eb695;library;pid;Fix typos;Fix typos;['libraries/PID/PID.h'];1;2
dc7acdf03ffc94dc273005359d60d0cb92137b0a;dc7acdf0;library;dataflash;Fix typos;Fix typos;['libraries/DataFlash/DataFlash_Block.cpp', 'libraries/DataFlash/LogFile.cpp', 'libraries/DataFlash/DataFlash.cpp'];3;8
2ee6a85e67ec83647d911adbaaa6464a563d94c9;2ee6a85e;library;rangefinder;Fix typos;Fix typos;['libraries/AP_RangeFinder/AP_RangeFinder_Bebop.cpp', 'libraries/AP_RangeFinder/AP_RangeFinder_MAVLink.cpp'];2;4
099fc690320613bcbefad13dcd3d66dd63e169d9;099fc690;library;rc_channel;Fix typos;Fix typos;['libraries/RC_Channel/RC_Channel_aux.h', 'libraries/RC_Channel/RC_Channel_aux.cpp'];2;22
388a6683ade08674f864a75bc99af711dc2c60ed;388a6683;library;opticalflow;fix optical flow initialization;"fix optical flow initialization

This fixes the initialization for Linux boards using the PX4Flow module.
The problem is that after the conversion to use I2CDevice we now need to
use I2CDeviceManager, which is statically constructed after the vehicle
object.

So, if we try to call hal.i2c_mgr->get_device(), it will call the
get_device() method before the constructor is called and receive a
SIGSEGV:

Program received signal SIGSEGV, Segmentation fault.
0x000b06c0 in OpticalFlow::OpticalFlow (this=0x140914 <copter+4980>, ahrs=...)
    at ../../libraries/AP_OpticalFlow/OpticalFlow.cpp:54
54      ../../libraries/AP_OpticalFlow/OpticalFlow.cpp: No such file or directory.";['libraries/AP_OpticalFlow/OpticalFlow.cpp'];1;35
8fb318a6e19419efd56928a7332c6ea3c25873e6;8fb318a6;copter;copter;fix do_loiter when executed in same location;fix do_loiter when executed in same location;['ArduCopter/commands_logic.cpp'];1;4
8ce8551669b6aaddd8e3e7dfc6d5782f92c255db;8ce85516;copter;copter;fix detection of 0 values for lat, lng and alt in waypoints;fix detection of 0 values for lat, lng and alt in waypoints;['ArduCopter/commands_logic.cpp'];1;20
880f130670d02dfce000af68480cef71902fb31b;880f1306;library;math;fix loss of precision on float addition;"fix loss of precision on float addition

When using wrap_180_cd() we are adding a small float (180 * 100) to a
possibly big number. This may lose float precision as illustrated by the
unit test failing:

    OUT: ../../libraries/AP_Math/tests/test_math.cpp:195: Failure
    OUT: Value of: wrap_180_cd(-3600000000.f)
    OUT:   Actual: -80
    OUT: Expected: 0.f
    OUT: Which is: 0";['libraries/AP_Math/tests/test_math.cpp', 'libraries/AP_Math/AP_Math.cpp'];2;39
4d769497c950c1c12dfa8401fa70dfaebf2f0dc7;4d769497;plane;plane;RC_Channel refactor;"RC_Channel refactor

Fix white space after function name";['ArduPlane/radio.cpp'];1;2
c0c8f1a5cced17c1452a70299a4d33b08679bc99;c0c8f1a5;library;rc_channel;RC_Channel refactor;"RC_Channel refactor

Fix up RC_Channel examples.

Change direct access to data members
to access via member functions";['libraries/RC_Channel/examples/RC_Channel/RC_Channel.cpp', 'libraries/RC_Channel/examples/RC_UART/RC_UART.cpp'];2;10
12cf65baedd23cdaf50d20a72cddf5a2dec811de;12cf65ba;library;tuning;Fix up after RC_Channels refactor;"Fix up after RC_Channels refactor

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['libraries/AP_Tuning/AP_Tuning.cpp'];1;4
662cefd0860eea3990b34cdbdac4da5386850f43;662cefd0;library;antennatracker;Fix up after refactoring RC_Channel class;"Fix up after refactoring RC_Channel class

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['AntennaTracker/servos.cpp', 'AntennaTracker/control_manual.cpp', 'AntennaTracker/system.cpp', 'AntennaTracker/control_servo_test.cpp'];4;76
8c9e55edfa73d8f9ca677e53dde87e780fd3617d;8c9e55ed;rover;rover;Fix up after refactoring RC_Channel class;"Fix up after refactoring RC_Channel class

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['APMrover2/Steering.cpp', 'APMrover2/APMrover2.cpp', 'APMrover2/radio.cpp', 'APMrover2/Log.cpp', 'APMrover2/control_modes.cpp', 'APMrover2/GCS_Mavlink.cpp', 'APMrover2/test.cpp'];7;178
6f200fa9231f9a90ab3ebbb79382229b2ab80e77;6f200fa9;copter;copter;Fix up after refactoring RC_Channel class;"Fix up after refactoring RC_Channel class

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['ArduCopter/heli_control_stabilize.cpp', 'ArduCopter/control_rtl.cpp', 'ArduCopter/control_acro.cpp', 'ArduCopter/control_althold.cpp', 'ArduCopter/arming_checks.cpp', 'ArduCopter/control_land.cpp', 'ArduCopter/control_drift.cpp', 'ArduCopter/radio.cpp', 'ArduCopter/control_loiter.cpp', 'ArduCopter/control_poshold.cpp', 'ArduCopter/motors.cpp', 'ArduCopter/land_detector.cpp', 'ArduCopter/control_auto.cpp', 'ArduCopter/tuning.cpp', 'ArduCopter/switches.cpp', 'ArduCopter/flight_mode.cpp', 'ArduCopter/motor_test.cpp', 'ArduCopter/control_autotune.cpp', 'ArduCopter/control_circle.cpp', 'ArduCopter/control_sport.cpp', 'ArduCopter/control_stabilize.cpp', 'ArduCopter/control_flip.cpp', 'ArduCopter/compassmot.cpp', 'ArduCopter/setup.cpp', 'ArduCopter/heli_control_acro.cpp', 'ArduCopter/control_guided.cpp', 'ArduCopter/ArduCopter.cpp', 'ArduCopter/esc_calibration.cpp'];28;334
7f29903287555946b96d613aa15dafa113e8e745;7f299032;plane;plane;Fix up after refactoring RC_Channel class;"Fix up after refactoring RC_Channel class

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['ArduPlane/system.cpp', 'ArduPlane/radio.cpp', 'ArduPlane/Attitude.cpp', 'ArduPlane/GCS_Mavlink.cpp', 'ArduPlane/navigation.cpp', 'ArduPlane/test.cpp', 'ArduPlane/arming_checks.cpp', 'ArduPlane/motor_test.cpp', 'ArduPlane/quadplane.cpp', 'ArduPlane/Plane.h', 'ArduPlane/ArduPlane.cpp', 'ArduPlane/failsafe.cpp', 'ArduPlane/Log.cpp', 'ArduPlane/px4_mixer.cpp'];14;458
c4aa55a6d92b2f96314693920adb6cd6164286bc;c4aa55a6;library;servorelayevents;Fix up after RC_Channels refactor;"Fix up after RC_Channels refactor

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['libraries/AP_ServoRelayEvents/AP_ServoRelayEvents.cpp'];1;2
8b9c96814b61153b6f31e2bccfbc4149c6a8527c;8b9c9681;library;mount;Fix up after RC_Channels refactor;"Fix up after RC_Channels refactor

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['libraries/AP_Mount/AP_Mount_Backend.cpp'];1;3
daec4ea10e4d4ab5e423796ab33738b6b15445b3;daec4ea1;library;motors;Fix up after RC_Channels refactor;"Fix up after RC_Channels refactor

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_Motors_Class.cpp', 'libraries/AP_Motors/AP_MotorsHeli_RSC.cpp'];3;16
ba9462d13d1ef6bf1d0962ad028c1dc4c6065ddb;ba9462d1;library;apm_obc;Fix up after RC_Channels refactor;"Fix up after RC_Channels refactor

Further to refactor of RC_Channel class which included
adding get_xx set_xx methods, change reads and writes to the public members
to calls to  get and set functionsss

old public member(int16_t)   get function -> int16_t     set function (int16_t)
(expression where c is an object of type RC_Channel)
c.radio_in                     c.get_radio_in()           c.set_radio_in(v)
c.control_in                   c.get_control_in()         c.set_control_in(v)
c.servo_out                    c.get_servo_out()          c.set_servo_out(v)
c.pwm_out                      c.get_pwm_out()            // use existing
c.radio_out                    c.get_radio_out()          c.set_radio_out(v)
c.radio_max                    c.get_radio_max()          c.set_radio_max(v)
c.radio_min                    c.get_radio_min()          c.set_radio_min(v)
c.radio_trim                   c.get_radio_trim()         c.set_radio_trim(v)^^

c.min_max_configured() // return true if min and max are configured

Because data members of RC_Channels are now private and so cannot be written directly
 some overloads are provided in the Plane classes to provide the old functionality

new overload Plane::stick_mix_channel(RC_Channel *channel)
which forwards to the previously existing
void stick_mix_channel(RC_Channel *channel, int16_t &servo_out)^^

new overload Plane::channel_output_mixer(Rc_Channel* , RC_Channel*)const
which forwards to
(uint8_t mixing_type, int16_t & chan1, int16_t & chan2)const^^

Rename functions

 RC_Channel_aux::set_radio_trim(Aux_servo_function_t function)
    to RC_Channel_aux::set_trim_to_radio_in_for(Aux_servo_function_t function)

 RC_Channel_aux::set_servo_out(Aux_servo_function_t function, int16_t value)
    to RC_Channel_aux::set_servo_out_for(Aux_servo_function_t function, int16_t value)

 Rationale:

        RC_Channel is a complicated class, which combines
        several functionalities dealing with stick inputs
        in pwm and logical units, logical and actual actuator
        outputs, unit conversion etc, etc
        The intent of this PR is to clarify existing use of
        the class. At the basic level it should now be possible
        to grep all places where private variable is set by
        searching for the set_xx function.

        (The wider purpose is to provide a more generic and
        logically simpler method of output mixing. This is a small step)";['libraries/APM_OBC/APM_OBC.cpp'];1;8
39f72610e24965261b868fc6212c6a1235b44d75;39f72610;library;math;quaternion: fix style;"quaternion: fix style

Remove trailing spaces and run astyle.";['libraries/AP_Math/quaternion.h', 'libraries/AP_Math/quaternion.cpp'];2;98
3853aa0fe32222104ca62a289e0ce463eeee02ae;3853aa0f;plane;plane;fix for changed API;fix for changed API;['ArduPlane/GCS_Mavlink.cpp'];1;2
874fae931fb727b00679376e4d4959ec957cde04;874fae93;copter;copter;fix for changed API;fix for changed API;['ArduCopter/GCS_Mavlink.cpp'];1;2
772acf056b1993ea03e15ad7241708ddea808386;772acf05;tools;replay;fixed overriding of parameters;"fixed overriding of parameters

bug was later PARM messages in log";['Tools/Replay/Replay.cpp'];1;4
a5c55c3fbdf4f8135b744144768a2d658dd742ae;a5c55c3f;copter;copter;fix get_non_takeoff_throttle;"fix get_non_takeoff_throttle

The throttle_mid parameter (for historic reason) is interpreted as a value that includes throttle_min.  This means we must subtract the throttle_min value from it when converting it to a throttle in the 0 to 1 range.";['ArduCopter/Attitude.cpp'];1;4
6bcd9e6f65b43c3bfa0554b81ff764e0030159aa;6bcd9e6f;copter;copter;:pre_arm_rc_checks: fix logic checking that throttle min and max are configured;:pre_arm_rc_checks: fix logic checking that throttle min and max are configured;['ArduCopter/arming_checks.cpp'];1;2
cf11776150a8a323cf817e8ce6155402b8d0e68d;cf117761;library;hal;fix signed and unsigned comparison warning;"fix signed and unsigned comparison warning

../../libraries/AP_HAL/examples/Printf/Printf.cpp:63:17: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         if (ret != strlen(float_tests[i].result)) {
                 ^
...

ardupilot/modules/gtest/include/gtest/gtest.h:1448:16: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   if (expected == actual) {
                ^
And similar ones.";['libraries/AP_HAL/utility/tests/test_own_ptr.cpp', 'libraries/AP_HAL/examples/Printf/Printf.cpp'];2;34
c82f28f35ae6f208f9b17912209d24c22d40140f;c82f28f3;tools;tools;CPUInfo: fix warnings on printf;"CPUInfo: fix warnings on printf

../../Tools/CPUInfo/CPUInfo.cpp:21:54: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
  hal.console->printf(""char      : %d\n"", sizeof(char))^^
                                                      ^
And so on.

Ideally for sizeof() which returns size_t we would use %zu, but that's not
implemented by our version of printf. So use %lu which should be ok in all of
our boards.";['Tools/CPUInfo/CPUInfo.cpp'];1;14
b5d30947382b4e7e7b6a6f6fd1021a9231bf5239;b5d30947;library;adc;fix warning on printf;"fix warning on printf

../../libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.cpp: In function ‘void show_timing()’:
../../libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.cpp:61:88: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘uint32_t {aka unsigned int}’ [-Wformat=]
     hal.console->printf(""timing: mint=%lu maxt=%lu avg=%lu\n"", mint, maxt, totalt/count)^^
                                                                                        ^
../../libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.cpp:61:88: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘uint32_t {aka unsigned int}’ [-Wformat=]
../../libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.cpp:61:88: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 5 has type ‘uint32_t {aka unsigned int}’ [-Wformat=]";['libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.cpp'];1;2
a6b6fb24737aca769ef5f888ec9bfb24198e050e;a6b6fb24;copter;copter;fix TERRAIN_FOLLOW parameter description;"fix TERRAIN_FOLLOW parameter description

Thanks OXINARF";['ArduCopter/Parameters.cpp'];1;1
e23c869c5ded226fef08c8f0b52c8dc414206f14;e23c869c;library;ac_wpnav;fix reporting of set_wp_destination failure;fix reporting of set_wp_destination failure;['libraries/AC_WPNav/AC_WPNav.cpp'];1;4
4a10156b13964c7d1a6d6daf4e8c305b5f85f183;4a10156b;library;hal_linux;Fix RCInput::read from stopping at any zero channel;"Fix RCInput::read from stopping at any zero channel

This bug led to issues for us so it may help others to resolve it.
Currently, the AP_HAL_Linux RCInput::read(uint16_t*,uint8_t) function
only returns the first x nonzero channels. Once it hits a channel that
is set to zero, it stops and all remaining channels are returned as
zero, even if they are set. This causes discrepancies between the raw RC
input sent to the GCS and the RC input that is actually used on the
vehicle.

The fixes this issue and makes it behave exactly as it does on the
PX4_HAL code. We ran into this issue when sending rc_override messages
in which there were some channels set to zero.";['libraries/AP_HAL_Linux/RCInput.cpp'];1;9
197e72acc0efa094c48070b6409d605b00b36ba6;197e72ac;gcs;gcs_mavlink;fixed null termination bug;"fixed null termination bug

found with ASAN";['libraries/GCS_MAVLink/GCS_Common.cpp'];1;5
4e7e84fc996d39f02cf00f7b5063869ab19656e7;4e7e84fc;plane;plane;Modified last_valid_rc_ms AFS failsafe input to work when standard failsafe is on;"Modified last_valid_rc_ms AFS failsafe input to work when standard failsafe is on

Ran into a bug on our physical plane where failsafe.last_valid_rc_ms was not recognizing that the transmitter had failed. This is likely due to how the standard failsafe works in receiving lower-than-possible throttle values. So in order to account for this, I added a new variable to the failsafe, AFS_last_valid_rc_ms, and I update it only if the ch3_failsafe (the throttle failsafe) is not on. If the throttle failsafe is on, that means that the plane has indeed lost transmitter input, so the AFS needs to recognize that.";['ArduPlane/radio.cpp', 'ArduPlane/Plane.h', 'ArduPlane/ArduPlane.cpp', 'ArduPlane/GCS_Mavlink.cpp'];4;12
4419b3c617df6180d8788858f5a2d75b564e6550;4419b3c6;library;ahrs_navekf;fix get_position by using ekf origin;"fix get_position by using ekf origin

The EKF's getPosNED returns a vertical position relative to the EKF origin but previously this function was using it as if it was relative to ahrs's home";['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;15
0095f6168eae018eefe89b0e45f855a156bf3fcb;0095f616;plane;plane;fix handling of SET_HOME_POSITION;"fix handling of SET_HOME_POSITION

Location.altitude is stored in cm.";['ArduPlane/GCS_Mavlink.cpp'];1;2
a310d3735e5f82733e18d34dd1207cd7e4ab6344;a310d373;copter;copter;fix handling of SET_HOME_POSITION;"fix handling of SET_HOME_POSITION

Location.altitude is stored in cm.";['ArduCopter/GCS_Mavlink.cpp'];1;2
436062ef375f695afce485a862bdb5149bf6c29e;436062ef;plane;plane;improved crash detection;"improved crash detection

- fixes bug where a bungee launch is configured but the aircraft gets bumped and triggers the prop to spin up. This will now detect that and ""crash' and disable the motor";['ArduPlane/Plane.h', 'ArduPlane/is_flying.cpp'];2;33
2887e48178cdb44822f20ba104c5cad79c7badac;2887e481;plane;plane;Fixed bug with landing flare for high values of LAND_FLARE_SEC;"Fixed bug with landing flare for high values of LAND_FLARE_SEC

I had an issue in SITL where my plane would round the last WP staring
its landing approach and immediately limit the roll to 5degress even
before the plane had finished turning the corner so it would go WAY
off course.  For a high value of LAND_FLARE_SEC (mine was 5) the math
works out the plane has landed if
    height <= sink_rate * land_flare_sec
During the banking of the last corner the plane started to decend and
quickly set itself up for a 6.1m/s sink rate which is normal.  It was
at 30 meters altitude.  As you can see at this point the math thinks
the plane has landed so limits the roll.  The solution was to ensure
the plane had covered at least 50% of the distance toward the final
waypoint before allowing a flare to happen.  Note that LAND_FLARE_SEC
above 2 is considered very high and this normally wouldn't occur.";['ArduPlane/landing.cpp'];1;6
8f4121556965e1297f905875ebadf60283c6309f;8f412155;copter;copter;fix warning;fix warning;['ArduCopter/flight_mode.cpp'];1;3
5861b754cc536d4f5cd1b5e4f6e6caa014002bf2;5861b754;rover;rover;fixing a bug the Rover simulation;"fixing a bug the Rover simulation

Just a small change to ensure the max_wheel_turn parameter is used
instead of a hard coded value.";['libraries/SITL/SIM_Rover.cpp'];1;2
41b584ac9ed967c77166cf8b5018793375b03d80;41b584ac;plane;plane;fix quadplane qstabilize throttle input;fix quadplane qstabilize throttle input;['ArduPlane/quadplane.cpp'];1;2
fce426409e2d1d5df3c1792cef65fea663cc3c21;fce42640;library;motorstri;fix stab patch;fix stab patch;['libraries/AP_Motors/AP_MotorsTri.cpp'];1;28
344d86a09573f6af858d11f40013974ecde4807c;344d86a0;library;ac_attcontrol_heli;fix parameter description;fix parameter description;['libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp'];1;6
35c6ea994d3ad4ce568da96179aef2a783d0a0c0;35c6ea99;library;ac_attcontrol_multi;fix parameter descriptions;fix parameter descriptions;['libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp'];1;36
c352e1bedf801206878e04d130e04b05ed67769e;c352e1be;copter;copter;fix attitude control parameter declaration;fix attitude control parameter declaration;['ArduCopter/Parameters.cpp'];1;4
425caeabf79211bacdfb4c4b2f1d4de6a40b9ffb;425caeab;library;ac_pi_2d;fix parameter description;fix parameter description;['libraries/AC_PID/AC_PI_2D.cpp'];1;2
227e4f86d793154aff592d46a85a1aad5108c387;227e4f86;library;ac_pid;fix parameter description;fix parameter description;['libraries/AC_PID/AC_PID.cpp'];1;2
e7ba5ae451cdad30daac951f7d9d55b7d0ac61b5;e7ba5ae4;library;motorsmulticopter;fix get_hover_throttle_as_high_end_pct;fix get_hover_throttle_as_high_end_pct;['libraries/AP_Motors/AP_MotorsMulticopter.cpp'];1;2
47873c1d348aaf27a24544ca538d2ee8d22aed8f;47873c1d;library;motorsheli;fix RSC_SETPOINT param description;fix RSC_SETPOINT param description;['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;2
2b123ee15dcf06a1cfa053f7ef0500465897c7dd;2b123ee1;library;ac_attcontrolheli;fix rate_bf_to_motor_roll_pitch and yaw output in -1 to +1 range;fix rate_bf_to_motor_roll_pitch and yaw output in -1 to +1 range;['libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp'];1;6
4dd4d38b9bd1c09a09b09ad42250e37d31700bea;4dd4d38b;library;motorsmulticopter;fix output_to_motors definition;fix output_to_motors definition;['libraries/AP_Motors/AP_MotorsMulticopter.h'];1;2
c5e5b4f78397355c8a4922b469cc0481137f5103;c5e5b4f7;library;ac_attcontrol;fix rate controller max definitions to -1 to +1 range;fix rate controller max definitions to -1 to +1 range;['libraries/AC_AttitudeControl/AC_AttitudeControl.h'];1;6
24f975c16a421ae4cc9c6986effd0194b5cb263e;24f975c1;library;ac_attcontrol_multi;fix throttle boost for 0 to 1;fix throttle boost for 0 to 1;['libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp'];1;11
110d41ee24fa9da5fdf7c785ada1a8816ad9cdcf;110d41ee;library;motorscoax;fix SV_SPEED param description;fix SV_SPEED param description;['libraries/AP_Motors/AP_MotorsCoax.cpp'];1;2
8a6e5ffe80046b84f01747443591ebd775307928;8a6e5ffe;plane;plane;fixed bug in rangefinder landing;"fixed bug in rangefinder landing

introduced with QLAND change";['ArduPlane/altitude.cpp'];1;7
72b246e52c9412fd4fc974c6446b8d66212f80cf;72b246e5;library;hal_linux;fix use of 0-length array;"fix use of 0-length array

0-length arrays are supported in C but forbidden in C++. GCC allows it
but clang is more strict:

../../libraries/AP_HAL_Linux/SPIDriver.cpp:75:35: fatal error: no matching constructor for initialization of 'Linux::SPIDeviceDriver [0]'
SPIDeviceDriver SPIDeviceManager::_device[0]^^
                                  ^
../../libraries/AP_HAL_Linux/SPIDriver.h:20:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 0 were provided
class SPIDeviceDriver : public AP_HAL::SPIDeviceDriver {
      ^
../../libraries/AP_HAL_Linux/SPIDriver.h:20:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 0 were provided
../../libraries/AP_HAL_Linux/SPIDriver.h:25:5: note: candidate constructor not viable: requires 9 arguments, but 0 were provided
    SPIDeviceDriver(const char *name, uint16_t bus, uint16_t subdev, enum AP_HAL::SPIDeviceType type, uint8_t mode, uint8_t bitsPerWord, int16_t cs_pin, uint32_t lowspeed, uint32_t highspeed)^^
    ^
1 error generated.";['libraries/AP_HAL_Linux/SPIDriver.cpp'];1;6
abbe41982337f60d6d66e2ca62abfcc19626c61f;abbe4198;library;compass;fix mismatched tag;"fix mismatched tag

In file included from /home/lucas/p/dronecode/ardupilot/libraries/AP_Compass/Compass.h:6:
/home/lucas/p/dronecode/ardupilot/libraries/AP_Compass/CompassCalibrator.h:86:5: warning: struct 'param_t' was previously declared as a class [-Wmismatched-tags]
    struct param_t _params^^
    ^
/home/lucas/p/dronecode/ardupilot/libraries/AP_Compass/CompassCalibrator.h:44:11: note: previous use is here
    class param_t {
          ^
/home/lucas/p/dronecode/ardupilot/libraries/AP_Compass/CompassCalibrator.h:86:5: note: did you mean class here?
    struct param_t _params^^
    ^~~~~~";['libraries/AP_Compass/CompassCalibrator.h'];1;2
d8eb0d401d67090067f05697bcb1198a0f5eeeb2;d8eb0d40;library;compass;fix missing rename;"fix missing rename

cb8355c (AP_HAL: fix compass define for bebop) renamed the constant in
AP_HAL but not in AP_Compass.";['libraries/AP_Compass/Compass.cpp'];1;2
cb8355c315a01cbff9e0f1b7dc3aa2a416ad672c;cb8355c3;library;hal;fix compass define for bebop;fix compass define for bebop;['libraries/AP_HAL/AP_HAL_Boards.h'];1;2
057822b51c18d577326f0019546b17bdb074b63b;057822b5;library;inertialsensor;AuxiliaryBus: fix return value;"AuxiliaryBus: fix return value

We should return the number of bytes written/read, not 0 on success.
This number may be useful in some cases so return it.

While at it fix a simple wrong space in the header.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.h', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.cpp'];3;18
6729475b254888b8e150ee5ce6fde43985324948;6729475b;library;math;fix eulers example for PX4;fix eulers example for PX4;['libraries/AP_Math/examples/eulers/eulers.cpp'];1;8
f3638f421ea116b6de53a375401c3f50e3e03836;f3638f42;plane;plane;fix short loiters exiting early;fix short loiters exiting early;['ArduPlane/commands_logic.cpp'];1;6
16acca865fd24bc405cd2ff91111fa1f12c672bd;16acca86;library;compass;AP_Compass_test: fix style;"AP_Compass_test: fix style

Used uncrustify and some manual changes.";['libraries/AP_Compass/examples/AP_Compass_test/AP_Compass_test.cpp'];1;59
47be4b5868dbf37412f8cef3f0c5b3da7f9c2792;47be4b58;library;opticalflow;fix use of undefined variable;"fix use of undefined variable

../../libraries/AP_OpticalFlow/AP_OpticalFlow_Onboard.cpp:86:5: warning: ""FLOWONBOARD_DEBUG"" is not defined [-Wundef]
 #if FLOWONBOARD_DEBUG
     ^";['libraries/AP_OpticalFlow/AP_OpticalFlow_Onboard.cpp'];1;8
38b3625ed86567c4c04ccd15b627235927c51059;38b3625e;library;navekf2;Fix bug in initial alignment calculation;"Fix bug in initial alignment calculation

The bug caused the initial roll angle to be incorrect if the vehicle was powered up when inverted, causing long alignment times.";['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp'];1;2
9718ee23d1747975b6043de998a33b313b80fba8;9718ee23;library;hal;fix peekbytes casting;fix peekbytes casting;['libraries/AP_HAL/utility/RingBuffer.h'];1;2
4aefe1caee243dc38c9bf69492769168dbb6ab62;4aefe1ca;library;navekf2;Fix sign error in magnetic heading innovation calculation;Fix sign error in magnetic heading innovation calculation;['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;8
7e4ae39b8e5cd89359e715f580a2e55f79fea89a;7e4ae39b;library;arming;fixed GPS_CFG mask bug;fixed GPS_CFG mask bug;['libraries/AP_Arming/AP_Arming.h'];1;2
0ccd2de12b0e0048396bc87089189ab898884a20;0ccd2de1;library;ahrs;fix use of undefined macro;"fix use of undefined macro

../../libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.cpp:63:5: warning: ""WITH_GPS"" is not defined [-Wundef]
 #if WITH_GPS
     ^

g_gps was not even declared so remove it.";['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.cpp'];1;3
69f6a73c190e8d7e4bc73494da8b26e281933eb1;69f6a73c;library;global;fix missing renames for HAL_BOARD_SUBTYPE_LINUX_ERLEBOARD;"fix missing renames for HAL_BOARD_SUBTYPE_LINUX_ERLEBOARD

Commit b87fd58 (AP_HAL: ERLEBOARD legacy support) renamed the define but
forgot some around.";['libraries/AP_HAL_Linux/HAL_Linux_Class.cpp', 'libraries/AP_BattMonitor/AP_BattMonitor_Analog.h'];2;4
1f072c43530edb598ba9fb07fd556c72cb25f0ae;1f072c43;library;hal;fix unused variable;"fix unused variable

../../libraries/AP_HAL/examples/UART_test/UART_test.cpp:13:28: warning: ‘uarts’ defined but not used [-Wunused-variable]
 static AP_HAL::UARTDriver* uarts[] = {
                            ^";['libraries/AP_HAL/examples/UART_test/UART_test.cpp'];1;6
047e9fabafa8a1869456ad27983c3acd744a50f1;047e9fab;library;navekf2;Fix bug in simple heading fusion;"Fix bug in simple heading fusion

The innovation calculation should have been updated when the heading fusion maths was updated.

We now use a direct heading or yaw angle measurement in the derivation, not the difference between observed and published declination.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;18
8da58226aedf99932f755d55361a73d516fdcc57;8da58226;library;hal_linux;Fix BBBmini IIO scaling;Fix BBBmini IIO scaling;['libraries/AP_HAL_Linux/AnalogIn_IIO.h'];1;2
6a34e4c38450acec8bb5ac37b7542a77e942e1a8;6a34e4c3;library;navekf2;Fix bug in magnetic heading and declination fusion equations.;"Fix bug in magnetic heading and declination fusion equations.

The derivation incorrectly used a tan instead of an atan function. This applies the corrected auto-code.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;118
f22f4928dcc1d1001b311d9ce71c333cce2dfc68;f22f4928;library;hal_flymaple;fix constructor after I2CDevice;fix constructor after I2CDevice;['libraries/AP_HAL_FLYMAPLE/HAL_FLYMAPLE_Class.cpp'];1;1
c2db6bfb9dc1b9f01c21829a235f99b01600791e;c2db6bfb;library;param;Fix warning;"Fix warning

Cast to the original type to use get function.
Still a hack but better than casting a pointer to an object which
memory mapping we are not supposed to know";['libraries/AP_Param/AP_Param.cpp'];1;8
217a06322b012311fbe3a606ad72a0f41cfec004;217a0632;library;gps;u-blox: don't throw 5hz update warnings if no fix;"u-blox: don't throw 5hz update warnings if no fix

5hz update warnings are only valid if you have a fix, without a fix it adds load
to the GPS without any benefit. Our _5hz time messages are depenend upon GPS fix
time which isn't available yet";['libraries/AP_GPS/AP_GPS_UBLOX.cpp'];1;7
da01ceee53eaaf8610ed799fb58c85aa0d0732a1;da01ceee;library;tecs;change order of update_speed() so it's not using the previous EAS_dem;"change order of update_speed() so it's not using the previous EAS_dem

bug reported by @NUAAFLY https://github.com/diydrones/ardupilot/issues/1547";['libraries/AP_TECS/AP_TECS.cpp'];1;7
0e09975fa6b921d5090c36e0fa140436400d3b75;0e09975f;library;hal_sitl;fix typo;fix typo;['libraries/AP_HAL_SITL/SITL_State.cpp'];1;2
5d28fbfa1bb58fe8f4ca5e28252c3b967c820488;5d28fbfa;library;compass;Erle-Brain 2 and PXFmini fix;Erle-Brain 2 and PXFmini fix;['libraries/AP_Compass/Compass.h'];1;3
5629f38b2c8e47408e31096d7bf4ab3310445692;5629f38b;library;hal_linux;RCInput_RPI: fix use of uninitiliazed value;"RCInput_RPI: fix use of uninitiliazed value

../../libraries/AP_HAL_Linux/RCInput_RPI.cpp: In member function ‘virtual void Linux::RCInput_RPI::_timer_tick()’:
../../libraries/AP_HAL_Linux/RCInput_RPI.cpp:489:127: warning: ‘x’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     counter = circle_buffer->bytes_available(curr_pointer, circle_buffer->get_offset(circle_buffer->_virt_pages, (uintptr_t)x))^^
                                                                                                                               ^";['libraries/AP_HAL_Linux/RCInput_RPI.cpp'];1;2
43307d95c88fba4f7c7d3d58c882d948252dbe5b;43307d95;library;opticalflow_onboard;fix body rate calculation;"fix body rate calculation

The correct integral of the body rate is (rate + last_rate)/2*dt
and not rate * dt";['libraries/AP_HAL_Linux/OpticalFlow_Onboard.h', 'libraries/AP_HAL_Linux/OpticalFlow_Onboard.cpp'];2;12
287ebe8e6ad29597b7f96581fc6996377e406487;287ebe8e;library;navekf2;Fix bug in application of sensor bias corrections;"Fix bug in application of sensor bias corrections

Sensor bias corrections were being applied to the incoming IMU data using the wrong delta time.
This was what was driving the different tuning between plane and copter for gyro bias process noise so the same gyro bias process noise default tuning value can now be used for all platform types.
Sensor bias corrections were being applied a a second time to the output observer inertial data.";['libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];3;22
52c4715c945e63f60ced3245339f7c09afa252e2;52c4715c;plane;plane;fixed init bug on low memory for quadplane;fixed init bug on low memory for quadplane;['ArduPlane/quadplane.h', 'ArduPlane/quadplane.cpp'];2;50
8c7f36563cdc73d2a6129c71d632fc12a5275848;8c7f3656;library;ac_attcontrol;bug fix to angle_boost reporting;"bug fix to angle_boost reporting

Thanks to OXINARF for finding this";['libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp'];1;2
15e673f5ae4b4caa31ac5572f6e829aeaeffdc2a;15e673f5;copter;copter;fix precland parameter description prefix;"fix precland parameter description prefix

Thanks to Thomas Stone for finding this

No functional change";['ArduCopter/Parameters.cpp'];1;2
238e9120003cf7b543cab3246ec61289f8523267;238e9120;library;rc_channel;allow find_channel() to be called early;"allow find_channel() to be called early

and fix a bug!";['libraries/RC_Channel/RC_Channel_aux.h', 'libraries/RC_Channel/RC_Channel_aux.cpp'];2;8
cbb313ec2cc93151e57d35aa23836a2bf853397e;cbb313ec;library;hal_linux;Fix OpticalFlow crop calculation;"Fix OpticalFlow crop calculation

'left' value should be the lateral edges size";['libraries/AP_HAL_Linux/OpticalFlow_Onboard.cpp'];1;6
21205f8b417b434ec4dbdbaab1e67e81d5659350;21205f8b;plane;plane;improved crash detection logic and agility;"improved crash detection logic and agility

- inhibit crash detection warnings when disabled by param so now it can be completely disabled
- reset is_crashed when disabled by param
- fixed pre-takeoff detection bug by adding in_preLaunch_flight_stage() where we are actually in FLIGHT_NORMAL instead of FLIGHT_TAKEOFF during setup of bungee launches. This now detects if we're in that state
- simplified the use of been_auto_flying to check across all flight stages. before it was excluded to handle hand-launches which can now be detected with in_preLaunch_flight_stage()
- added impact detector timer to clamp is_flying a few seconds after an impact
- logging new impact detector as ""STAT.Hit""";['ArduPlane/system.cpp', 'ArduPlane/Plane.h', 'ArduPlane/is_flying.cpp', 'ArduPlane/Log.cpp'];4;133
e2879b375ddf44276284df76b24d5efe4af04f88;e2879b37;copter;copter;fix Ch6 Tuning when no RC Receiver on boot;fix Ch6 Tuning when no RC Receiver on boot;['ArduCopter/tuning.cpp'];1;4
4e9f82a0e741a675e932ad83578f048fdb8917cd;4e9f82a0;library;notify;fix parameter description;fix parameter description;['libraries/AP_Notify/AP_Notify.cpp'];1;6
180359d6ddc75682e6a6a65ca668e3c96430752b;180359d6;library;math;fix unit test;"fix unit test

For ROTATION_ROLL_90_PITCH_68_YAW_293 consider the angles as 90, 68.8
and 293.3 degrees to pre-calculate rotation. This matches the rotation
matrix used in code.

While at it, check not only the values are close enough but also the
length of the vector.";['libraries/AP_Math/tests/test_vectors.cpp'];1;11
bae16a61e262c153844808f24906f0ba52cf330f;bae16a61;library;inertialsensor;fix segfault;fix segfault;['libraries/AP_InertialSensor/AP_InertialSensor_Backend.cpp'];1;2
97022a416172879795258062bfacc444f755195a;97022a41;library;hal;RingBuffer: fix macro expansion;"RingBuffer: fix macro expansion

Fix warning that reveals a real bug:

In file included from libraries/AP_HAL_Linux/UARTDriver.cpp:25:0:
libraries/AP_HAL_Linux/UARTDriver.cpp: In member function 'virtual bool Linux::UARTDriver::tx_pending()':
libraries/AP_HAL/utility/RingBuffer.h:21:35: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
 #define BUF_EMPTY(buf) buf##_head == buf##_tail
                                   ^
libraries/AP_HAL_Linux/UARTDriver.cpp:355:13: note: in expansion of macro 'BUF_EMPTY'
     return !BUF_EMPTY(_writebuf)^^

The problem is when there's a ! operator: without the parenthesis we would actually be doing

    return !_write_buf_head == _write_buf_tail

which is not what we want.";['libraries/AP_HAL/utility/RingBuffer.h'];1;2
a042845da8f36a8f0f0fdb7c27691fc5431d015b;a042845d;library;navekf;avoid an optimiser bug in clang;avoid an optimiser bug in clang;['libraries/AP_NavEKF/AP_NavEKF_core.cpp', 'libraries/AP_NavEKF/AP_NavEKF_core.h'];2;16
eab8a8679d4cbe7f4e7965e77dd47449805623d6;eab8a867;plane;plane;fix invalid Range meta data;fix invalid Range meta data;['ArduPlane/Parameters.cpp'];1;2
605fedc1c09d2a673bd9fc598281d41b9e3e144f;605fedc1;library;tecs;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_TECS/AP_TECS.cpp'];1;2
34d5dd0257195bfbe6656e6b4db0b276d2aa5e9b;34d5dd02;library;navekf;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;12
85732459630ce84e33a8c5ba03303a7b05d9821c;85732459;library;navekf2;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;10
ed7cd8d3f424c1802ef8a836780ee193d635dda1;ed7cd8d3;library;motors;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_Motors/AP_MotorsHeli_Single.cpp'];1;2
e891ae8a8979ac24c29a28e13b70ddb77519168f;e891ae8a;library;l1_control;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_L1_Control/AP_L1_Control.cpp'];1;6
47586dae0799fd962fb82c2bedc0db129faf70de;47586dae;library;inertialsensor;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_InertialSensor/AP_InertialSensor.cpp'];1;2
2b1bc22b2ae9bbe15f10d4554c2d88dac0ec68d2;2b1bc22b;library;boardconfig;fix invalid Range meta data;fix invalid Range meta data;['libraries/AP_BoardConfig/AP_BoardConfig.cpp'];1;2
d24f6f405020cc0685989a9360268a52de1ba20a;d24f6f40;library;navekf;fixed static const bug;fixed static const bug;['libraries/AP_NavEKF/AP_NavEKF_core.cpp'];1;4
2a953c4e35fb685791c46cb83c33e420f1c3a5d4;2a953c4e;library;hal_linux;add missing casts;"add missing casts

These errors were all over the VideoIn.cpp file:

libraries/AP_HAL_Linux/VideoIn.cpp: In member function 'bool Linux::VideoIn::allocate_buffers(uint32_t)':
libraries/AP_HAL_Linux/VideoIn.cpp:107:15: error: invalid conversion from 'uint32_t {aka unsigned int}' to 'v4l2_memory' [-fpermissive]
     rb.memory = _memtype^^
               ^
libraries/AP_HAL_Linux/VideoIn.cpp: In member function 'bool Linux::VideoIn::set_format(uint32_t*, uint32_t*, uint32_t*, uint32_t*, uint32_t*)':
libraries/AP_HAL_Linux/VideoIn.cpp:169:14: error: invalid conversion from 'int' to 'v4l2_buf_type' [-fpermissive]
     fmt.type = V4L2_CAP_VIDEO_CAPTURE^^
              ^

Add proper casts to fix the compilation.";['libraries/AP_HAL_Linux/VideoIn.cpp'];1;18
d003e2418995dbee86ad96fd7375f9964a45d4de;d003e241;library;adsb;fix unit conversion;fix unit conversion;['libraries/AP_ADSB/AP_ADSB.cpp'];1;2
38575dd87ab1603e38bf91bf336b7eefd591750d;38575dd8;library;math;Fix parameter name in nsec_to_hz();Fix parameter name in nsec_to_hz();['libraries/AP_Math/AP_Math.h'];1;4
a27d7f8a93c2c15a6d8bb796a0809bfc64392f79;a27d7f8a;library;inertialsensor_mpu6000;Fix FIFO reset;"Fix FIFO reset

Change the sequence. Previous sequence was sometimes causing failure
to initialize the IMU.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;5
0a36503742110771cf5a3dd570c70cae9ff00074;0a365037;library;hal_linux;fixed a bug with UDP packetisation;"fixed a bug with UDP packetisation

this fixes a bug where we would send UDP MAVLink packets larger than 300 bytes";['libraries/AP_HAL_Linux/UARTDriver.cpp'];1;19
0a701088d448365a8c449215fbd1eae168e32485;0a701088;library;math;fix bug in Quaternion::operator*=;fix bug in Quaternion::operator*=;['libraries/AP_Math/quaternion.cpp'];1;8
846ee7d2af59d9d712740ecc52dad6f817a6f1bd;846ee7d2;library;ac_attitudecontrol;fix regression in angular velocity controller;fix regression in angular velocity controller;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;2
49abb783720b262a2ba42f1b5ffe6257345b9775;49abb783;library;hal_linux;fix warning due to derived PWM_Sysfs;"fix warning due to derived PWM_Sysfs

PWM_Sysfs derives from PWM_Sysfs_Base which was not update to have a
virtual destructor. Make PWM_Sysfs_Base's constructor virtual.";['libraries/AP_HAL_Linux/PWM_Sysfs.h'];1;2
30f631de8f54c78fb56ad0df2aa6a075c6d57d03;30f631de;library;barometer;MS5637: fix CRC check;"MS5637: fix CRC check

The configuration of MS5637 is different from MS5611 in 2 ways:

    - The PROM is of 112 bytes rather than 128
    - The CRC is located in the first MSB of the first word, not the
      last one

For CRC calculation we also need to zero out the last (missing) word.

This renames _check_crc() to _read_prom(), which returns false when the
PROM doesn't contain valid data. It also makes it virtual so MS5637 can
override it. This also moves the PROM read to be all in the same place
rather than split between the CRC field and coefficient fields. Finally
calculate_crc() is renamed to crc4() to be shorter and add info on what
it does.";['libraries/AP_Baro/AP_Baro_MS5611.cpp', 'libraries/AP_Baro/AP_Baro_MS5611.h'];2;99
83ff0476a823158a8221e7fd70ef5c89ffeb17f1;83ff0476;copter;copter;fix signed/unsigned comparison warning;"fix signed/unsigned comparison warning

commands_logic.cpp: In member function 'bool
Copter::verify_within_distance()':
commands_logic.cpp:770:21: warning: comparison between signed and
unsigned integer expressions [-Wsign-compare]
     if (wp_distance < MAX(condition_value,0)) {
	                          ^";['ArduCopter/commands_logic.cpp'];1;2
0fa362ff5c446df24ca6d3a90f73a1c936722a38;0fa362ff;library;notify;Fix GPIO declaration for Linux boards;"Fix GPIO declaration for Linux boards

Currently, the default behaviour on linux boards tries to
write LED gpios with fixed values among them. There is no way
to declare that there are no LED GPIOs.
This commit moves the declaration of the LED Gpios in AP_HAL_Boards.h
and makes AP_Notify do nothing if no LED gpio was declared";['libraries/AP_Notify/ExternalLED.h', 'libraries/AP_Notify/AP_BoardLED.cpp', 'libraries/AP_HAL/AP_HAL_Boards.h', 'libraries/AP_Notify/VRBoard_LED.cpp', 'libraries/AP_Notify/ExternalLED.cpp', 'libraries/AP_Notify/AP_BoardLED.h'];6;116
ddb7d92fc8a49b3ed43e87c5d3692d4fdc100ed5;ddb7d92f;library;navekf2;Fix timing jitter in airspeed fusion;"Fix timing jitter in airspeed fusion

The airspeed observation buffer was only being checked when new data arrived instead of every frame which introduced some timing jitter. The buffer is now checked every filer update step.
The duplication and inconsistent naming of booleans used to indicate availability f data has been fixed.";['libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_AirDataFusion.cpp'];3;21
3014eb40017e6aa58719de3f503f0c494a469e91;3014eb40;library;navekf2;Rework measurement buffer refactor;"Rework measurement buffer refactor

These changes were pair coded an tested by Siddharth Purohit and Paul Riseborough

Fix indexing errors
Move buffer code into a separate file
Split observer and IMU/output buffers and remove duplicate sample time
Optimise observation buffer search
Reduce maximum allowed fusion age to 100 msec";['libraries/AP_NavEKF2/AP_NavEKF2_Buffer.h', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];4;353
7b38f2185f933f6d3ed75a04be3bb1479b66d132;7b38f218;library;ahrs;use the right DCM matrix for right EKF;"use the right DCM matrix for right EKF

this fixes a bug where the EKF2 DCM matrix would be used for
get_dcm_matrix() when EKF1 was active";['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;4
20798316e1c3f2d3771d7744016252f27ac50973;20798316;library;navekf2;fix bug in performance timer;fix bug in performance timer;['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp'];1;2
9b82b2200cc0a9280aa29e424f0f27986bfb4d63;9b82b220;library;navekf2;Fix plane in-flight yaw reset;"Fix plane in-flight yaw reset

The copter method was being used for plane and the plane method was not being run due to the change in flight status not being detected.
The plane reset method did not trigger if the EKF had already dragged the velocity states along with the GPS or could align to an incorrect heading.
The method has been reworked so that it resets to the GPS course, but only if there are inconsistent angles and large innovations.
To stop a failed magnetometer causing a loss of yaw reference later in flight, if all available sensors have been tried in flight and timed out, then no further magnetoemter data will be used";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];5;118
2f610a400a67a692594e343db19da0dde19cc5b8;2f610a40;library;hal_linux;fix perf;"fix perf

Fix warning (warning: declaration of 'perf_count' shadows a member of 'this')
and check that perf is not NULL before indirection";['libraries/AP_HAL_Linux/Perf.cpp'];1;23
259f5f07e802a9e66f9adf53e582b5743bc69379;259f5f07;library;navekf_core;fix init of perf;"fix init of perf

_perf_FuseOptFlow  was used and not allocated";['libraries/AP_NavEKF/AP_NavEKF_core.cpp'];1;3
7ad623dc702cf6a6f31ce207bc130f052e335dce;7ad623dc;copter;copter;Helicopter, fix so servos move after arming in Acro and Stabilize.;Helicopter, fix so servos move after arming in Acro and Stabilize.;['ArduCopter/heli_control_stabilize.cpp', 'ArduCopter/heli_control_acro.cpp'];2;2
2632a2e348715254c7666b3b5b609472be8a752a;2632a2e3;copter;copter;Rework arming proceedures for interlock/Estop;"Rework arming proceedures for interlock/Estop

to fix race condition.";['ArduCopter/ArduCopter.cpp', 'ArduCopter/motors.cpp'];2;61
bbbbd07935aca57269803f20cdb53ba54609d655;bbbbd079;rover;rover;GPS fix to ensure we only look at new GPS messages;GPS fix to ensure we only look at new GPS messages;['APMrover2/Rover.h', 'APMrover2/APMrover2.cpp'];2;5
ca31ced2b4fe26b74046e631f7359b8b335b103e;ca31ced2;library;navekf2;Fix bug preventing use of optical flow with multiple IMU's;Fix bug preventing use of optical flow with multiple IMU's;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;4
42b47acdfcce3f76cf5d62a3fc5483b13081cf7a;42b47acd;library;dataflash;Fix logging error for EKF second instance;Fix logging error for EKF second instance;['libraries/DataFlash/LogFile.cpp'];1;1
d6f7156f4efd595b1c60dd1f6f7bc8c8c5ef148d;d6f7156f;library;navekf2;Fix timing offset in position reset calculation;"Fix timing offset in position reset calculation

the correction for GPS latency now uses the correct time for that observation";['libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp'];1;4
e9c6702269069ceb53b8d6e46a1be3ea4d202c58;e9c67022;library;hal_vrbrain;fix typo using comma operator;"fix typo using comma operator

We want to return mallinfo().fordblks, not the struct using the comma
operator with a non-existing fordblks variable.";['libraries/AP_HAL_VRBRAIN/Util.cpp'];1;2
8e351a058d24315c50152bbebd854443bcf6dc46;8e351a05;library;inertialsensor;MPU6000: enable data-ready pin for minlure;"MPU6000: enable data-ready pin for minlure

Data-ready pin wasn't being used before due to a bug in the Kernel with
concurrent accesses to GPIO in Intel Baytrail platforms. That has been fixed in
Kernel version 4.2.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;2
42214ec3035b583da640357aae28b4b7406b32f0;42214ec3;library;navekf;Fix failure to start mag cal due to gyro noise;"Fix failure to start mag cal due to gyro noise

Vibration in the 400Hz delta angles could cause the angular rate condition check for in-flight magnetic field alignment to fail.
The symptons were failure to start magnetic field learning as expected when EK2_MAG_CAL=3 was set.
The calculation of a delta rotation between consecutive magnetometer samples has been introduced instead of the most recent IMU delta angle as this is less affected by noise and give an upper bound on the angular error.
the check has been moved into the magnetometer fusion control function so that any reset will be performed using fresh magnetometer data";['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;45
aa14de9d3999cc4b99181ba01039d49c955ecec2;aa14de9d;library;navekf2;Fix failure to start mag cal due to gyro noise;"Fix failure to start mag cal due to gyro noise

Vibration in the 400Hz delta angles could cause the angular rate condition check for in-flight magnetic field alignment to fail.
The symptons were failure to start magnetic field learning as expected when EK2_MAG_CAL=3 was set.";['libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp'];3;19
b6d63d4b4efcd3ee43963aff9f165a59fbb5ce08;b6d63d4b;library;navekf2;Fix reporting of pre-flight GPS checks;"Fix reporting of pre-flight GPS checks

Re-order checks so that that less important messages are not hidden when the 40 character buffer overflows
Add required output methods";['libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2.h', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h'];5;195
79230bc68db14b1b20f95838cee339090868ee5f;79230bc6;rover;rover;fix passing AP_Float to printf;"fix passing AP_Float to printf

Call get() to return the contained float value.";['APMrover2/test.cpp'];1;2
68bef1ec64f6b1459d6f0479412e319508119542;68bef1ec;library;param;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['libraries/AP_Param/AP_Param.cpp'];1;10
c3fe71a0d53934400973938d3d8e6fc622c6da3e;c3fe71a0;rover;rover;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['APMrover2/Log.cpp'];1;2
cfe6e209dbd4aae78829e22a97d415984f72b3a4;cfe6e209;plane;plane;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['ArduPlane/Log.cpp'];1;2
d2a259cef0eea43c467ed2b284e71ea371816b7e;d2a259ce;library;dataflash;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['libraries/DataFlash/LogFile.cpp'];1;4
bdd1d5e9d4c62fd79abd9db034af84a6dc8806a3;bdd1d5e9;tools;menu;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['libraries/AP_Menu/AP_Menu.cpp'];1;4
62ba8266efe764daed941ac1306247ab2e76f5c2;62ba8266;library;inertialsensor;fix wrong printf format for printf;"fix wrong printf format for printf

""%S"" is used for wide string, but we are passing a char*. Use lowercase
in this case to remove warnings like this:

libraries/AP_InertialSensor/AP_InertialSensor.cpp: In member function
'bool AP_InertialSensor::calibrate_accel(AP_InertialSensor_UserInteract*, float&, float&)':
libraries/AP_InertialSensor/AP_InertialSensor.cpp:620:61: warning:
format '%S' expects argument of type 'wchar_t*', but argument 3 has type 'const char*' [-Wformat=]
                 ""Place vehicle %S and press any key.\n"", msg)^^
                                                             ^";['libraries/AP_InertialSensor/AP_InertialSensor.cpp'];1;2
b02661b478bfbb4f5c66a924ce3234c7872c5afa;b02661b4;rover;rover;fix wrong printf format for 32 bits;"fix wrong printf format for 32 bits

Heading is a 32 bits value, so use %d.";['APMrover2/test.cpp'];1;2
d40349d6aef50fab967e457948594aee52d9eb6a;d40349d6;plane;plane;fix wrong printf format for 32 bits;"fix wrong printf format for 32 bits

Heading is a 32 bits value, so use %d.";['ArduPlane/test.cpp'];1;2
f4e71affa144705372bce2dae423fdc519e739d0;f4e71aff;copter;copter;fix wrong printf format for 32 bits;"fix wrong printf format for 32 bits

Heading is a 32 bits value, so use %u.";['ArduCopter/test.cpp'];1;2
a6fd94c6fe547ed01af48cb23fb249c0cd1cf26a;a6fd94c6;plane;plane;fix wrong printf format for 32 bits;"fix wrong printf format for 32 bits

""micros() - before"" doesn't return a long value. Use ""%u"".";['ArduPlane/Parameters.cpp'];1;2
e9b6c764547e5fef12622aaca3b44559fc84fa8c;e9b6c764;copter;copter;fix wrong printf format for 32 bits;"fix wrong printf format for 32 bits

""micros() - before"" doesn't return a long value. Use ""%u"".";['ArduCopter/Parameters.cpp'];1;2
c397e550e2564a90f87403bdb60c2c26fd602f49;c397e550;copter;copter;fix warning due to wrong type;"fix warning due to wrong type

""%s"" expects a string. This works since the string in the struct is the
first member so it's harmless.";['ArduCopter/setup.cpp'];1;2
61d556afb1636968a8217f0c974c0bacb324fefc;61d556af;library;dataflash;Fix shorthand variable names for EKF position reset delta;Fix shorthand variable names for EKF position reset delta;['libraries/DataFlash/DataFlash.h'];1;4
aee2543b75fe7aa2fcf289a6c3eac50487097158;aee2543b;library;parachute;fixed release bug;"fixed release bug

if release() is called within 1 millisecond of update() the release
wouldn't happen";['libraries/AP_Parachute/AP_Parachute.cpp'];1;4
76871ef0cd29f0e63dbc0d0b6704e191f71ff640;76871ef0;library;tracker;fix start lat, lon sanity check;fix start lat, lon sanity check;['AntennaTracker/system.cpp'];1;2
87ea9acc7f93bb09fa41fc0125a10664ebde7e57;87ea9acc;library;navekf2;Fix mavlink parameter label;Fix mavlink parameter label;['libraries/AP_NavEKF2/AP_NavEKF2.cpp'];1;2
79dee5aaa9308e796594ca35e40e6c985b77f971;79dee5aa;library;hal;fix warning due to missing prototype after HAL rework;"fix warning due to missing prototype after HAL rework

This was introduced with the HAL rework:

In file included from /p/ardupilot/libraries/AP_HAL/AP_HAL.h:11:0,
                 from /p/ardupilot/ArduCopter/Copter.h:35,
                 from /p/ardupilot/ArduCopter/ArduCopter.cpp:76:
/p/ardupilot/ArduCopter/ArduCopter.cpp: In function 'int ArduPilot_main(int, char* const*)':
/p/ardupilot/libraries/AP_HAL/AP_HAL_Main.h:11:26: warning: no previous declaration for 'int ArduPilot_main(int, char* const*)' [-Wmissing-declarations]
 #define AP_MAIN __EXPORT ArduPilot_main
                          ^

It's due to PX4 using that warning as opposed to Linux. Since it harmless, add
the prototype for everybody.";['libraries/AP_HAL/AP_HAL_Main.h'];1;4
b32685663561a2cf75cf806a54ba5b8febb11f17;b3268566;library;hal_linux;fix warning due to limited storage;"fix warning due to limited storage

ardupilot/libraries/AP_HAL_Linux/Storage_FRAM.cpp: In member
function 'int32_t Linux::Storage_FRAM::read(uint16_t, uint8_t*, uint16_t)':
/home/lucas/p/dronecode/ardupilot/libraries/AP_HAL_Linux/Storage_FRAM.cpp:183:24: war
ning: comparison is always false due to limited range of data type [-Wtype-limits]
         if(Buff[i-fptr]==-1){
                        ^";['libraries/AP_HAL_Linux/Storage_FRAM.cpp'];1;3
d1a090dda8735cf2fa5558a5d7548331f2023916;d1a090dd;library;navekf;Fix bug fetching data from measurement buffers;"Fix bug fetching data from measurement buffers

This bug can result in valid data being rejected and fused at the wrong time horizon.";['libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];1;24
4640673cb14b61be52fa84d777e016e4644d92c4;4640673c;library;navekf2;Fix bug causing incorrect fusion timing;Fix bug causing incorrect fusion timing;['libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];1;7
d276029e3502ace9b347b01568ea0fe864b32c7a;d276029e;library;battmonitor;fix class name after rename in AP_HAL_Linux;fix class name after rename in AP_HAL_Linux;['libraries/AP_BattMonitor/AP_BattMonitor_Bebop.cpp'];1;2
3b480bd6ecbc2a58756591288da37474022b1d34;3b480bd6;library;inertialsensor;fix order of accelerometer corrections;fix order of accelerometer corrections;['libraries/AP_InertialSensor/AP_InertialSensor_Backend.cpp'];1;6
562db11159b6d7d83f85eabf450f0c510b81fd13;562db111;library;compass;fix potential AP_Notify concurrency problem;fix potential AP_Notify concurrency problem;['libraries/AP_Compass/AP_Compass_Calibration.cpp'];1;7
ab8c28a7ccba30bb46cbf53757c58d74070cfea5;ab8c28a7;library;navekf;Fix bug allowing takeoff in GPS modes without aiding;"Fix bug allowing takeoff in GPS modes without aiding

The legacy EKF switches GPs aiding on on arming, whereas the new EKF switches it on based on GPS data quality.
This means the decision to arm and therefore the predicted solution flags must now reflect the actual status of the navigation solution as it will no longer change when motor arming occurs.";['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];5;14
8515dda727d62743b1a5029c6cc4c2458ec42358;8515dda7;library;navekf;Fix bug in vertical position derivative calculation;Fix bug in vertical position derivative calculation;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;13
2b13020c192ebdeb20bc6927e9afed22afefd9f5;2b13020c;library;navekf2;Fix bug in vertical position derivative calculation;Fix bug in vertical position derivative calculation;['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp'];1;6
242b9641c8ecd5fe174c4f54bb572397e67066b2;242b9641;library;navekf2;Fix in-air logic bug;Fix in-air logic bug;['libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp'];1;5
4e928bf2940a09afcb6ce8de136e8afa53d462ba;4e928bf2;library;navekf2;Fix bug preventing pre-takeoff reference measurements;Fix bug preventing pre-takeoff reference measurements;['libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp'];1;2
d3a6690e4f52d97d70bc08b99c7e94e33f665392;d3a6690e;library;navekf2;Fix bugs preventing use of optical flow navigation;Fix bugs preventing use of optical flow navigation;['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp'];1;9
9889f826b337d8ac3c70f6ad281fc04d3a1d51c4;9889f826;library;hal_linux;RCInput_UDP: Fix compiling warning;"RCInput_UDP: Fix compiling warning

This warning happens because of the difference of datatypes between
32 and 64 bits processors.

%% libraries/AP_HAL_Linux/RCInput_UDP.o
/home/zehortigoza/dev/ardupilot/libraries/AP_HAL_Linux/RCInput_UDP.cpp: In member function 'virtual void Linux::LinuxRCInput_UDP::_timer_tick()':
/home/zehortigoza/dev/ardupilot/libraries/AP_HAL_Linux/RCInput_UDP.cpp:42:72: warning: format '%llu' expects argument of type 'long long unsigned int', but argument 3 has type 'uint64_t {aka long unsigned int}' [-Wformat=]
             hal.console->printf(""no rc cmds received for %llu\n"", delay)^^";['libraries/AP_HAL_Linux/RCInput_UDP.cpp'];1;2
c581a702a027d75d284d0a65334db44ec3b9de18;c581a702;copter;copter;Fix typo: auxiliar to auxiliary;Fix typo: auxiliar to auxiliary;['ArduCopter/ArduCopter.cpp', 'ArduCopter/defines.h'];2;8
daa32725ac806a92d7bdd99d56670c9e50df4e68;daa32725;library;inertialsensor;Fix typo: auxiliar to auxiliary;Fix typo: auxiliar to auxiliary;['libraries/AP_InertialSensor/AP_InertialSensor_Backend.h', 'libraries/AP_InertialSensor/AP_InertialSensor.h', 'libraries/AP_InertialSensor/AP_InertialSensor.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h'];5;37
c53e9d1ff0e43b4a639f0e3256fefb7913f0bf55;c53e9d1f;library;barometer;Fix typo;Fix typo;['libraries/AP_Baro/AP_Baro.cpp'];1;2
b603641d7c9ed37dd495596e916a4a2c65c52d9a;b603641d;library;compass;AK8963: fix where to apply sensitivity adjustments;"AK8963: fix where to apply sensitivity adjustments

The function rotate_field() can change the values axes and the function
correct_field() applies offsets (which are already in milligauss). Thus any
sensitivity adjustment must be done for two reasons:

    (1) The offsets must be applied to the values already in milligauss^^
    (2) The factory sensitivity adjustment values are per axis, if any rotation
        that switches axes is applied, that'll mess with the adjustment.

Experiments showed that before this patch the length of the mag field reported
quite different from the expected. After this patch, the same experiments
showed reasonable values.";['libraries/AP_Compass/AP_Compass_AK8963.cpp'];1;6
814442563e28c9ed3aacb5d6e9a28bbd5e3d92ae;81444256;library;compass;HMC5843: fix _calibrate();"HMC5843: fix _calibrate()

The use of _gain_multiple is not necessary because the values of
expected_{x,yz} and _mag_{x,y,z} are both in sensor raw unit (i.e., lsbs).

That wasn't fixed before in order not to make APM users to recalibrate their
compasses.";['libraries/AP_Compass/AP_Compass_HMC5843.h', 'libraries/AP_Compass/AP_Compass_HMC5843.cpp'];2;21
0c61e09b707a5a71fd91fd19f17588d6f835d166;0c61e09b;library;navekf2;Critical big fix - states not initialised;"Critical big fix - states not initialised

The failure to initialise the magnetometer bias states to zero can result in a large jump in yaw gyro bias and heading when a heading reset is performed.";['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp'];1;10
e3013b493b03bd4f241ba2983f3014ecbce1a352;e3013b49;library;navekf2;Critical bug fix - perf counter not initialised;Critical bug fix - perf counter not initialised;['libraries/AP_NavEKF2/AP_NavEKF2_core.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp'];3;9
f3cbbef41800d820c96a0f7bdff33d53f9fc042f;f3cbbef4;copter;copter;fix guided attitude type_mask check;fix guided attitude type_mask check;['ArduCopter/GCS_Mavlink.cpp'];1;4
db4dfce7b14a16ea0e70193687d9044b72ddaf1e;db4dfce7;library;navekf2;Add fix status to GPS check report message;Add fix status to GPS check report message;['libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp', 'libraries/AP_NavEKF2/AP_NavEKF2_core.h', 'libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp'];3;158
ef5049862af83fff87329c9badade0dd1bfb2cd3;ef504986;library;navekf;Add fix status to GPS check report message;Add fix status to GPS check report message;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp', 'libraries/AP_NavEKF/AP_Nav_Common.h'];3;160
22af74bfe630e310b01e9d6b63fc541bc0dd2889;22af74bf;tools;menu;Fix warning;"Fix warning

Declare member in an appropriate type so there is no warning";['libraries/AP_Menu/AP_Menu.h', 'libraries/AP_Menu/AP_Menu.cpp'];2;6
1c46205c2b15b935892409eeedd12bd308305b83;1c46205c;library;hal_linux;fix warning;"fix warning

Fix warning and use htole16 instead of trying to implement it.
The current code does nothing on little endian platforms.
Moreover, the status variable was unused.";['libraries/AP_HAL_Linux/RCOutput_PCA9685.cpp'];1;10
a58bb0fc3255d01e6d7db786f9e27c600db01b45;a58bb0fc;library;inertialsensor;MPU6000: Fix using copy instead of reference;"MPU6000: Fix using copy instead of reference

In 294298e (""AP_InertialSensor: use method for downcast"") I was too eager
to use ""auto"" and ended up using the implicit copy constructor instead
of actually getting a reference to the object.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;10
73686dfa89329880f6e32262108bcddd3a3ca520;73686dfa;library;dataflash;fix error in NKF descriptor;fix error in NKF descriptor;['libraries/DataFlash/DataFlash.h'];1;2
cdd4570f02f70af0ba8c0d22d9767a2e44c3be6d;cdd4570f;copter;copter;fix init order of ekfYawReset_ms;fix init order of ekfYawReset_ms;['ArduCopter/Copter.h', 'ArduCopter/Copter.cpp'];2;6
51fb13a3291b1f5b62c1cb52480e3a2979badc70;51fb13a3;library;navekf;fix getLastYawResetAngle to return yaw reset system time;fix getLastYawResetAngle to return yaw reset system time;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;33
3b5d73b1fe0bc7219249089af9bcdfa6f87befd3;3b5d73b1;library;baro_ms5611;Fix state machine in case of error;"Fix state machine in case of error

If there is a read error, reading from the adc will return 0 but moreover,
we need to re-initiate a read or else we are stuck forever.

From MS5611-01BA03 datasheet, p. 10, CONVERSION SEQUENCE:
""After the conversion, using ADC read command the result is clocked out with the MSB first.
If the conversion is not executed before the ADC read command, or the ADC read command is
repeated, it will give 0 as the output result.""";['libraries/AP_Baro/AP_Baro_MS5611.cpp'];1;8
1b5e6849d9a1eb262a9fdce1137466a07a7627ba;1b5e6849;library;compass;fix milligauss code in LSM303D driver;fix milligauss code in LSM303D driver;['libraries/AP_Compass/AP_Compass_LSM303D.cpp', 'libraries/AP_Compass/AP_Compass_LSM303D.h'];2;47
fff5ec09eb796e2f1964c64f56b9581b19ebc87e;fff5ec09;library;compass;fix consistent check for less than three compasses;"fix consistent check for less than three compasses

Also use vector functions where available
Use get_field_milligause instead of just get_field";['libraries/AP_Compass/Compass.cpp', 'libraries/AP_Compass/Compass.h'];2;47
5602e4055baec8a9d666ac1c6ce839085fadc6a2;5602e405;library;compass_ak8963;Fix Rotation on the Bebop;Fix Rotation on the Bebop;['libraries/AP_Compass/Compass.h', 'libraries/AP_Compass/AP_Compass_AK8963.cpp'];2;5
a403e5aef0c9ac351cf2b15418fb0661673e1c91;a403e5ae;copter;copter;fix severity of super simple message to GCS;fix severity of super simple message to GCS;['ArduCopter/AP_State.cpp'];1;6
21ac12f1c3b8ea0f274e0a7e4f7a5966c61ca11a;21ac12f1;library;ac_precland;bug fix to update ef angles only with new readings;bug fix to update ef angles only with new readings;['libraries/AC_PrecLand/AC_PrecLand.cpp'];1;2
c59bdc12df5272ddbabf3ea3a146b893013a3c2f;c59bdc12;library;compass;fix the milligauss handling;"fix the milligauss handling

the previous approach assumed a 1:1 mapping between compass backends
and compass instances, which isn't true on PX4.

It also only setup milligauss offsets on a set_and_save call, which is
not the only way offsets change

this adds a milligauss_ratio per instance, which is considerably
simpler";['libraries/AP_Compass/AP_Compass_Backend.h', 'libraries/AP_Compass/AP_Compass_HMC5843.cpp', 'libraries/AP_Compass/AP_Compass_AK8963.h', 'libraries/AP_Compass/AP_Compass_AK8963.cpp', 'libraries/AP_Compass/AP_Compass_HIL.cpp', 'libraries/AP_Compass/AP_Compass_PX4.h', 'libraries/AP_Compass/AP_Compass_HMC5843.h', 'libraries/AP_Compass/AP_Compass_Backend.cpp', 'libraries/AP_Compass/AP_Compass_HIL.h', 'libraries/AP_Compass/Compass.h', 'libraries/AP_Compass/Compass.cpp', 'libraries/AP_Compass/AP_Compass_PX4.cpp'];12;65
f1322252aed1f74c41e50bf91dccdcf89a35a71d;f1322252;library;gps;fix GNSS_MODE param descriptions;"fix GNSS_MODE param descriptions

Thanks to Michael DuBreuil for noticing the problem and providing the correction";['libraries/AP_GPS/AP_GPS.cpp'];1;2
a887c1d1f2ecd6fddb8cec3c0cbd04cb0576e6ce;a887c1d1;library;notify;fix oreoled race causing startup flicker;fix oreoled race causing startup flicker;['libraries/AP_Notify/OreoLED_PX4.cpp'];1;6
a2f1bf581a1bee089d880901830604168011ca83;a2f1bf58;library;dataflash;fix test for SITL and linux;fix test for SITL and linux;['libraries/DataFlash/examples/DataFlash_test/make.inc', 'libraries/DataFlash/examples/DataFlash_test/DataFlash_test.cpp'];2;14
a3c51698cb455bb8ccd63462d8c4ff2f543d2816;a3c51698;plane;plane;fix throttle when restarting mission in-flight with takeoff;"fix throttle when restarting mission in-flight with takeoff

fixes https://github.com/diydrones/ardupilot/issues/2778
When executing a takeoff, and the throttle is suppressed, but we're already flying, we should unsuppress the throttle. We can get into this situation if we reset the mission in-flight.";['ArduPlane/Attitude.cpp'];1;10
da2ad49276dd4b6d3a661875e5924cbb06e88b26;da2ad492;tools;replay;fix for changes to AP_RangeFinder API;fix for changes to AP_RangeFinder API;['Tools/Replay/Replay.cpp'];1;4
b87ed96825769e821feb3a1e07e804193dd7420a;b87ed968;rover;rover;fix for changed AP_RangeFinder API;fix for changed AP_RangeFinder API;['APMrover2/Rover.h'];1;2
f2b0f8f4db71b0d8953d305626b4e957eee3b8d2;f2b0f8f4;library;antennatracker;fix for changed AP_RangeFinder API;fix for changed AP_RangeFinder API;['AntennaTracker/Tracker.h'];1;2
d6b244670bd3cb3601d3aa132ac343a11ea0663a;d6b24467;copter;copter;fix for changed AP_RangeFinder API;fix for changed AP_RangeFinder API;['ArduCopter/Copter.h'];1;2
0a66fcce201cfaa8b55e4f0e63fcd3512f0d36ea;0a66fcce;plane;plane;fix for changed AP_RangeFinder API;fix for changed AP_RangeFinder API;['ArduPlane/Plane.h'];1;2
fa0aa6f5c9542ee9d98ba81d5f93bbdbd94abaad;fa0aa6f5;library;mount;remove support for do-mount-configure as command long;"remove support for do-mount-configure as command long

Also fix bug in do-mount-control so that do-mount-control can switch mount into retract mode

Also removes ability to set which axis are stabilized through
ardupilotmega mount_configure message";['libraries/AP_Mount/AP_Mount_Backend.cpp', 'libraries/AP_Mount/AP_Mount_Backend.h', 'libraries/AP_Mount/AP_Mount.h', 'libraries/AP_Mount/AP_Mount.cpp'];4;38
c0caed1b6426c591ba4f2df8ec0e3880cb7a0566;c0caed1b;library;hal_linux;RCOutput_Navio: allow to use internal clock;"RCOutput_Navio: allow to use internal clock

It's possible to use the internal clock in PCA96895 if we account for
the drift it contains. This is a bit different from solutions in other
projects like the Adafruit library and the PX4 firmware: instead of
applying a correction to the final frequency we apply the correction to
the clock since this is the source of the error.

With this fix we arrived to much better results across different lots of
sensors.

The Navio board continues to use the external clock and should have no
difference behavior.";['libraries/AP_HAL_Linux/HAL_Linux_Class.cpp', 'libraries/AP_HAL_Linux/RCOutput_Navio.cpp', 'libraries/AP_HAL_Linux/RCOutput_Navio.h'];3;41
929ddb56857f473db4f051d3b83fe5d4d88a4898;929ddb56;library;compass;fix a math error in the compass calibrator;fix a math error in the compass calibrator;['libraries/AP_Compass/CompassCalibrator.cpp'];1;4
bde43412d843ad1886722f4c1a3d85a843d6c2c4;bde43412;library;motorsheli;Fix RSC Mode 3;Fix RSC Mode 3;['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsHeli_Single.cpp', 'libraries/AP_Motors/AP_MotorsHeli.h'];3;6
38ccd6e04f8a422622727fd6c89376e57fb1c58b;38ccd6e0;library;motorsheli_rsc;Fix tail_type control;Fix tail_type control;['libraries/AP_Motors/AP_MotorsHeli_Single.cpp'];1;10
c3e7eed2994b160d876de03aca7d8cb5f369ad5b;c3e7eed2;library;motorsheli_single;Fix recalc_scalars function;Fix recalc_scalars function;['libraries/AP_Motors/AP_MotorsHeli_Single.cpp'];1;8
e6119cf51f0744dd9dea179dd5f67ce6d8be37fe;e6119cf5;library;motors;Fix param indices in AP_MotorsHeli.;Fix param indices in AP_MotorsHeli.;['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;18
97e09fa9b06d697b58e006f997b2f8300e5108a5;97e09fa9;library;motors;Move traditional helicopter controls into AP_MotorsHeli_Single.;"Move traditional helicopter controls into AP_MotorsHeli_Single.

Original commit by fhedberg, had to fix merge conflicts and now it appears I did the commit?";['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsHeli_Single.cpp', 'libraries/AP_Motors/AP_Motors.h', 'libraries/AP_Motors/AP_MotorsHeli.h', 'libraries/AP_Motors/AP_MotorsHeli_Single.h'];5;1278
2c7a1137905323f37cb63cc77e7d22d6ce3a2dd5;2c7a1137;library;gps;ensure all GPS drivers give headings as 0..360 degrees;"ensure all GPS drivers give headings as 0..360 degrees

this prevents inconsistency between interfaces, and fixes a MAVLink
reporting bug with UAVCAN GPS";['libraries/AP_GPS/AP_GPS_MTK19.cpp', 'libraries/AP_GPS/AP_GPS_PX4.cpp', 'libraries/AP_GPS/AP_GPS_SBP.cpp', 'libraries/AP_GPS/AP_GPS_MTK.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS_NMEA.cpp', 'libraries/AP_GPS/AP_GPS_SIRF.cpp'];8;21
15b242832e63910028fa13e1a9b831f6d39f80c2;15b24283;library;mission;lat/lng == 0 bug fix;"lat/lng == 0 bug fix

was using wrong logic to check for lat/lng == 0";['libraries/AP_Mission/AP_Mission.cpp'];1;4
d9a4d3e777a80e16928b363ecb578f07b29a18f2;d9a4d3e7;library;inertialsensor;MPU6000: fix leaking samples;MPU6000: fix leaking samples;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h'];2;3
f18dd17377511680a3b3b6abceb0480bdecd54c2;f18dd173;library;inertialsensor;fix typos;"fix typos

resister->register and fix copy and paste error from MPU6000 to MPU925.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.cpp'];2;6
be603da5793a70414ecf33e95ef42b3b55d6de5d;be603da5;copter;copter;fix optflow position_ok check;"fix optflow position_ok check

We should accept predicted relative horizontal position only when disarmed";['ArduCopter/system.cpp'];1;8
e4c62811ea88a4f7ca4c5ea802baceaf851d73d8;e4c62811;plane;plane;fix link to BATT parameter descriptions;fix link to BATT parameter descriptions;['ArduPlane/Parameters.cpp'];1;2
536311744d46d4b808807fbe1727e6ba220fe6a6;53631174;rover;rover;fix link to BATT param descriptions;fix link to BATT param descriptions;['APMrover2/Parameters.cpp'];1;2
bb891a62d38e06f138372c397ab8fd5a8afbb836;bb891a62;library;battmonitor;fix parameter descriptions;fix parameter descriptions;['libraries/AP_BattMonitor/AP_BattMonitor.cpp'];1;14
39dae7a1563bd4fcbbaa9259c9d4de38a99474e1;39dae7a1;library;mount;fix for STORM32 serial ver 78e and higher;"fix for STORM32 serial ver 78e and higher

This fixes the structs to be compatible with the changes OlliW made to
the gimbal firmware.
http://www.olliw.eu/storm32bgc-wiki/Serial_Communication";['libraries/AP_Mount/AP_Mount_SToRM32_serial.cpp', 'libraries/AP_Mount/AP_Mount_SToRM32_serial.h'];2;13
43fa9c8ae3dc37c47be61ceec3affd172baa15a7;43fa9c8a;copter;copter;fix Autotune param descriptions;fix Autotune param descriptions;['ArduCopter/Parameters.cpp'];1;8
c8ecb1bac7de37688b6551e3418b8d6b1dd22051;c8ecb1ba;copter;copter;fix PILOT_TKOFF_DZ param description;fix PILOT_TKOFF_DZ param description;['ArduCopter/Parameters.cpp'];1;2
c324d4e89b7464f298f4ce304213478d4238ac84;c324d4e8;copter;copter;fix ANGLE_MAX param description;"fix ANGLE_MAX param description

Thanks to Hamish for finding this";['ArduCopter/Parameters.cpp'];1;2
f2c101050128f30581bad2109b9ebf5faf52914c;f2c10105;plane;plane;prevent mode switch changes changing WP tracking;"prevent mode switch changes changing WP tracking

this fixes a bug where a mode switch change during an AUTO mission
which does not change the flight mode would cause cross tracking to be
reset, so the plane will not correctly follow the desired track

Many thanks to Michael Du Breuil for the log that showed this bug";['ArduPlane/system.cpp', 'ArduPlane/control_modes.cpp'];2;4
9352f051337c67bb3cbf1e9e4f0822420961e117;9352f051;gcs;gcs_mavlink;fixed bug setting parameters to default values;"fixed bug setting parameters to default values

in copter if you try to set RATE_RLL_D to 0 when you haven't
prevviously changed it then it would set it, but would revert on the
next reboot. This is because of the special case handling of a set to
the ""default"" value. That default value is unaware of the PID
constructors

this fixes that behaviour by forcing a save if the parameter changes
value";['libraries/GCS_MAVLink/GCS_Common.cpp'];1;18
a18f71b29e85a820819afa385b1e4cede7b5f880;a18f71b2;copter;copter;bug fix to RTL_ALT_MIN feature;"bug fix to RTL_ALT_MIN feature

commited by Randy";['ArduCopter/Copter.h', 'ArduCopter/control_rtl.cpp', 'ArduCopter/Copter.cpp'];3;19
f3f54157be2525996dfda874e93e5bb830f26f73;f3f54157;library;inertialsensor;fix copying wrong number of bytes;"fix copying wrong number of bytes

We should copy only the bytes we read, not the maximum number.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;2
103119fe9a9262b35f202a6e51060ee05504a302;103119fe;rover;rover;fixed bug when reverse throttle would increase speed in AUTO;"fixed bug when reverse throttle would increase speed in AUTO

Fixed this bug
https://github.com/diydrones/ardupilot/issues/840
If a Rover was in AUTO and the user moved the throttle stick into
reverse past 50% the rover would increase.  Basically the throttle
nudge behaviour was the same regardless of whether you moved the
throttle forward or backward.";['APMrover2/radio.cpp'];1;9
8195f45d6cebfee39019831c7947429620b669fc;8195f45d;library;ac_wpnav;fix spline height loss;fix spline height loss;['libraries/AC_WPNav/AC_WPNav.cpp'];1;48
0aa2fe7a0b0fdc84d882c5c20fb999e031819e0e;0aa2fe7a;library;compass_ak8963;fix sem handling;"fix sem handling

In case of error or zeroed data, the i2c semaphore wasn't given.
It happened at first startup on Bebop and caused a failure:
""PANIC: failed to take _bus->sem 100 times in a row...""";['libraries/AP_Compass/AP_Compass_AK8963.cpp'];1;22
c87929e907d17d6f1a7dd5d753d6b84f29e7d9c5;c87929e9;plane;plane;Fix landing to stop divide by zero if params are 0;"Fix landing to stop divide by zero if params are 0

If someone mistakenly puts all 0's in their LAND command then
total_distance will be calculated as 0 and cause a divide by 0 error
below thus crashing ArduPilot.  Lets avoid that.";['ArduPlane/landing.cpp'];1;6
b377d4deac2316cd2f9790a0de295004b18f3528;b377d4de;library;tracker;fix initialisation of nav_status;"fix initialisation of nav_status

Thanks to Jakub Oller for finding the cause.  This is a slight
modification upon his fix.";['AntennaTracker/Tracker.h'];1;2
9067abc037736ca4a3c1c2027f8937f98d47a606;9067abc0;library;ahrs_navekf;fix blended accel to use primary accel;fix blended accel to use primary accel;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;2
224d45000bfea6558702b0db32fa51426eb33608;224d4500;rover;rover;fixed a bug going into guided and rover still moving;"fixed a bug going into guided and rover still moving

When the rover goes into guided mode it sets the current location as
the guided point to goto.  If the rover is stationary when this
happens no problem.  If however the rover is still rolling (say going
from AUTO to GUIDED) then the rover would go past its guided position
and get confused and begin to circle it.  This change resolves that issue.";['APMrover2/APMrover2.cpp'];1;32
538a077ae8b77de48cc5bb61ae3b7eec383a196d;538a077a;sitl;sitl;fix coverity warning - removed unused variable heli_servos;fix coverity warning - removed unused variable heli_servos;['libraries/SITL/SIM_Gazebo.h'];1;1
08f530551935e1c8e809f387517a31303440affa;08f53055;library;dataflash;fix coverity warnings - add param init in constructor;fix coverity warnings - add param init in constructor;['libraries/DataFlash/DataFlash_File.cpp', 'libraries/DataFlash/DataFlash_Backend.h'];2;4
e2eda97ec6cf834e5d505433d759121b04682387;e2eda97e;library;inertialsensor;fix coverity warnings - param init in construct;fix coverity warnings - param init in construct;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;9
8f0e7e0693405d30d05d1ab67d7ae855f1a561ec;8f0e7e06;plane;plane;fixed above_location_current() for non-terrain alt;"fixed above_location_current() for non-terrain alt

thanks to Lekston for finding the bug (PR#2610)";['ArduPlane/altitude.cpp'];1;4
5c9d248407e9d6645c18e4b90a798d1d92ad4ef3;5c9d2484;library;gps;Fix copy/paste error in ublox (uncovered by coverity);Fix copy/paste error in ublox (uncovered by coverity);['libraries/AP_GPS/AP_GPS_UBLOX.cpp'];1;2
4b38d444dddd5f2d8dd756521f927889b71a84b2;4b38d444;plane;plane;fix default behaviour of flaps.;fix default behaviour of flaps.;['ArduPlane/Attitude.cpp'];1;8
6a62b115365618e6e0e2a743ebc46d2d2825f9e2;6a62b115;plane;plane;fix LOITER_TO_ALT to verify headings towards waypoints within the loiter radius.;"fix LOITER_TO_ALT to verify headings towards waypoints within the loiter radius.

Whenever next waypoint is within the loiter radius, maintaining loiter would prevent us from ever pointing toward the next waypoint. Hence for very close waypoints loiter_to_alt becomes verified by the altitude only.";['ArduPlane/commands_logic.cpp'];1;10
d7ac725a64662c31b6102db97092bcf09aaf0736;d7ac725a;library;hal_linux;fixed signal handler in RCInput_Navio;"fixed signal handler in RCInput_Navio

DMA is getting stopped in the separate method now. This is the best we
can get at the current time. It does yield slightly better experience
and works in the majority of cases.

The patch is a no bulletproof solution, though.

There's a possibility of corruption in case of e.g. a SIGKILL. There's
no signal framework at the time and the commit doesn't add one. That's
why all signals are handled in the same erroneous way. This is not a
good nor a final solution to the issue.

For the issue at hand a better fix might be porting the code to kernel
space but it's a rather tediuos task that we cannot undertake in the
couple of weeks.";['libraries/AP_HAL_Linux/RCInput_Navio.h', 'libraries/AP_HAL_Linux/RCInput_Navio.cpp'];2;20
59dda49cce33584590e5e83b0b5c8e937f4bf1ab;59dda49c;library;gps;Fix missing reserved fields in the UBX-RXM-RAWX message;Fix missing reserved fields in the UBX-RXM-RAWX message;['libraries/AP_GPS/AP_GPS_UBLOX.h'];1;6
9a79baef595976ec618f5b6b539648d7e34089ad;9a79baef;rover;rover;Merged a bug fix from Plane.;"Merged a bug fix from Plane.

Merged a bug fix where mode would not revert on geo-fence disable.
The mode would not revert if the switch was in position 0.
Geofencing will soon be in Rover and I didn't want to forget this bug
and chase it later so committing it now.  It works fine in Rover now
even though the geofencing code isn't in yet.";['APMrover2/control_modes.cpp'];1;2
7935bf70f17d2d2d82c6af4aee4b1b8feb7d0e91;7935bf70;copter;copter;rc_override active only on non-zero overrides;"rc_override active only on non-zero overrides

Bug found by Kevin Hester";['ArduCopter/GCS_Mavlink.cpp'];1;6
521f3dc4b9c380a0e160f81ba794fea57dd497cb;521f3dc4;gcs;gcs_mavlink;only forward msg once per channel;"only forward msg once per channel

Issue found and alternative fix provided by Arthur Benemann";['libraries/GCS_MAVLink/MAVLink_routing.cpp'];1;5
6f72d202fea79a80b4a82b1680e9b155cb72a5b6;6f72d202;library;gps;fix parameter descriptions;fix parameter descriptions;['libraries/AP_GPS/AP_GPS.cpp'];1;6
fa60c3dce8c008b06218977f293aad6a6cf4af7e;fa60c3dc;library;motorscoax;fix output_armed_stabilized min thr limit;fix output_armed_stabilized min thr limit;['libraries/AP_Motors/AP_MotorsCoax.cpp'];1;5
8a308205cea5035f185b578c9be759f62c60dcf9;8a308205;library;motorssingle;fix output_armed_stabilized min thr limit;fix output_armed_stabilized min thr limit;['libraries/AP_Motors/AP_MotorsSingle.cpp'];1;11
bd9a6050865b3ee6cd25da641ae80246ddf1246a;bd9a6050;library;motorstri;fix output_armed_stabilized min thr limit;"fix output_armed_stabilized min thr limit

_min_throttle is in the pwm range but was being used as if in the 0 to
1000 range";['libraries/AP_Motors/AP_MotorsTri.cpp'];1;12
e53c46bd8fc52a63825470d425895d95a9e35be8;e53c46bd;library;motorsmatrix;fix output_armed_stabilized min thr limit;"fix output_armed_stabilized min thr limit

_min_throttle was being used as if it were in the 0 to 1000 range when
in fact it is in the pwm range.  This meant the lower limit was too low.";['libraries/AP_Motors/AP_MotorsMatrix.cpp'];1;12
a852e48f371d2e8244e47356cd580a357c1f8328;a852e48f;library;gps_nmea;fix gps startup;"fix gps startup

when no valid gps data, gps would restart in a loop. Take the frame without
gps fix into account for frame counting";['libraries/AP_GPS/AP_GPS_NMEA.cpp'];1;7
766ccea3be11c7b38d5f0a09f0db7ac836af21d5;766ccea3;library;mission;fix bug causing first do-cmd to be run many times;"fix bug causing first do-cmd to be run many times

The symptom was that if the very first command in the mission was a
do-command, it would be run after every nav-command that didn't have
another do-command before it.";['libraries/AP_Mission/AP_Mission.cpp'];1;17
0acfcbfa811bb51915e80448e08976b1b603ea8c;0acfcbfa;library;navekf;use primary compass instead of first instance;"use primary compass instead of first instance

Thanks very much to staroselskii for finding this bug";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;10
cc0ab26f5d6f3359cb339b5bdad0220163735ce5;cc0ab26f;library;mount;fix init of mode;"fix init of mode

Mode was being set from MNT_DEFTL_MODE parameter before that parameter's
value had been initialised from eeprom";['libraries/AP_Mount/AP_Mount.cpp'];1;4
35dd7322d286f75e57df0a07fc89e5b2c15e89de;35dd7322;copter;copter;float constant fix for heli's check_dynamic_flight;"float constant fix for heli's check_dynamic_flight

No functional change";['ArduCopter/heli.cpp'];1;2
0a69c13b1df4b633910f57bcadcdb2a064606574;0a69c13b;copter;copter;Fix helicopter ground stabilization in Auto, Brake, Circle, Guided, Land and RTL modes.;Fix helicopter ground stabilization in Auto, Brake, Circle, Guided, Land and RTL modes.;['ArduCopter/control_guided.cpp', 'ArduCopter/control_circle.cpp', 'ArduCopter/control_land.cpp', 'ArduCopter/control_auto.cpp', 'ArduCopter/control_rtl.cpp', 'ArduCopter/control_brake.cpp'];6;119
4e3d0ae0c1b537e849e481c805311cfb352c7655;4e3d0ae0;copter;copter;fix startup logging;"fix startup logging

Removed potentially endless loop caused by start_logging calling
Log_Write_Startup which called should_log which could then call
start_logging.
Moved disarm event logging above motors disarm so it is logged";['ArduCopter/motors.cpp', 'ArduCopter/Log.cpp', 'ArduCopter/system.cpp'];3;26
dbbc5ed8161734cb5b47e0c69243f79cfb6102bd;dbbc5ed8;tools;replay;fix double-free in MsgHandler;fix double-free in MsgHandler;['Tools/Replay/MsgHandler.cpp'];1;5
0cd584c29329600493c2c8d4a1aead26e7bd56de;0cd584c2;library;compass;fix rotation for bebop AK8963;"fix rotation for bebop AK8963

Set the correct rotation for bebop";['libraries/AP_Compass/AP_Compass_AK8963.cpp'];1;3
5c414b4ca2923d887e4335d6c4f1823ed521d197;5c414b4c;library;hal;Fix Compass I2C address for Bebop;Fix Compass I2C address for Bebop;['libraries/AP_HAL/AP_HAL_Boards.h'];1;2
2e6b6e473a1315283902dbcb7bfc38434de39fd9;2e6b6e47;copter;copter;fix home_distance calculation;"fix home_distance calculation

Distance was calculated vs EKF origin instead of AHRS home";['ArduCopter/navigation.cpp'];1;5
03356a8d3a6d5971927ae054347f35dbaa51ad67;03356a8d;library;optflow;fix parameter descriptions;fix parameter descriptions;['libraries/AP_OpticalFlow/OpticalFlow.cpp'];1;8
5d5d9dc137a8a4781f6bcfaf8092c214bfe78cbc;5d5d9dc1;library;gps;Fix max/min bug on SBP buffering. Log messages whether SBP driver recognizes the msg_type or not.;Fix max/min bug on SBP buffering. Log messages whether SBP driver recognizes the msg_type or not.;['libraries/AP_GPS/AP_GPS_SBP.cpp'];1;7
21c895f6f3730879f9ba22a5ee5a5cbd956f0936;21c895f6;library;gps;prevent extra NMEA messages causing rapid fix rates;"prevent extra NMEA messages causing rapid fix rates

unexpected messages could cause the GPS driver to report a very high
fix rate, which can confuse the EKF";['libraries/AP_GPS/AP_GPS_NMEA.h', 'libraries/AP_GPS/AP_GPS_NMEA.cpp'];2;41
844f050cf334d659cfc6b0087319977a6435ce13;844f050c;library;dataflash;correct zero-byte-file handling in CLI;"correct zero-byte-file handling in CLI

-rw-rw-r-- 1 pbarker pbarker   2105344 Jul  1 16:10 1.BIN
-rw-rw-r-- 1 pbarker pbarker         0 Jul  1 19:35 2.BIN
-rw-rw-r-- 1 pbarker pbarker   2494464 Jul  1 16:58 3.BIN
-rw-rw-r-- 1 pbarker pbarker 128503808 Jul  1 20:22 4.BIN
-rw-rw-r-- 1 pbarker pbarker         3 Jul  1 19:46 LASTLOG.TXT

Before fix:

2 logs
Log 3 in logs/3.BIN of size 2494464 2015/7/1 6:58
Log 4 in logs/4.BIN of size 128503808 2015/7/1 10:22

After Fix:

4 logs
Log 1 in logs/1.BIN of size 2105344 2015/7/1 6:10
Log 2 in logs/2.BIN of size 0 2015/7/1 9:35
Log 3 in logs/3.BIN of size 2494464 2015/7/1 6:58
Log 4 in logs/4.BIN of size 128503808 2015/7/1 10:22

If the last file was zero bytes, no files would be shown.";['libraries/DataFlash/DataFlash_File.cpp', 'libraries/DataFlash/DataFlash_File.h'];2;17
38a8a772f86f023750a6756ace6aa4240b8f8c0f;38a8a772;library;gps;Add fix status 3D+DGPS;Add fix status 3D+DGPS;['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h'];2;13
90378b21dabd4cfc7893e5ae67a1c6ca7e81e246;90378b21;library;battmonitor;Fix battery monitor Floating Point Exception in SITL;"Fix battery monitor Floating Point Exception in SITL

Adds a sanity check to avoid division by zero when BATT_CAPACITY is set to 0.";['libraries/AP_BattMonitor/AP_BattMonitor_Backend.cpp'];1;7
ef20676c6756c28c50a4cb86a854cc8081a0c07e;ef20676c;library;gps;fix INJECT_TO param desc and add definition;"fix INJECT_TO param desc and add definition

No functional change";['libraries/AP_GPS/AP_GPS.cpp', 'libraries/AP_GPS/AP_GPS.h'];2;10
f79ac46d60f651b3c21bbcbef4ca81b9b8c06c1e;f79ac46d;copter;copter;fix althold take-off state;"fix althold take-off state

Also abort takeoff when switching into AltHold";['ArduCopter/control_althold.cpp'];1;19
84ac8abc42ad24e489fc93031a58c3b689b1210b;84ac8abc;library;mount;Fixed a bug with wrapping of panning angles.;Fixed a bug with wrapping of panning angles.;['libraries/AP_Mount/AP_Mount_Backend.cpp'];1;6
4eab27abe964c8ab1592206616fbdadb1213adcb;4eab27ab;library;inertialsensor;fixed logic bug in MPU6000 init;"fixed logic bug in MPU6000 init

thanks to coverity";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;2
21cd73e87700a66087608ab92d35e371f3b87013;21cd73e8;copter;copter;AutoTune bug fix to save feedforward setting;AutoTune bug fix to save feedforward setting;['ArduCopter/control_autotune.cpp'];1;2
7c55689aadfdfb9a6b128be05616032fdf1a104f;7c55689a;library;hal_linux;Fix loading Firmware;Fix loading Firmware;['libraries/AP_HAL_Linux/RCOutput_AioPRU.cpp'];1;6
6ba8cd05ff2fa139331697f97610c29e58edeee8;6ba8cd05;library;navekf;Fix bug preventing GPS vertical velocity being used;"Fix bug preventing GPS vertical velocity being used

This fixes a bug that prevents GPS velocity being used permanently if there is a temporary unavailability";['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;18
5644dd86202171ffb8ae267c7b8bba9e541859f3;5644dd86;copter;copter;fix duplicate IMU logging;"fix duplicate IMU logging

IMU logs could be written at FULL rate and at lower rates leading to duplicates";['ArduCopter/ArduCopter.cpp'];1;4
9d81856580ff056888fb13f1485d95f6115c16fb;9d818565;library;inertialsensor;fix name of get_delta_velocity method;fix name of get_delta_velocity method;['libraries/AP_InertialSensor/AP_InertialSensor.h'];1;2
f603c1ef69051529a68a73bde65886fe581c2b3d;f603c1ef;copter;copter;fix ekf-check reliance on position_ok;fix ekf-check reliance on position_ok;['ArduCopter/Copter.h', 'ArduCopter/system.cpp', 'ArduCopter/ekf_check.cpp'];3;18
8ceccd778d84ddfd31de21d49425009c06abb51b;8ceccd77;library;inertialsensor;disable vibration checks on APM2;"disable vibration checks on APM2

Also bug fix get_accel_clip_count's instance check";['libraries/AP_InertialSensor/AP_InertialSensor.h', 'libraries/AP_InertialSensor/AP_InertialSensor.cpp'];2;16
5fb46b0e11845dc82e1c3fa79078ad708b5a1c75;5fb46b0e;tools;replay;fix dataflash overflow on timestamp-poor (older) logfiles;fix dataflash overflow on timestamp-poor (older) logfiles;['Tools/Replay/MsgHandler.cpp'];1;12
d366c303582f194c09ad6dcfa74f0501b68e8797;d366c303;library;rangefinder;fix potential out-of-bounds read;"fix potential out-of-bounds read

Issue found by Coverity";['libraries/AP_RangeFinder/RangeFinder.cpp'];1;4
7613964ecbf9f3517dc33e515b460e957c4ec30d;7613964e;copter;copter;fix bug in which do-parachute command could start motor test;"fix bug in which do-parachute command could start motor test

bug found by Coverity";['ArduCopter/GCS_Mavlink.cpp'];1;1
b8e3fe8f262118b88693ef474feccc750ef3f14c;b8e3fe8f;library;mount;AlexMos fix to stop crashing before init;AlexMos fix to stop crashing before init;['libraries/AP_Mount/AP_Mount_Alexmos.cpp'];1;4
d7fe6bfe0d76171b959abdc82b250aaf9f42c7fc;d7fe6bfe;library;terrain;cast grid_spacing to fix OSX clang error;cast grid_spacing to fix OSX clang error;['libraries/AP_Terrain/AP_Terrain.cpp'];1;2
3e74b82bc4945c9c1656caf7af8208c941ae3d9c;3e74b82b;plane;plane;fixed two bugs in px4io override code;"fixed two bugs in px4io override code

First bug is going via microSD to poulate mixer. We can't rely on the
microSD being writeable or functioning properly. Instead create the
buffer in memory and only write a copy to the filesystem.

Second bug is related to extreme trim values on channels. If trim
values are well out of range then the mixer fails and override fails.";['ArduPlane/px4_mixer.cpp'];1;159
8adc60751c5f7c8b623afd4eab16eac742a5586a;8adc6075;copter;copter;fix LOG_BITMASK parameter description;fix LOG_BITMASK parameter description;['ArduCopter/Parameters.pde'];1;2
65ca09600cd294037decbe575ccd0da3cf061aec;65ca0960;library;motors;Heli eliminate _dt member and fix rsc_runup calculation;Heli eliminate _dt member and fix rsc_runup calculation;['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsHeli.h'];2;10
c8a1e48f0cb9a75f33e801d76b1456a8162ee037;c8a1e48f;copter;copter;Tradheli fix Land Detector.;"Tradheli fix Land Detector.

Tradheli does not use throttle_mix.";['ArduCopter/land_detector.pde'];1;6
fb2d29364e943ad54765605e93e3f92f75e58aff;fb2d2936;library;mount_storm32_serial;fix angle request;fix angle request;['libraries/AP_Mount/AP_Mount_SToRM32_serial.cpp'];1;6
ce0ee69a3b7a9d88f93c535e019dcac7a1bfc4a6;ce0ee69a;library;antennatracker;fix for scheduler API change;fix for scheduler API change;['AntennaTracker/AntennaTracker.pde'];1;2
964b8ed2f393d9d6354accd8efdbf9f1d5037614;964b8ed2;plane;plane;fix for scheduler API change;fix for scheduler API change;['ArduPlane/ArduPlane.cpp'];1;2
19332be52ebc50f37d493820d7cfa56071b9b694;19332be5;copter;copter;fix for scheduler API change;fix for scheduler API change;['ArduCopter/ArduCopter.pde'];1;2
7d5181771635506aafba38025cc6f6987e23c68d;7d518177;rover;rover;fix for scheduler API change;fix for scheduler API change;['APMrover2/APMrover2.cpp'];1;2
b8181b6b90fb2a5b5fbfaede335ec250d59e7cf3;b8181b6b;library;motors;RCMAP fix;"RCMAP fix

Remove all RC Input channels passed as reference into AP_Motors.  All input handling self-contained inside AP_Motors.
Rework Tricopter to use internal servo calcs.";['libraries/AP_Motors/AP_MotorsOcta.h', 'libraries/AP_Motors/AP_MotorsY6.h', 'libraries/AP_Motors/AP_Motors_Class.cpp', 'libraries/AP_Motors/AP_MotorsHexa.h', 'libraries/AP_Motors/AP_MotorsMatrix.cpp', 'libraries/AP_Motors/AP_MotorsSingle.h', 'libraries/AP_Motors/AP_MotorsHeli.h', 'libraries/AP_Motors/AP_MotorsMatrix.h', 'libraries/AP_Motors/AP_Motors_Class.h', 'libraries/AP_Motors/AP_MotorsTri.h', 'libraries/AP_Motors/AP_MotorsTri.cpp', 'libraries/AP_Motors/AP_MotorsQuad.h', 'libraries/AP_Motors/AP_MotorsCoax.cpp', 'libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsCoax.h', 'libraries/AP_Motors/AP_MotorsSingle.cpp', 'libraries/AP_Motors/AP_MotorsOctaQuad.h'];17;565
316196b12f24c6bd04de79648b94ce52c154b4ca;316196b1;copter;copter;Finish RCMap fix.;"Finish RCMap fix.

All g.rc_X references changed to channel function pointers.";['ArduCopter/control_loiter.pde', 'ArduCopter/control_rtl.pde', 'ArduCopter/control_althold.pde', 'ArduCopter/motors.pde', 'ArduCopter/control_sport.pde', 'ArduCopter/control_circle.pde', 'ArduCopter/Attitude.pde', 'ArduCopter/land_detector.pde', 'ArduCopter/switches.pde', 'ArduCopter/control_acro.pde', 'ArduCopter/control_guided.pde', 'ArduCopter/control_poshold.pde', 'ArduCopter/control_flip.pde', 'ArduCopter/control_auto.pde'];14;72
acdf4a226f000f74b50cfa480e0994a69521ae1b;acdf4a22;copter;copter;RCMAP Fix, remove RC_Channel references;"RCMAP Fix, remove RC_Channel references

from AP_Motors objects.  And a few function renaming to follow changes in AP_Motors.  Also add new throttle channel setter functionality.
Remove RC7 object from Tricopter.  Add special Tricopter param handling.";['ArduCopter/radio.pde', 'ArduCopter/Log.pde', 'ArduCopter/Parameters.pde', 'ArduCopter/land_detector.pde', 'ArduCopter/ArduCopter.pde'];5;30
9ac892aceac0fba95400cef9b0bb115e9ff94073;9ac892ac;copter;copter;fix MISSION_START support;"fix MISSION_START support

Vehicle must already be armed
Set auto-armed to true to allow take-off without pilot raising throttle";['ArduCopter/GCS_Mavlink.pde'];1;3
db871cc5811e257b47cc1f6b37986c758a44a7af;db871cc5;plane;plane;prevent trim values out of range for PX4 mixer;"prevent trim values out of range for PX4 mixer

thanks to Brian Christal for a good bug report!";['ArduPlane/px4_mixer.pde'];1;2
559684b257f06370f4c7c2e6db43922eb2da6df7;559684b2;gcs;gcs_mavlink;fix flow control check;"fix flow control check

Thanks to Tridge for spotting is";['libraries/GCS_MAVLink/GCS_Common.cpp'];1;9
474ee2a11ecc37d9c46ce1550dba2fcce7b1d0ac;474ee2a1;rover;rover;fix for new compass API;fix for new compass API;['APMrover2/GCS_Mavlink.pde'];1;3
64ce1e0381de588e4e2f899103b78d5a7e8d6f38;64ce1e03;copter;copter;fix for new compass API;fix for new compass API;['ArduCopter/GCS_Mavlink.pde'];1;3
e362b4fc047719e95635751c1de3a23c25d5ff93;e362b4fc;plane;plane;fix for new compass API;fix for new compass API;['ArduPlane/GCS_Mavlink.pde'];1;3
3370ec62a19e48355b8c74dd088d465d5fc1a279;3370ec62;library;hal_sitl;fix for multi-compass SITL;fix for multi-compass SITL;['libraries/AP_HAL_SITL/sitl_compass.cpp'];1;8
7056484ef0312b4968d8bbc7976b17fc860730ca;7056484e;copter;copter;fix spline overshoot;fix spline overshoot;['libraries/AC_WPNav/AC_WPNav.cpp'];1;6
cb595709386196d01f1992f5e4dafb7b4934edcc;cb595709;library;navekf;Remove bug preventing external selection of optical flow mode;Remove bug preventing external selection of optical flow mode;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
4f52aaa3a388d686b6951a18715dfcad99051b44;4f52aaa3;copter;copter;fix tradheli arming message;fix tradheli arming message;['ArduCopter/motors.pde'];1;2
142e018a18955008ba1ee73c049a7beeb2ac3461;142e018a;library;navekf;fix bug causing takeoff to fail;fix bug causing takeoff to fail;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;4
9e02ce44ae858d66c8c7d2dd9e780fee3d6aa78e;9e02ce44;tools;tools;fix for HAL_SITL rename;fix for HAL_SITL rename;['Tools/VARTest/VARTest.pde', 'Tools/Replay/Replay.pde', 'Tools/Hello/Hello.pde', 'Tools/CPUInfo/CPUInfo.pde'];4;10
a299fdacdf4fb923a560634dddf596154b7b513d;a299fdac;plane;plane;fix for HAL_SITL rename;fix for HAL_SITL rename;['ArduPlane/Parameters.pde', 'ArduPlane/Log.pde', 'ArduPlane/ArduPlane.pde', 'ArduPlane/GCS_Mavlink.pde'];4;10
5a36b9955e80bdbfa3f7861d6a10a2144a5d2dbe;5a36b995;copter;copter;fix for HAL_SITL rename;fix for HAL_SITL rename;['ArduCopter/Parameters.pde', 'ArduCopter/Log.pde', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/motors.pde', 'ArduCopter/ArduCopter.pde'];5;16
429efc4d6cb2e68d9921438db956c84593bf30b2;429efc4d;library;antennatracker;fix for HAL_SITL rename;fix for HAL_SITL rename;['AntennaTracker/AntennaTracker.pde', 'AntennaTracker/Parameters.pde', 'AntennaTracker/GCS_Mavlink.pde'];3;8
eda187c75a8c28c6e799d1cb2b91af6e946e157f;eda187c7;rover;rover;fix for HAL_SITL rename;fix for HAL_SITL rename;['APMrover2/config.h', 'APMrover2/APMrover2.pde', 'APMrover2/Parameters.pde', 'APMrover2/GCS_Mavlink.pde'];4;10
212e0ec00259fa0b02982d2b452d27c4adf0f6aa;212e0ec0;library;storagemanager;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/StorageManager/examples/StorageTest/StorageTest.pde'];1;2
fa688a7b149e630777ecb6316f73d92fec3d8d34;fa688a7b;library;rc_channel;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/RC_Channel/examples/RC_Channel/RC_Channel.pde'];1;2
f449b34fdd97621af98f25c363d2205150193774;f449b34f;library;pid;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/PID/examples/pid/pid.pde'];1;2
2d89b8b53ddda0efb927f9d9a154bf58425aab41;2d89b8b5;gcs;gcs_mavlink;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/GCS_MAVLink/GCS_Logs.cpp', 'libraries/GCS_MAVLink/examples/routing/routing.pde'];2;4
69f9d25cd02fdd6942d4458b807bd299eab7968b;69f9d25c;library;dataflash;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/DataFlash/DataFlash_SITL.h', 'libraries/DataFlash/examples/DataFlash_test/DataFlash_test.pde', 'libraries/DataFlash/DataFlash_File.cpp', 'libraries/DataFlash/DataFlash_SITL.cpp'];4;10
cf4602afc18cfa2b6e3659daf3f4cf87430a697a;cf4602af;library;tecs;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_TECS/AP_TECS.cpp'];1;2
a4e8d960d2f93221a56647a00b5e45f145aad613;a4e8d960;library;scheduler;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Scheduler/examples/Scheduler_test/Scheduler_test.pde'];1;2
c80a631813ae512deb9e86df20c7705e81fddf46;c80a6318;library;relay;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Relay/AP_Relay.cpp'];1;2
ac439728839c95c981ac0ca23aa9011f76862017;ac439728;library;rangefinder;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_RangeFinder/examples/RFIND_test/RFIND_test.pde'];1;2
4ee54a8915439f5fdb035a3884b71c4a814cf4b0;4ee54a89;library;opticalflow;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_OpticalFlow/OpticalFlow.cpp', 'libraries/AP_OpticalFlow/examples/AP_OpticalFlow_test/AP_OpticalFlow_test.pde'];2;4
9f10e2d26c1af05b86bf9a48a27a3fbc56be4d78;9f10e2d2;library;notify;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Notify/examples/ToshibaLED_test/ToshibaLED_test.pde', 'libraries/AP_Notify/AP_BoardLED.h'];2;4
c4d6f9d0401b539ed72ee8d5441edf5b20bcc26a;c4d6f9d0;library;navekf;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_NavEKF/AP_SmallEKF.cpp'];1;2
2e57c62ebbe74bfa3a443b25ec60901f2e953052;2e57c62e;library;motors;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Motors/AP_Motors_Class.h'];1;2
0c142bb25a1082bfaf7cdc2c8a57e4787fa53779;0c142bb2;library;mission;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Mission/examples/AP_Mission_test/AP_Mission_test.pde'];1;2
eca675c556e6bfc9abd01c6f5092350d075f79e4;eca675c5;library;math;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Math/examples/location/location.pde', 'libraries/AP_Math/examples/rotations/rotations.pde', 'libraries/AP_Math/AP_Math.cpp', 'libraries/AP_Math/examples/eulers/eulers.pde'];4;8
ef527d9daad7244ad170186155e14e50917049e1;ef527d9d;library;inertialsensor;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_InertialSensor/examples/INS_generic/INS_generic.pde', 'libraries/AP_InertialSensor/examples/VibTest/VibTest.pde'];2;4
2be45bc7e61f3ba3475bb6bbadc62bb6fc0bbc1a;2be45bc7;library;gps;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_GPS/examples/GPS_AUTO_test/GPS_AUTO_test.pde'];1;2
dd94cc18a12460484809a0ea00b6f9aac3ddcaf6;dd94cc18;library;common;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Common/examples/AP_Common/AP_Common.pde'];1;2
8055e5792d5dd5b23cc7b2fb1af7cc01c9337b68;8055e579;library;battmonitor;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_BattMonitor/AP_BattMonitor_Analog.h'];1;2
7d9d594283ed6ddcdd18df1314fd64f79c408828;7d9d5942;library;barometer;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Baro/examples/BARO_generic/BARO_generic.pde'];1;2
f23bc463cbf5e257172c59757079e91f502e18c0;f23bc463;library;airspeed;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_Airspeed/AP_Airspeed.cpp'];1;2
e597575747d4057d952f12e29cafeb51b80c8aea;e5975757;library;ahrs;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.pde'];1;2
d8cd9866963794655d428c7f46085139c4b19893;d8cd9866;library;apm_control;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/APM_Control/AP_AutoTune.cpp'];1;2
e789984c9878dd93b77d0a99fb9da72989673922;e789984c;library;ac_wpnav;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AC_WPNav/AC_WPNav.h'];1;2
777685ce1f9906e27fd7acaf05b9f0259f831a0c;777685ce;library;ac_pid;fix for HAL_SITL rename;fix for HAL_SITL rename;['libraries/AC_PID/examples/AC_PID_test/AC_PID_test.pde'];1;2
be04be9b431ba46ffd1bde9e8ed59503a454f06f;be04be9b;library;navekf;Fix bug preventing home position being set by copter;"Fix bug preventing home position being set by copter

The interface definition has been modified so that it returns true for a position obtained usin geither the normal inertial navigation calculation, or a raw GPS measurement.
This enables this function to be used to set a home position before flight.";['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;12
2cba60c7318e827484d9fd8079035cfa3ba1cf93;2cba60c7;library;navekf;Decouple takeoff ground effect compensation from arm transtion;"Decouple takeoff ground effect compensation from arm transtion

Thsi fixes a potential bug where the vehicle could land at a lower location without disarming and re-enter ground effect takeoff mode wiht a baro height floor above the current altitude, causing unpredictable height gain";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;4
af80f20a51894dd1e52763ebf5bf417e961b53a3;af80f20a;library;inertialsensor;add get_primary_gyro, fix get_primary_accel;add get_primary_gyro, fix get_primary_accel;['libraries/AP_InertialSensor/AP_InertialSensor.h'];1;4
a035d5ad1b418c38ff374da17e5af34ee8f35d0d;a035d5ad;copter;copter;Fix initialization of Motor Interlock Aux Sw function.;Fix initialization of Motor Interlock Aux Sw function.;['ArduCopter/switches.pde'];1;5
67ba043b659ffc5311b604345ee686d10a8ecb80;67ba043b;tools;replay;fix replay for CTUN (type=0) messages;fix replay for CTUN (type=0) messages;['Tools/Replay/LogReader.cpp'];1;14
db833a647375af402230f443b997e0746c775c39;db833a64;tools;replay;fix null-pointer dereference when fields not present;fix null-pointer dereference when fields not present;['Tools/Replay/MsgHandler.h'];1;4
4c4a4f9ea5c155b53d6e1f159390af189651344a;4c4a4f9e;library;rangefinder;fixed cm to meter comparison;"fixed cm to meter comparison

thanks to EShamaev for this fix (see PR #1352)";['libraries/AP_RangeFinder/AP_RangeFinder_analog.cpp'];1;4
da629ce97697350aabb60145fa78651568a80595;da629ce9;copter;copter;minor format fix;minor format fix;['ArduCopter/Attitude.pde'];1;3
609bb0c56a6291d047d8c1a4cbfe41b617bc6e40;609bb0c5;rover;rover;fix MNT param description;fix MNT param description;['APMrover2/Parameters.pde'];1;2
e122916815ed2115c1c7cb52a3732427ef2f3099;e1229168;plane;plane;fix MNT param description;fix MNT param description;['ArduPlane/Parameters.pde'];1;2
85b0a18f610dc29c4cf960b16005f682d12c203a;85b0a18f;copter;copter;fix MNT param description;"fix MNT param description

extra underscore was appearing in the parameter descriptions on the web";['ArduCopter/Parameters.pde'];1;2
b7a6e3bf2cbc1b52d6bcda70b545f173fe4c8eef;b7a6e3bf;copter;copter;fix update_thr_average to run at 100hz;"fix update_thr_average to run at 100hz

Committed by Randy on Julien's behalf";['ArduCopter/ArduCopter.pde'];1;2
64629914a43929dadf2353ffe7ebca9400cddf87;64629914;copter;copter;fix RTL alt when no using Rally points;fix RTL alt when no using Rally points;['ArduCopter/control_rtl.pde'];1;2
3514177314971837a20146be072788bc667b814c;35141773;library;ac_pi_2d;minor format fix;minor format fix;['libraries/AC_PID/AC_PI_2D.h'];1;2
303cfd683a17400742f71280df69e68048514afd;303cfd68;library;ac_pid;replace floating point '==' with is_equal;"replace floating point '==' with is_equal

Also add div-by-zero check to fix calc_filt_alpha

Also get_i and get_shrink_i do not need to set values to zero in Vector2f
constructor because this is already done.";['libraries/AC_PID/AC_PID.cpp', 'libraries/AC_PID/AC_PI_2D.cpp'];2;21
608bb3d61128f9a1f42145c2e69c84b6979e60ff;608bb3d6;library;notify;minor format fix;minor format fix;['libraries/AP_Notify/AP_Notify.h'];1;2
ebf700d7368479b4cdf42384485cf9cc44c1d6a8;ebf700d7;library;tracker;fix notify initialisation;"fix notify initialisation

notify should be initialised before setting the initial startup flag
status";['AntennaTracker/AntennaTracker.pde'];1;4
085faaac6a618d83852d5c9f9c4a9f6ee8f3a9ac;085faaac;library;navekf;fix delay detection so that filter properly resets after a delay;fix delay detection so that filter properly resets after a delay;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;4
f21aa17980e1fe159529cd7d3000787bd3ecb3d6;f21aa179;library;gps;fixed sending of GPS_RAW_INT with multiple links;"fixed sending of GPS_RAW_INT with multiple links

thanks to ziltoid2 for this fix! See PR #2132";['libraries/AP_GPS/AP_GPS.cpp'];1;16
bfd24801ea057922279d95e035b0572c366d28f7;bfd24801;copter;copter;minor format fix;minor format fix;['ArduCopter/ArduCopter.pde'];1;2
03c0e17a4d85a0bea772a1078165a43ba3380eda;03c0e17a;library;gimbal;fix typo;fix typo;['libraries/AP_Gimbal/AP_Gimbal.cpp', 'libraries/AP_Gimbal/AP_Gimbal.h'];2;56
b3c35aee4e224dd1c63c6c6e48383d8758993b26;b3c35aee;library;gimbal;fix problem with rotation math on control loop;fix problem with rotation math on control loop;['libraries/AP_Gimbal/AP_Gimbal.cpp'];1;18
4ad3e786a5f49e8d7e461ac5e4bf994923a413dc;4ad3e786;library;navekf;fix initialization of the SmallEKF;"fix initialization of the SmallEKF

The constructor 'states' variable was not being called. To make sure other variables where also zeroed now";['libraries/AP_NavEKF/AP_SmallEKF.cpp'];1;12
87e6452ee90f267cba4cb6dbca58b5a24e92b7c0;87e6452e;library;mission;bug fix when jump target is zero;"bug fix when jump target is zero

This would result in copter flying to a waypoint high above home";['libraries/AP_Mission/AP_Mission.cpp'];1;4
38491c4ff775cb995ce7da67ad2a7739ba5b6d12;38491c4f;library;camera;fix mission cmds sending msgs to components;"fix mission cmds sending msgs to components

mission commands were triggering the sending of
mavlink mission items when they should have been sending
command long messages";['libraries/AP_Camera/AP_Camera.h', 'libraries/AP_Camera/AP_Camera.cpp'];2;71
12957867fd08fc72d5135ba9033895a0d4ffe601;12957867;library;ac_poscontrol;fix thr twitch when changing modes;fix thr twitch when changing modes;['libraries/AC_AttitudeControl/AC_PosControl.cpp'];1;1
90d74e55d39251304f535e7bddb7c00b0e22f424;90d74e55;library;antennatracker;fix newlines;fix newlines;['AntennaTracker/control_auto.pde', 'AntennaTracker/control_manual.pde', 'AntennaTracker/control_scan.pde', 'AntennaTracker/servos.pde'];4;778
06ea18f97e65cacd3beb49c11514993d7e8e4a22;06ea18f9;library;filter;fix LPF example sketch;fix LPF example sketch;['libraries/Filter/examples/LowPassFilter/LowPassFilter.pde'];1;5
99a9a885296ea13d5805723cba716172a95de75a;99a9a885;library;filter;dt check fix for LPF;dt check fix for LPF;['libraries/Filter/LowPassFilter.h'];1;2
a1e6a3ee32ef2a148dc8919ab652cdea1b0f2b9f;a1e6a3ee;library;ac_poscontrol;minor format fix;minor format fix;['libraries/AC_AttitudeControl/AC_PosControl.h'];1;2
5d70854c08b228bb80ce2c215037e7acfe084adc;5d70854c;library;navekf;Fix minor bug in calculation of innovation variance;"Fix minor bug in calculation of innovation variance

the innovation variance for GPS should be the sum of squares of the state and measurement uncertainty.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
d3f4b4a02bac3e3b4aec15781cfb545d8f57c0d6;d3f4b4a0;library;navekf;Fix name consistency for data check time stamps;Fix name consistency for data check time stamps;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;36
4e09c9832b528e8586821be54a953aa36b7add2b;4e09c983;copter;copter;fix guided_posvel and guided_vel to update pos_control at same rate as wpnav;fix guided_posvel and guided_vel to update pos_control at same rate as wpnav;['ArduCopter/control_guided.pde'];1;42
55d8f440d4270af1746b22aa29cbe98a7ce4fc35;55d8f440;copter;copter;fix alt sent to fence_check to be meters;fix alt sent to fence_check to be meters;['ArduCopter/fence.pde'];1;2
0f9e50d61c57df22eff2a4951c489878cd67d1b3;0f9e50d6;copter;copter;fix rtl completion altitude;fix rtl completion altitude;['ArduCopter/control_rtl.pde'];1;2
b344a7ed17695fbc1407ede68753c10deadb52e5;b344a7ed;copter;copter;fix set_position_target altitudes;fix set_position_target altitudes;['ArduCopter/GCS_Mavlink.pde'];1;8
301d4cc4a690212b224753b636122d816b8cf196;301d4cc4;copter;copter;fix guided takeoff altitude;fix guided takeoff altitude;['ArduCopter/control_guided.pde'];1;4
fd55068620b27c8cfbf8122dad9ef8a008b0b101;fd550686;library;ac_wpnav;fix double-twitch on stop in loiter;fix double-twitch on stop in loiter;['libraries/AC_WPNav/AC_WPNav.cpp'];1;29
b292873304c6be95f948f947d9c402ebd878e758;b2928733;library;inertialsensor;fix starvation in L3G4200D;"fix starvation in L3G4200D

The main thread would always be blocked on the semaphore to read the
data from accelerometer and gyroscope. Especially if we have a slow
update of these values in _accumulate() due to the I2C transfer function
taking too much time: the timer thread would never give up the CPU,
causing starvation on the main thread.

This fixes the issue by reducing the critical region using a flip-buffer
so _accumulate() can work on its own copy of the data. Now that the
critical region is smaller, also avoid the semaphore and use a spinlock
instead.";['libraries/AP_InertialSensor/AP_InertialSensor_L3G4200D.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_L3G4200D.h'];2;60
e3d78b896074e4e10df50751d9afdbf1149a5bc0;e3d78b89;library;hal_linux;fix passing callback to member function;"fix passing callback to member function

It's undefined behavior to pass the callback to pthread to a class
member like we were doing. Refactor the code so the callbacks are static
members.

This fixes the following warnings:

libraries/AP_HAL_Linux/Scheduler.cpp: In member function 'virtual void Linux::LinuxScheduler::init(void*)':
/home/lucas/p/dronecode/ardupilot/libraries/AP_HAL_Linux/Scheduler.cpp:61:76: warning: converting from 'void* (Linux::LinuxScheduler::*)()' to 'Linux::LinuxScheduler::pthread_startroutine_t {aka void* (*)(void*)}' [-Wpmf-conversions]
                            (pthread_startroutine_t)&Linux::LinuxScheduler::_timer_thread)^^
                                                                            ^
libraries/AP_HAL_Linux/Scheduler.cpp:65:76: warning: converting from 'void* (Linux::LinuxScheduler::*)()' to 'Linux::LinuxScheduler::pthread_startroutine_t {aka void* (*)(void*)}' [-Wpmf-conversions]
                            (pthread_startroutine_t)&Linux::LinuxScheduler::_uart_thread)^^
                                                                            ^
libraries/AP_HAL_Linux/Scheduler.cpp:69:76: warning: converting from 'void* (Linux::LinuxScheduler::*)()' to 'Linux::LinuxScheduler::pthread_startroutine_t {aka void* (*)(void*)}' [-Wpmf-conversions]
                            (pthread_startroutine_t)&Linux::LinuxScheduler::_rcin_thread)^^
                                                                            ^
libraries/AP_HAL_Linux/Scheduler.cpp:73:76: warning: converting from 'void* (Linux::LinuxScheduler::*)()' to 'Linux::LinuxScheduler::pthread_startroutine_t {aka void* (*)(void*)}' [-Wpmf-conversions]
                            (pthread_startroutine_t)&Linux::LinuxScheduler::_tonealarm_thread)^^
                                                                            ^
libraries/AP_HAL_Linux/Scheduler.cpp:77:76: warning: converting from 'void* (Linux::LinuxScheduler::*)()' to 'Linux::LinuxScheduler::pthread_startroutine_t {aka void* (*)(void*)}' [-Wpmf-conversions]
                            (pthread_startroutine_t)&Linux::LinuxScheduler::_io_thread)^^";['libraries/AP_HAL_Linux/Scheduler.cpp', 'libraries/AP_HAL_Linux/Scheduler.h'];2;85
62c2f737d597a7f2ddb49fab8d42473da3b587f4;62c2f737;library;hal_linux;fix setting RT priorities;"fix setting RT priorities

LinuxScheduler::init() was not really working as it should. This was the
result of ""ps -Leo class,rtprio,wchan,comm | grep ArduCopter"":

FF      12 futex_ ArduCopter.elf
FF      12 usleep ArduCopter.elf
FF      12 hrtime ArduCopter.elf
FF      12 poll_s ArduCopter.elf
FF      12 hrtime ArduCopter.elf
FF      12 hrtime ArduCopter.elf

As can be seen all the threads run with the same priority, the one of the main
thread. There were basically 2 mistakes:

	1) pthread_attr_setschedpolicy() needs to be called before
	   pthread_attr_setschedparam(). Otherwise the latter will just return
	   an error and not set the priority

	2) pthread_create() defaults to ignore the priority and inherit the
	   it from the parent thread. pthread_attr_setinheritsched() needs to
	   be called to change the behavior to PTHREAD_EXPLICIT_SCHED. See
	   pthread_attr_setinheritsched(3) for an example program to test the
	   behaviors.

Also, it's undefined behavior to call pthread_attr_init() several times on the
same pthread_attr_t. Although we could reutilize the same attribute without
calling  pthread_attr_init() again, lets refactor the code a little bit, so all
the pthread calls are in a single place. Then also call pthread_attr_destroy()
when we are done.";['libraries/AP_HAL_Linux/Scheduler.cpp', 'libraries/AP_HAL_Linux/Scheduler.h'];2;74
e2071a4630f3943c2404e957ea21b38eeebadac3;e2071a46;library;notify;ToneAlarm fix to stopping continuous tones;ToneAlarm fix to stopping continuous tones;['libraries/AP_Notify/ToneAlarm_PX4.cpp'];1;2
e79ccf1fccbdcf29cd7eeab588dbb56af4982a50;e79ccf1f;library;navekf;Fix bug allowing terrain to be above vehicle position;"Fix bug allowing terrain to be above vehicle position

The terrain state and vehicle state need to be compared at the same time horizon.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
11576a0f1e28719b1fa6065c19ba87058654ea80;11576a0f;copter;copter;fix bitmask for use with SET_POSITION_TARGET;"fix bitmask for use with SET_POSITION_TARGET

Thanks to vooon for spotting this";['ArduCopter/defines.h'];1;6
ff9917d3388723aa3d6af6d9759fb1a5e96489cb;ff9917d3;library;ahrs;Fix bug preventing EKF from initialising;Fix bug preventing EKF from initialising;['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp'];1;5
07735fefa63a5562047c9eeeda6cbd8c15b5a99c;07735fef;library;math;fix div by zero in quaternion;fix div by zero in quaternion;['libraries/AP_Math/quaternion.cpp'];1;1
5284211c96414a80af05874ec9c60e7113911867;5284211c;library;serialmanager;fixed matching bug in protocol_match();"fixed matching bug in protocol_match()

thanks to Mike Clement for noticing this";['libraries/AP_SerialManager/AP_SerialManager.cpp'];1;4
9b3656e77c62051b9a1966a4bb5f90b0c2f734af;9b3656e7;library;navekf;Fix bug introduced in Y axis flow fusion;Fix bug introduced in Y axis flow fusion;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;9
7fc0f026d2be3bd620a44f47005fab019051a216;7fc0f026;library;navekf;Fix bug in optical flow innovation variance integrity check;"Fix bug in optical flow innovation variance integrity check

The check allowed negative innovation variances to pass. If this did occur, the filter would diverge.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;4
d4c60ca9563ec364bb19bc96c44d2a8a2ad699c5;d4c60ca9;library;navekf;Fix bug preventing reset of velocity after OF fusion timeout;Fix bug preventing reset of velocity after OF fusion timeout;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;6
1c244af3d8af9c419b31297ac84401568fe97e3e;1c244af3;library;navekf;Fix bug affecting in-flight GPS acquisition;"Fix bug affecting in-flight GPS acquisition

This bug caused velocities to be reset to zero";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;1
4147825b87ba00bc17c42f5ea39c5c1ae3c786c2;4147825b;library;inertialsensor;fixed gyro calibration bug;"fixed gyro calibration bug

we must not update _gyro_offset[] until we have completed calibration
of that gyro, or we will end up using the new offsets when asking for
the raw gyro vector";['libraries/AP_InertialSensor/AP_InertialSensor.cpp'];1;7
912a5d80b183fe79efd8f5f6db2aa1769df003ce;912a5d80;library;tracker;fix serial manager integration;fix serial manager integration;['AntennaTracker/system.pde'];1;2
8f49c96b1ac9a98e5bf848ede517675ddcd998f8;8f49c96b;rover;rover;fix serial manager integration;fix serial manager integration;['APMrover2/system.pde'];1;2
7e4dd9666c10b980470210119b37c84cb1dc9917;7e4dd966;plane;plane;fix serial manager integration;fix serial manager integration;['ArduPlane/system.pde'];1;2
1828515b3b674f8408eb79627e73ebff05de6a5b;1828515b;library;motors;bug fix to _batt_voltage_filt;bug fix to _batt_voltage_filt;['libraries/AP_Motors/AP_Motors_Class.cpp'];1;2
ea108771130695665a6a5b7f0d72157054235e61;ea108771;tools;replay;fix handling of old IMU messages;fix handling of old IMU messages;['Tools/Replay/Replay.pde', 'Tools/Replay/LogReader.cpp'];2;17
8ba043e593ca1f509817c28b9201913306000b8f;8ba043e5;library;ahrs;fixed EKF startup bug;"fixed EKF startup bug

This fixes the EKF for when GPS lock takes more than 10 seconds

fixes issue #2010";['libraries/AP_AHRS/AP_AHRS_NavEKF.cpp', 'libraries/AP_AHRS/AP_AHRS_NavEKF.h'];2;11
127791127ca45848beef976bc40918c92dfeaa71;12779112;library;ac_poscontrol;fix double literals;fix double literals;['libraries/AC_AttitudeControl/AC_PosControl.h'];1;4
09aa2f81147da09fe600a37f78980469598cf836;09aa2f81;library;ac_attitudecontrol;Fix function discription;Fix function discription;['libraries/AC_AttitudeControl/AC_AttitudeControl.h'];1;2
35d1cbd053220b588ae69300353ec5b70c2a3692;35d1cbd0;copter;copter;Autotune fix P test;Autotune fix P test;['ArduCopter/control_autotune.pde'];1;77
9aba8852315d6baa351bc5917aaccd649d586e38;9aba8852;library;ac_fence;fix prearm check;"fix prearm check

before arming the EKF's pred_horiz_pos_abs flag should be used";['libraries/AC_Fence/AC_Fence.cpp'];1;2
31a55b2bd61a0aa147b4033800c064f03125f656;31a55b2b;library;motorsmatrix;fix div by zero by ensuring throttle is above min;fix div by zero by ensuring throttle is above min;['libraries/AP_Motors/AP_MotorsMatrix.cpp'];1;2
9c2f1ce869240dc82d775a586256ee252be62a5f;9c2f1ce8;library;mount;Fix bug in mavlink gimbal attitude control;Fix bug in mavlink gimbal attitude control;['libraries/AP_Mount/AP_Mount_MAVLink.cpp'];1;16
103bb2a08dac3d9b1967fbc2610e06c6e26b1a48;103bb2a0;library;inertialsensor;Fix orientation MPU6000 PXF;Fix orientation MPU6000 PXF;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;9
2a47337dc1c55ca2534c82a4894e38399f956b5c;2a47337d;copter;copter;fix multiple flight-mode fail log messages;"fix multiple flight-mode fail log messages

When the vehicle failed to enter a flight mode it was logging the
failure repeatedly in the dataflash";['ArduCopter/switches.pde'];1;6
bb74b8dec86b074522438f2b83aff7ec5070d3be;bb74b8de;library;ac_poscontrol;fix twitch when entering RTL;"fix twitch when entering RTL

Also removed slow_cpu flag
Fixed bug in update to _accel_target_jerk_limited.";['libraries/AC_AttitudeControl/AC_PosControl.h', 'libraries/AC_AttitudeControl/AC_PosControl.cpp'];2;37
3a1cbaeb25fc8e1b1587cbb0207d42a30208b8d4;3a1cbaeb;library;mission;fix for new compass API;fix for new compass API;['libraries/AP_Mission/examples/AP_Mission_test/AP_Mission_test.pde'];1;2
b488d6de00764f58e731233d86c898840d5285bd;b488d6de;library;ahrs;fix for new compass API;fix for new compass API;['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.pde'];1;2
cc0d5b9ced728c0790b98a63dfe35343f5adbf02;cc0d5b9c;library;ac_pi_2d;replace set_filt_hz method with filt_hz;"replace set_filt_hz method with filt_hz

Thanks to Jonathan Challinger for spotting this bug";['libraries/AC_PID/AC_PI_2D.cpp', 'libraries/AC_PID/AC_PI_2D.h'];2;23
c10b0b34caa50bc58daf7dd717127941d9017737;c10b0b34;library;ac_pid;replace set_filt_hz method with filt_hz;"replace set_filt_hz method with filt_hz

Thanks to Jonathan Challinger for spotting this bug
Also add sanity check to filt_hz";['libraries/AC_PID/AC_PID.cpp', 'libraries/AC_PID/AC_PID.h'];2;24
9871b955866ed21e9c13b7f857222d17fa33aebd;9871b955;library;ac_poscontrol;fix dt sanity checking;fix dt sanity checking;['libraries/AC_AttitudeControl/AC_PosControl.h', 'libraries/AC_AttitudeControl/AC_PosControl.cpp'];2;6
792b2a2eb30db140423358ebda1d15c58ea2d848;792b2a2e;library;ac_attcontrol;separate accel max for roll, pitch, yaw;"separate accel max for roll, pitch, yaw

Also add:
Rate filters
rename rate filter defines
d-term only filter for roll, pitch rate control
accessors to save max accel for roll, pitch, yaw
fix for duplicate ACCEL_Y_MAX param";['libraries/AC_AttitudeControl/AC_AttitudeControl.h', 'libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];2;194
339dac18f7db3c8bf677154cd56ae7e85bd30e55;339dac18;rover;rover;Fix the yellow binking lights after the AP_Notify updates;Fix the yellow binking lights after the AP_Notify updates;['APMrover2/APMrover2.pde'];1;6
8629637cecbe04a3d8105422f33a95226d782622;8629637c;rover;rover;Fix for a minor sonar problem;Fix for a minor sonar problem;['APMrover2/sensors.pde'];1;2
cf8c211c3586b38143487fc9397e3e0a5a98b360;cf8c211c;library;motors;fix thrust curve and add constraint;fix thrust curve and add constraint;['libraries/AP_Motors/AP_Motors_Class.cpp'];1;3
90cac02bd7475be122d62d19d0218badf67b7ed2;90cac02b;library;notify;OreoLED fix to fade-in when armed;OreoLED fix to fade-in when armed;['libraries/AP_Notify/OreoLED_PX4.cpp'];1;4
da4a36c4e02d6c758b604dfd9610fa4b2c8d6cdb;da4a36c4;copter;copter;fix nack result_unsupported when arming fails;"fix nack result_unsupported when arming fails

We should return unsupported if param1 does not equal 0 or 1";['ArduCopter/GCS_Mavlink.pde'];1;2
64da7f0360cb4da6b5f6d8e8ba762d4682c7a1cc;64da7f03;library;hal_linux;fix macro that defines number of I/O callbacks;fix macro that defines number of I/O callbacks;['libraries/AP_HAL_Linux/Scheduler.cpp', 'libraries/AP_HAL_Linux/Scheduler.h'];2;5
9f552eaa4bbbf9e105e142285d637e88baf64490;9f552eaa;library;navekf;Fix bug that resets position to origin when vehicle arms;Fix bug that resets position to origin when vehicle arms;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;17
98b78e61c296f39348d361c09a1cc86282a78a94;98b78e61;library;inertialnav;fix apm1 oilpan support;fix apm1 oilpan support;['libraries/AP_InertialNav/examples/AP_InertialNav_test/AP_InertialNav_test.pde'];1;2
49d81a9c993d7274375ba3b052e52d98efae7eb6;49d81a9c;library;ahrs;fix apm1 oilpan support;fix apm1 oilpan support;['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.pde'];1;2
99ca779718f5695b4c639d8381596e6e761a4ff5;99ca7797;copter;copter;fix to allow arming in Guided from GCS;fix to allow arming in Guided from GCS;['ArduCopter/GCS_Mavlink.pde'];1;2
7fb114752c3e52e5a684e38ae49fe1f2ca27b76a;7fb11475;library;hal_avr;accept a much shorted sync pulse width on RCInput;"accept a much shorted sync pulse width on RCInput

this should fix issues with OpenLRSng default settings";['libraries/AP_HAL_AVR/RCInput.h', 'libraries/AP_HAL_AVR/RCInput_APM2.cpp', 'libraries/AP_HAL_AVR/RCInput_APM1.cpp'];3;12
2c012c2763bb26c30e988509020cca33e810d57c;2c012c27;library;navekf;Always check for new GPS data;"Always check for new GPS data

This fixes a bug that meant that once the EKF had started up in a non-GPS mode, it would no longer read the GPS and therefore would never be able to use GPS again until reset.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;8
925d625ed1554c224af9e3d4000ed2e55224f6a2;925d625e;library;navekf;fix bug in small EKF velocity fusion;fix bug in small EKF velocity fusion;['libraries/AP_NavEKF/AP_SmallEKF.cpp'];1;4
255252f387d7b23929c20c10889b9de99ce548f1;255252f3;library;math;Fix bug in quaternion division;Fix bug in quaternion division;['libraries/AP_Math/quaternion.cpp'];1;6
8911dfd791fcee69a2efd1d6c7b31552013a3f09;8911dfd7;library;dataflash;fix out-of-bounds read when logging;"fix out-of-bounds read when logging

Checked in my rmackay9";['libraries/DataFlash/LogFile.cpp'];1;2
24af65a41a16349679e1df1bcf031f5b1ea8e69b;24af65a4;library;mount_alexmos;critical fix to avoid endless loop if byte arrive to fast in serial buffer;"critical fix to avoid endless loop if byte arrive to fast in serial buffer

This fix reads the number of bytes available and iterates on it instead of looking for new bytes in the serial buffer (potentially forever)";['libraries/AP_Mount/AP_Mount_Alexmos.cpp'];1;5
66ad56161bb3f0a2f9ce33b59d0407652f590614;66ad5616;library;mount_mavlink;fix to calc_angle_to_location params;fix to calc_angle_to_location params;['libraries/AP_Mount/AP_Mount_MAVLink.cpp'];1;2
f509dad991d90337ea729adf16ba82ad93273b9d;f509dad9;library;mount_servo;bug fix to calc_angle_to_location params;bug fix to calc_angle_to_location params;['libraries/AP_Mount/AP_Mount_Servo.cpp'];1;2
8aeec82846ab06be0515381f32a2deada8acf541;8aeec828;library;navekf;Continually turn off aiding whilst the vehicle is disarmed;"Continually turn off aiding whilst the vehicle is disarmed

This prevents the possibility of any logic errors turning aiding back on.

AP_NavEKF: Fix bug in logic";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;8
ae6b85e63d3d2014a77a2ec98356fe51e1f4f4c9;ae6b85e6;library;navekf;Explicitly set aiding to off when disarmed;"Explicitly set aiding to off when disarmed

This fixes a bug that could cause the AHRS to drift whilst the vehicle was disarmed depending sensor combinations at startup.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;7
02d0b059269d761bff78cf50ccbde8ac62e76a52;02d0b059;copter;copter;minor format fix;minor format fix;['ArduCopter/sensors.pde'];1;2
4185d17915192803f7c9155081e4a24657eb2b36;4185d179;copter;copter;fix to RTL, PosHold and Loiter's use of filter status;fix to RTL, PosHold and Loiter's use of filter status;['ArduCopter/control_loiter.pde', 'ArduCopter/control_rtl.pde', 'ArduCopter/control_poshold.pde'];3;6
f23959b5fa68404a1d62d7b98e3900f1c93fffa0;f23959b5;library;dataflash;fix missing slash lost in merge;fix missing slash lost in merge;['libraries/DataFlash/DataFlash.h'];1;2
c40c3632bb98ca25ae511acfa40d628705bcf847;c40c3632;library;navekf;Critical Bug Fix;"Critical Bug Fix

Prevents possible loss of attitude reference for flights without optical flow and GPS.

The optical flow measurement timeout can reset the velocity states which decouples the position states from IMU errors and therefore significantly reduces the amount of attitude error correction.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;7
62a05a0438c3da8c9d2d14e3deaeed7bad28b60a;62a05a04;library;notify;fix if statement;fix if statement;['libraries/AP_Notify/ToneAlarm_Linux.cpp'];1;2
a0957a83f8112d816c604b52ea55e985f5beed7f;a0957a83;library;navekf;Fix bug in reported position and velocity;"Fix bug in reported position and velocity

The last known position was being output on the velocities when in constant position mode.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;13
3e583e36506489bc877b1ee3c18d8744f03e8c4f;3e583e36;library;dataflash;fix EKF4 logging;fix EKF4 logging;['libraries/DataFlash/DataFlash.h'];1;2
a4ba4d1000de6ee04ed279198484428b20ec2b68;a4ba4d10;library;navekf;Fix bug in optical flow innovation variances;"Fix bug in optical flow innovation variances

Also improves protection against badly conditioned variances";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;28
b0c703e4f723c773ba3073758bf37d9baedc73ea;b0c703e4;library;navekf;Fix bug in optical flow fusion control logic;Fix bug in optical flow fusion control logic;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;5
d656c94bbc3c1d96eea18eac35ad58c2541e0df3;d656c94b;library;navekf;Fix out of bounds index bug;Fix out of bounds index bug;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;4
d599fa588edbaef198e3929249521d89b7363675;d599fa58;library;navekf;Don't allow EKF to initialise without GPS lock if we are a plane;"Don't allow EKF to initialise without GPS lock if we are a plane

This is needed because planes arm automatically.

AP_NavEKF: Fix bug in GPS patch";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;11
d26fa6d8278e1a09b1e5a7a90cd6bef0316ddd33;d26fa6d8;copter;copter;minor format fix;"minor format fix

no functional change";['ArduCopter/Parameters.h', 'ArduCopter/Parameters.pde'];2;8
d7ba80840081e3c1d1e76262fba7eecc69ae59f8;d7ba8084;copter;copter;Bug fix, int8t should be uint16t.;Bug fix, int8t should be uint16t.;['ArduCopter/control_poshold.pde'];1;6
2f0b1b3d9c4838bb066b7342de1d11b96945ac48;2f0b1b3d;library;navekf;Fix bug preventing use of optical flow without GPS;Fix bug preventing use of optical flow without GPS;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
0a5de21dc72957c7ea3fac07fbbb690ffa33429d;0a5de21d;library;navekf;Fix bug in reporting of solution status;"Fix bug in reporting of solution status

Because synthetic  position measurements at 0,0 are fused during position hold mode, a position timeout cannot be used as the only means of detecting position solution status.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
a16253796fb3b837ed411167e59ef387908a5f64;a1625379;library;navekf;Fix bug preventing the non-GPS mode being selected externally;"Fix bug preventing the non-GPS mode being selected externally

When on the ground it is likely the flow sensor will be returning  data that does not meet the minimum quality requirements selected.
The previous check was for the presence of valid data. This has been loosened to look for the presence of data.
When the vehicle becomes airborne, the quality of flow data normally improves as the image comes into focus.";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
73a06cd0c193ae7d757e6c091128cbf661b2df3c;73a06cd0;library;navekf;Fix bug causing magnetic field state learning to be forgotten;Fix bug causing magnetic field state learning to be forgotten;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
4a1ba9b1860f0ddae075e61b221dfef692d0db42;4a1ba9b1;library;ac_wpnav;minor const fix;minor const fix;['libraries/AC_WPNav/AC_WPNav.cpp'];1;8
91bff63267432f47f0569c7ff039f4d6c2b30efb;91bff632;copter;copter;Fix LAND overshoot issue;Fix LAND overshoot issue;['ArduCopter/control_land.pde', 'ArduCopter/control_rtl.pde', 'ArduCopter/control_auto.pde'];3;24
e2d47f836e8f3ef795a3cf34dd2547faee586692;e2d47f83;library;tecs;Fix bug causing plane to fly high on landing approach;"Fix bug causing plane to fly high on landing approach

The introduction of the height rate flare logic caused the demanded height rate to be zero except when a flare manouevre was being performed. This caused the plane to lag behind height changes if the D gain was non-zero, which caused it to fly high during landing approach.";['libraries/AP_TECS/AP_TECS.cpp'];1;2
8fb1d9cf8deadd4cce9559be35645f534180fab0;8fb1d9cf;library;navekf;Fix bug preventing opt flow scale factor estimation;"Fix bug preventing opt flow scale factor estimation

Also removes un-used variable declarations";['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;4
0bf991eef977861d5643c11438667821e4db5ae6;0bf991ee;library;navekf;Fix bug in optical flow fusion smoothing;Fix bug in optical flow fusion smoothing;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;23
11aefa6858fbf64d2220c9880e97a66eb9dd911e;11aefa68;library;tecs;Fix bug in parameter label;Fix bug in parameter label;['libraries/AP_TECS/AP_TECS.cpp'];1;2
50459bdca0b5a1adf95725b62179fd1769dbd156;50459bdc;library;hal_linux;Enable external clk for RCOutput_Navio;"Enable external clk for RCOutput_Navio
That should fix PWM value drifts.";['libraries/AP_HAL_Linux/RCOutput_Navio.cpp'];1;30
d57c99f1cc4d840b4a897c732590db62396e3612;d57c99f1;library;dataflash;Fix bug in logging of EKF IMU1 Z accel bias;Fix bug in logging of EKF IMU1 Z accel bias;['libraries/DataFlash/LogFile.cpp'];1;2
3831a0ed3edb3400068a52505fdd77a67a7c522a;3831a0ed;rover;rover;Fix INS test in CLI to quit on enter;"Fix INS test in CLI to quit on enter

The curly brace was in the wrong spot.";['APMrover2/test.pde'];1;6
d34ea4c1247699c406a88bc6f52e63a4ff77922c;d34ea4c1;library;ac_poscontrol;fix to default force_descend param;fix to default force_descend param;['libraries/AC_AttitudeControl/AC_PosControl.h'];1;3
49d3035ee5f5a4df89ba963e8765a1d90b266f4b;49d3035e;library;hal_linux;fix types, remove printfs in GPIO_RPI;fix types, remove printfs in GPIO_RPI;['libraries/AP_HAL_Linux/GPIO_RPI.cpp', 'libraries/AP_HAL_Linux/GPIO_RPI.h'];2;47
ce4c4c43dcf642c96f08eabd84ccc14594909723;ce4c4c43;library;hal_linux;Scheduler reboot fix;"Scheduler reboot fix

exit from the autpilot when reboot is commanded.
The software assumes that the code is being
launched in an infinite loop thereby an exit
will make it reboot.";['libraries/AP_HAL_Linux/Scheduler.cpp'];1;2
9f5f5871f24fa74093067732f71135a7b7cc74a3;9f5f5871;library;notify;Fix the typo, usage of toshibaled.init() instead of toshibaled.update();"Fix the typo, usage of toshibaled.init() instead of toshibaled.update()
This is a part of a set of fixes for the bugs and typos tridge discovered and shared inside earlier commits for setting up tonealarm.";['libraries/AP_Notify/AP_Notify.cpp'];1;2
31087e4f203276321508acef1b640dbbdc377a29;31087e4f;library;compass;shorten EXTERNAL2/3 to EXTERN2/3;"shorten EXTERNAL2/3 to EXTERN2/3

Bug discovered by Michael Day";['libraries/AP_Compass/Compass.cpp'];1;8
02581f4c056d9aee15fdd4fe09d0407102810e29;02581f4c;library;hal_linux;re-fix dirty mask bug in Storage;"re-fix dirty mask bug in Storage

when conversion to a single parent class was done it re-introduced a
bug that was fixed a while ago

See commit d238ff7c5dbeb37657cf5980bcbe29fc2c82ffa2";['libraries/AP_HAL_Linux/Storage.cpp'];1;8
14a6878bcd8f30ddab2c3f6f28425b40c97d8f37;14a6878b;library;hal_linux;fixed termios settings on BBB initial boot;"fixed termios settings on BBB initial boot

this should fix the problem of losing the GPS in flight";['libraries/AP_HAL_Linux/UARTDriver.cpp'];1;3
2b48434e602b963282dc655c8c2feb4f94a60956;2b48434e;library;tecs;fixed throttle demand on underspeed;"fixed throttle demand on underspeed

thanks to Philipp Oettershagen for finding this bug!";['libraries/AP_TECS/AP_TECS.cpp', 'libraries/AP_TECS/AP_TECS.h'];2;5
44dbf50101dc77416f98cb74c43b94ed08d7230f;44dbf501;copter;copter;fix camera feedback msg handling;"fix camera feedback msg handling

If the camera was disabled, camera message handling would fall though to
status-text msg handling.";['ArduCopter/GCS_Mavlink.pde'];1;2
ac2e5f644c698fbb85bf52d394d2a4eb137d8f80;ac2e5f64;library;dataflash;fix bug in ekf gyro bias logging;fix bug in ekf gyro bias logging;['libraries/DataFlash/LogFile.cpp'];1;12
7d48704f8204db59c9afcdea68afbc52bf702113;7d48704f;library;navekf;fix parameter descriptions;"fix parameter descriptions

Errors pointed out by Richard (DK)";['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;98
28b98a170b2934a3045bcfeee8b3e8599c51a37c;28b98a17;copter;copter;fix to dcm-check to be continuous;"fix to dcm-check to be continuous

dcm-check was triggering after 10 bad headings but these did not need to
be continuous meaning if the vehicle was flown long enough it would
almost certainly trigger a dcm-check failure and land";['ArduCopter/ekf_check.pde'];1;10
e80328d3a5d498d1865ea1c09e11f7f05ab073c8;e80328d3;library;ac_wpnav;bug fix sanity check of set_speed_xy;"bug fix sanity check of set_speed_xy

This corrects a bug that allowed the waypoint speed to be set to zero";['libraries/AC_WPNav/AC_WPNav.cpp'];1;2
e22130cbc765f9b046e72e5379677a077d143c3b;e22130cb;copter;copter;minor format fix;minor format fix;['ArduCopter/control_auto.pde'];1;2
a1cfd03c9b2fc2337cb442e330eb33489a52b315;a1cfd03c;library;ac_poscontrol;bug fix dt calculation;"bug fix dt calculation

fixes issue in which now could be earlier than _last_update_xy_ms
leading to a large dt value and a sudden lean on takeoff";['libraries/AC_AttitudeControl/AC_PosControl.cpp'];1;1
70845882a7e69a57050ef9cbb5b03f4ffff92475;70845882;library;math;fix up rotation test suite;fix up rotation test suite;['libraries/AP_Math/examples/eulers/eulers.pde'];1;7
63c06ea2afac5fb5e46fd2233ffe1291d2b2cc62;63c06ea2;library;ahrs;fixed calls to DCM in parent class;"fixed calls to DCM in parent class

use_compass() and reset() are common to AP_AHRS_DCM and
AP_AHRS_NavEKF. As AP_AHRS_NavEKF is a child of AP_AHRS_DCM, when we
call use_compass() from within AP_AHRS_DCM we actually end up calling
AP_AHRS_NavEKF::use_compass().

This has the effect of disabling the compass in DCM when EKF is active
and EKF has decided not to use the compass. That means that the DCM
yaw (and in fact the whole attitude) can get badly off while EKF is
enabled, making DCM an ineffective fallback if EKF fails.

The fix is to call the specific class versions of use_compass() and
reset()";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;10
e7b4a02d266879e27e1cb5dbfe951f6e8dc39dbd;e7b4a02d;library;gps;fix SIRF set-binary message;"fix SIRF set-binary message

This fixes an issue in which the the update rate for the mediatek, which
uses a similar protocol, was not being set correctly";['libraries/AP_GPS/AP_GPS_SIRF.h'];1;2
2dbfc6158db9a73f2b22091d6923a60e71aa389f;2dbfc615;rover;rover;check target of set-mode request from GCS;"check target of set-mode request from GCS

Issue discovered and fix contributed by Deadolous";['APMrover2/GCS_Mavlink.pde'];1;6
6d3acba04c9827a88a466ae5a6e1e1810a002578;6d3acba0;plane;plane;check target of set-mode request from GCS;"check target of set-mode request from GCS

Issue discovered and fix contributed by Deadolous";['ArduPlane/GCS_Mavlink.pde'];1;6
1a249a812983c141110431cbedc167f6ae85e228;1a249a81;copter;copter;check target of set-mode request from GCS;"check target of set-mode request from GCS

Issue discovered and fix contributed by Deadolous";['ArduCopter/GCS_Mavlink.pde'];1;5
5ca3c4baf686d61dcfc425d9c2efcdf12421eeb2;5ca3c4ba;library;mission;fix CHANGE_ALT to store climb rate in lat param;"fix CHANGE_ALT to store climb rate in lat param

The slightly confusing storage of climb rate in the lat field led to a
bug fix a few months ago that actually created a bug.";['libraries/AP_Mission/AP_Mission.cpp'];1;2
ef0e37b478fcb344824419055ccb5ee7ddd0d3f3;ef0e37b4;copter;copter;bugfix to condition-yaw for relative angles;"bugfix to condition-yaw for relative angles

Thanks to roque-canales for raising the issue and paradisephil for finding
the specific piece of code that went wrong and suggesting the fix.";['ArduCopter/commands_logic.pde', 'ArduCopter/control_auto.pde', 'ArduCopter/GCS_Mavlink.pde'];3;12
0d88b602ec2b97c446daf8f1b9d6a1d0d3ebe6ca;0d88b602;copter;copter;fix RSSI_RANGE param values;"fix RSSI_RANGE param values

The extra .0 after the 5 was causing the mission planner to not display
5V in the dropdown even though the value was 5.";['ArduCopter/Parameters.pde'];1;4
b552479e31b02a0136c0756e3ec04681d9a976a1;b552479e;copter;copter;typo fix for baro vs inav alt disparity definition;typo fix for baro vs inav alt disparity definition;['ArduCopter/motors.pde', 'ArduCopter/config.h'];2;6
593a97afd693d728b4d4ba21393abca055d77c75;593a97af;library;hal_vrbrain;fixed storage bug in VRBRAIN too;fixed storage bug in VRBRAIN too;['libraries/AP_HAL_VRBRAIN/Storage.cpp'];1;10
d238ff7c5dbeb37657cf5980bcbe29fc2c82ffa2;d238ff7c;library;hal_linux;fixed storage bug in Linux too;fixed storage bug in Linux too;['libraries/AP_HAL_Linux/Storage_FS.cpp', 'libraries/AP_HAL_Linux/Storage_FRAM.cpp'];2;18
5a66ff1ef924b4e40d825b534df309bc7fd7b541;5a66ff1e;library;ac_attcontrol;bug fix for ef target during acro;bug fix for ef target during acro;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;4
12239de00d2595f9bb7d2d7f881a12771a6f24bd;12239de0;library;inertialsensor;fix data_ready return for L3GD20;fix data_ready return for L3GD20;['libraries/AP_InertialSensor/AP_InertialSensor_L3GD20.cpp'];1;2
8a71fdf0921bb7d8910689ff00ec4380484bae43;8a71fdf0;library;hal_linux;minor syntax fix in UARTDriver;"minor syntax fix in UARTDriver

Typo noticed by @hcervino.";['libraries/AP_HAL_Linux/UARTDriver.cpp'];1;2
0a88281a76931ed1389587313d8bbd929bba0772;0a88281a;copter;copter;bug fix to rally point alt;"bug fix to rally point alt

rally point library uses absolute altitudes, we were passing in relative
altitudes which caused the vehicle to climb before heading to the rally
point";['ArduCopter/control_rtl.pde'];1;12
85213dccbf3871a9d659bfaefe03e7c0c3cca9ca;85213dcc;copter;copter;Autotune Fix;Autotune Fix;['ArduCopter/control_autotune.pde'];1;48
90dc9411a57ce6847d8e42c09f782bf1718a0bd8;90dc9411;copter;copter;ACRO Error calculation fix;ACRO Error calculation fix;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;56
4d284a695dc2604cdf02d29338b921eb1fa57cd1;4d284a69;copter;copter;fix for changed AP_Terrain API;fix for changed AP_Terrain API;['ArduCopter/ArduCopter.pde'];1;2
781abc7593b8854ab6ab033fd68cdfeb512dd5e0;781abc75;plane;plane;fix for changed AP_Terrain API;fix for changed AP_Terrain API;['ArduPlane/ArduPlane.pde'];1;12
279aff87f2837807bb03cd36411ab63e4413da99;279aff87;copter;copter;bug fix to land-detector;"bug fix to land-detector

vehicle should become un-landed only when throttle out is above the
get-non-throttle-takeoff value";['ArduCopter/control_land.pde'];1;2
b8f98aba8f2657ee489f26ba97dfcb6f228b8804;b8f98aba;copter;copter;fix baro glitch resolved message in dataflash;"fix baro glitch resolved message in dataflash

Caught by Julien Dubois, thanks!";['ArduCopter/sensors.pde'];1;2
f12d06d76b4b361451a41d73ece15847721f9cb4;f12d06d7;library;dataflash;typo fix in ListAvailableLogs;typo fix in ListAvailableLogs;['libraries/DataFlash/DataFlash_Block.h'];1;2
621cc2b953e40ac18d3a30c9b95d560c922e4b47;621cc2b9;library;mission;bug fix to condition-change-alt;"bug fix to condition-change-alt

Fix contributed by oniondream, thanks!";['libraries/AP_Mission/AP_Mission.cpp'];1;2
71cbcacf50ec76bf3c7c838e6798310e26529b1c;71cbcacf;copter;copter;fix arming tone to sound before arming;"fix arming tone to sound before arming

Also fixed bug in which vehicle could appear to be armed (according to
LEDs) but is not.  This could occur if pilot had raised the throttle
very high during the calibration that happens just before arming.";['ArduCopter/motors.pde'];1;9
e9861de2ac81edf3d08071ef6f95c49dd65dd526;e9861de2;copter;copter;fix to drift's yaw rate;"fix to drift's yaw rate

The ACRO_P parameter needs to be multiplied by the roll and pitch
velocities to calculate the final yaw rate";['ArduCopter/control_drift.pde'];1;2
af28270669d97df8cc9b2c0d8c3369c9cba1b7c9;af282706;copter;copter;bug fix for throttle failsafe;"bug fix for throttle failsafe

Missing bracket could cause throttle failsafe to be triggered even when
disabled or motors disarmed";['ArduCopter/radio.pde'];1;4
2889f5abc4fd6e857e4096511de1f8cf165cb681;2889f5ab;library;ac_attcontrol;Fix feedforward behavior;Fix feedforward behavior;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;105
e24febec1b423d0648da29b5d5b2a83fbd770d33;e24febec;library;tecs;avoid a valgrind bug;avoid a valgrind bug;['libraries/AP_TECS/AP_TECS.cpp'];1;2
2982fc029cf2b0defc5f8286b1c0413df579024a;2982fc02;library;inertialsensor_lsm9ds0;Fix _dump_registers method;Fix _dump_registers method;['libraries/AP_InertialSensor/AP_InertialSensor_LSM9DS0.cpp'];1;18
0fff8df4911c6df292ce99faa4407448626b5139;0fff8df4;library;inertialsensor;fix LSM9DS0 test code;fix LSM9DS0 test code;['libraries/AP_InertialSensor/examples/LSM9DS0/LSM9DS0.pde'];1;1
f11f0d9f2a119fa0d1210d706012fb77f04a2a41;f11f0d9f;library;hal_linux;Fix FRAM code;Fix FRAM code;['libraries/AP_HAL_Linux/SPIDriver.cpp'];1;3
bb5de8a6a186a82d47ba1cc60f974c862e12a07b;bb5de8a6;library;inertialsensor_lsm9ds0;Fix the CS.;Fix the CS.;['libraries/AP_InertialSensor/AP_InertialSensor_LSM9DS0.h', 'libraries/AP_InertialSensor/AP_InertialSensor_LSM9DS0.cpp'];2;41
ad3a3f9366ec14b867e09e30a97d0d83c07326ac;ad3a3f93;library;inertialsensor_mpu6000;Fix the CS.;Fix the CS.;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;6
aa60a89cdaec1b0b4aa19609af4f9ee8dd07b6b1;aa60a89c;library;inertialsensor_mpu9250;Fix SPI CS.;Fix SPI CS.;['libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.cpp'];1;5
70aafa380eb1e23c66668f670cc588e919407bda;70aafa38;library;gps_ublox;fix test to work with AP_HAL_Linux.;"fix test to work with AP_HAL_Linux.

Some libraries were missing.";['libraries/AP_GPS/examples/GPS_UBLOX_passthrough/GPS_UBLOX_passthrough.pde'];1;2
4d79887cc562c849fa8f2807d09b2ec1e27fc54c;4d79887c;library;l3g4200d;fix in the test example provided.;"fix in the test example provided.

The test coded had a call to ""wait_for_sample"" that expected one
argument and 0 where provided.";['libraries/AP_InertialSensor/examples/L3G4200D/L3G4200D.pde'];1;2
f53181ec6629f254bcd755b32fdfec4c40de953a;f53181ec;copter;copter;Acro balance fix;Acro balance fix;['ArduCopter/control_acro.pde'];1;8
fabd7601f06edbae3ee0dd945f0ac59d326779c7;fabd7601;library;gps;Fix dataflash logging bug in SBP driver;Fix dataflash logging bug in SBP driver;['libraries/AP_GPS/AP_GPS_SBP.cpp'];1;4
30a3927ea8f44d49d90490307eedbd4f95cbabe9;30a3927e;library;mount;fix where status_msg() is sent;"fix where status_msg() is sent

send to the channel where the trigger msg was sent from";['libraries/AP_Mount/AP_Mount.h', 'libraries/AP_Mount/AP_Mount.cpp'];2;8
8c48b651751ccdce7db67c02198d6f9f08e9ad00;8c48b651;copter;copter;bug fix to remove home variable;"bug fix to remove home variable

pair programmed with Craig Elder";['ArduCopter/commands.pde'];1;2
a2f54fdf2cbfec46fd332d524f96bbb9c22dc5b3;a2f54fdf;library;ac_wpnav;smooth waypoint by freezing feed-forward and allowing overshoot;"smooth waypoint by freezing feed-forward and allowing overshoot

First part of this fix is freezing the position controller's xy-axis
feed foward as we transition to the new segment.
Second part is work-around for straight line segments in that we allow
the target point to actually overshoot the end of the segment by up to
2m if the segment is a ""fast waypoint"".  Ideally we would instead notice
the waypoint has been completed and take any left over time or distance
and move our target along the track towards the next waypoint but that
would require a much larger change to allow the wpnav lib to hold the
next two waypoints.";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;22
fd9502d3fac231292adb47ee0aa5b12443638899;fd9502d3;copter;copter;Improve surface tracking dynamics;"Improve surface tracking dynamics

This little fix will allow much higher sonar_gain without the
oscillating effect it used to bring.";['ArduCopter/Attitude.pde'];1;4
d554616e86f84ca19b2e54a6f5bb2152b70614af;d554616e;library;epm;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/AP_EPM/AP_EPM.cpp'];1;4
3705c90b8e04bbd15004a6a209bfa05d166a5e1e;3705c90b;library;barometer;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/AP_Baro/AP_Baro_BMP085.cpp', 'libraries/AP_Baro/examples/AP_Baro_MS5611_test/AP_Baro_MS5611_test.pde'];2;4
d70bee9249e116ba07d0e4ef5b4b2fa10a6ae62b;d70bee92;library;ahrs;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.pde'];1;2
0d83d4f4f5ad16c2c65f8a7a8af48a4071f03690;0d83d4f4;library;apm_obc;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/APM_OBC/APM_OBC.h', 'libraries/APM_OBC/APM_OBC.cpp'];2;22
1e2b644b1b1937649032520b6d27e8b70d21ab6e;1e2b644b;plane;plane;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['ArduPlane/system.pde', 'ArduPlane/geofence.pde', 'ArduPlane/compat.h'];3;13
e35c0a578d7e5ef2c8ffa4e71f40023899cee3b2;e35c0a57;rover;rover;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['APMrover2/system.pde', 'APMrover2/compat.h'];2;5
1e2214f8d1de87a3fb10bb984fc129bfa412bdd3;1e2214f8;library;dataflash;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/DataFlash/DataFlash_APM2.cpp', 'libraries/DataFlash/DataFlash_APM1.cpp'];2;6
732cd0e130cc446a1e7fb7808700475e11f61568;732cd0e1;library;relay;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/AP_Relay/AP_Relay.cpp'];1;4
805d79debeeefe2be3cb0998276c5c13da65f3b0;805d79de;library;hal_flymaple;fix for HAL_GPIO_*;fix for HAL_GPIO_*;['libraries/AP_HAL_FLYMAPLE/AnalogSource.cpp', 'libraries/AP_HAL_FLYMAPLE/examples/Scheduler/Scheduler.pde', 'libraries/AP_HAL_FLYMAPLE/examples/Blink/Blink.pde', 'libraries/AP_HAL_FLYMAPLE/examples/Semaphore/Semaphore.pde', 'libraries/AP_HAL_FLYMAPLE/examples/RCPassthroughTest/RCPassthroughTest.pde', 'libraries/AP_HAL_FLYMAPLE/GPIO.cpp', 'libraries/AP_HAL_FLYMAPLE/examples/RCInput/RCInput.pde'];7;24
18a64d17d389c61b7aadca729db52afa6cabe889;18a64d17;library;hal;added HAL_ prefix to GPIO_ defines;"added HAL_ prefix to GPIO_ defines

this fixes a bug caused by GPIO_INPUT and GPIO_OUTPUT already being
defined in NuttX, which caused pinMode() not to setup pins for output
when requested";['libraries/AP_HAL/GPIO.h'];1;12
2b0f142a17c8be783e52547d66dd5a3085ed93cb;2b0f142a;library;ac_poscontrol;fix typo in D-filter definition;fix typo in D-filter definition;['libraries/AC_AttitudeControl/AC_PosControl.h', 'libraries/AC_AttitudeControl/AC_PosControl.cpp'];2;4
cde7d31dadabe1846a422e3c5b9c94d3b0c16700;cde7d31d;library;ac_wpnav;fix divide by zero when origin and dest are same location;fix divide by zero when origin and dest are same location;['libraries/AC_WPNav/AC_WPNav.cpp'];1;5
69ad632e2a0a243a20cc3560047b3574696a5b46;69ad632e;library;gps;correct NAVFILTER parameter description;"correct NAVFILTER parameter description

These corrected values match the GPS_Engine_Setting enum in GPS.h
Thanks to Adolfo R for noticing the issue and providing the fix";['libraries/AP_GPS/AP_GPS.cpp'];1;2
aed5787c1beff82698b44a1a8cd4d58bb5b424b7;aed5787c;library;ac_wpnav;bug fix for loiter init in Hybrid;"bug fix for loiter init in Hybrid

AC_PosControl::init_xy_controller() has been added to PosControl and is
called by init_loiter_target.
Hybrid is currently using set_loiter_target function to init the loiter
controller. So we have to call init_xy_controller() by set_loiter_target
function.
What happens otherwise?
In AC_PosControl::update_xy_controller, we update ""now"" with
now = hal.scheduler->millis()^^
and, as _last_update_xy_ms has not been updated previously by
init_xy_controller(), we just call init_xy_controller().
So, _dt_xy  will be negative and used anyways in all the functions and
PID called by update_xy_controller.
That will avoid at least _accel_target.x/y to be set to 0 but I'm not
sure for the high values, probably an I_term that is not reset and
reached very high value.
Or maybe a cast error somewhere... no clue at all";['libraries/AC_WPNav/AC_WPNav.cpp'];1;7
e1b7e53c046049742ff40a6ddb0308de144fa1f6;e1b7e53c;copter;copter;only acceept Guided waypoints in Guided mode;"only acceept Guided waypoints in Guided mode

Fix #1068. When receiving guided waypoints do not change to GUIDED mode. This serves as a safety precaution for GCS, since they must switch to guided mode before sending the waypoints.";['ArduCopter/commands_logic.pde'];1;7
b99ae63cbbf2a053e683c2748cf1165b0d305faf;b99ae63c;library;hal_linux;more generic fix for scheduler issues in example sketches;"more generic fix for scheduler issues in example sketches

this ensures drivers can run";['libraries/AP_HAL_Linux/AP_HAL_Linux_Main.h'];1;3
0337d44b2e1552b37162501ab4834edbd717dd60;0337d44b;library;navekf;Fix bug causing immediate clearing of diverged status on reset;Fix bug causing immediate clearing of diverged status on reset;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;3
5d20594fa490fff7b2d6ad733bfe2c1934695bf8;5d20594f;library;ac_wpnav;bug fix for loiter and waypoint update rate;"bug fix for loiter and waypoint update rate

Thanks to EmileC for spotting this";['libraries/AC_WPNav/AC_WPNav.h'];1;2
8640e117285b40e7fb6624924d41154bb334e65d;8640e117;copter;copter;bug fix rally point landing target;"bug fix rally point landing target

was drifting toward home by some distance as (0,0,0) was hard-coded in
control_rtl.pde. Fixed, tested in SITL";['ArduCopter/control_rtl.pde'];1;4
6b0d5f9770245f04b4baefbbcc83bddd417b9748;6b0d5f97;library;inertialnav;fix pos error degradation rate;"fix pos error degradation rate

degrate position_error to 10% over 2 seconds (assumes 5hz update rate)
must be *0.7943 instead of 0.7934";['libraries/AP_InertialNav/AP_InertialNav.cpp'];1;4
197d83e32a6952b682f37aac11413a664779c451;197d83e3;copter;copter;bug fix to sport roll pitch control;bug fix to sport roll pitch control;['ArduCopter/control_sport.pde'];1;8
f51478ee1dbd260a2794feb9129b6690449baf47;f51478ee;plane;plane;fixed LOITER_TURNS counter for counter-clockwise loiter;"fixed LOITER_TURNS counter for counter-clockwise loiter

thanks to Iskess for finding this bug!";['ArduPlane/navigation.pde'];1;2
d857427444d8e8ffedd18add3075f370a36be41d;d8574274;copter;copter;disable RALLY points by default;"disable RALLY points by default

This saves 2k of flash which allows the code to fix on the APM1/2";['ArduCopter/APM_Config.h', 'ArduCopter/config.h'];2;4
937e9ea687850be06d7f24aeef194246779956e4;937e9ea6;library;ac_poscontrol;add set_target_to_stopping_point_xy method;"add set_target_to_stopping_point_xy method

Fixed bug in get_stopping_point_xy in which it would update Z-axis
target if vehicle was moving less than 10cm/s horizontally";['libraries/AC_AttitudeControl/AC_PosControl.h', 'libraries/AC_AttitudeControl/AC_PosControl.cpp'];2;18
5b3438850da728be000e193ab3cb2a61820d33ee;5b343885;copter;copter;fix typo in Log_Write_Baro;"fix typo in Log_Write_Baro

Log_Write_Baro should be an empty function when logging is disabled
Fix contributed by Jason Short";['ArduCopter/Log.pde'];1;2
114bd56e2ac6b9883aa092465ec860d35780f0ec;114bd56e;library;navekf;Fix display names in parameter list;Fix display names in parameter list;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;24
0bb7b8e93837535c0e7010f7faaeea46baf4cc41;0bb7b8e9;library;gps;Fix bug that causes permanent lag if we miss a message;Fix bug that causes permanent lag if we miss a message;['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h'];2;7
ea64438ef93d0e8e24d797b36d9a84170ce46b3a;ea64438e;copter;copter;RTL ensures heading is back to initial heading;"RTL ensures heading is back to initial heading

This fixes the issue in which a short RTL_LOIT_TIME could cause the
vehicle's heading to be caught between it's heading when it arrived at
home and the initial armed heading.  With this fix it now waits above
home until the timer has run out AND the heading is within 2degrees of
the initial armed heading.";['ArduCopter/control_rtl.pde'];1;13
ad99918fee73b7e1368398aa250f32c7018e776d;ad99918f;library;ac_wpnav;recalc leash lengths if set_horizontal_velocity is called;"recalc leash lengths if set_horizontal_velocity is called

Resolves bug in which do-set-speed allowed reducing the speed during the
mission but not increasing it.
Slow down distance is also recalculated.
Unnecessary call to calc_wp_leash_length removed from
set_spline_origin_and_destination.";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;33
08412391f54171f3696a2248bcbdedbbc06ad02b;08412391;plane;plane;fixed a bug when switching to another mode from auto takeoff;"fixed a bug when switching to another mode from auto takeoff

when you exit auto and a takeoff is still in progress the flight stage
was not updated, which led to the throttle staying at maximum

Many thanks to Marco for finding this!";['ArduPlane/ArduPlane.pde'];1;2
ecc8e45eda911475a4287f92260b1336f3ad2174;ecc8e45e;library;navekf;Fix bug in position reset logic;Fix bug in position reset logic;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;47
d745060c802771501c69f84b0583e5fe6ece1fc6;d745060c;copter;copter;fix Hybrid flight mode in Parameter description;fix Hybrid flight mode in Parameter description;['ArduCopter/Parameters.pde'];1;16
b3e8112d24435bd99c0c07b5e6d90b4965bccf6d;b3e8112d;copter;copter;Hybrid fix wind_comp time constant;"Hybrid fix wind_comp time constant

Corrected timer init values and wind_comp time constant to get the best
behaviour

Check if wider deadband required (current is 30).
We were using a comparison to a 70-100 cdeg deadband in our initial
code. The deadband was there to avoid unwanted switches in case of
inaccurate fingers/radio

Adjusted timers to 100/400Hz

I_term does not init when in hybrid loiter";['ArduCopter/control_hybrid.pde'];1;65
559a258ede0d6d86ed7c4507107dd27c02f4af18;559a258e;library;ac_wpnav;bug fix to limit target point from moving beyond leash;"bug fix to limit target point from moving beyond leash

Also pull Z-axis acceleration from position controller instead of using
#define";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;56
6f6c9e258564868b5dc6600c39aebbfe36c31aa0;6f6c9e25;library;ac_poscontrol;bug fix to vertical speed limit;"bug fix to vertical speed limit

Vehicle was not reaching target climb or descent rate because of
incorrectly defaulted acceleration";['libraries/AC_AttitudeControl/AC_PosControl.h', 'libraries/AC_AttitudeControl/AC_PosControl.cpp'];2;31
b9845047f4ed44326ef3b2ebf6fd9f8c4c8e0997;b9845047;copter;copter;bug fix AP_Rally param directory;bug fix AP_Rally param directory;['ArduCopter/Parameters.pde'];1;2
817c893f2124be9038f407b930180c88a144a541;817c893f;copter;copter;bug fix for conditional_distance command;"bug fix for conditional_distance command

Due to a race condition, the wp_distance was not being updated before
the conditional_distance";['ArduCopter/commands_logic.pde', 'ArduCopter/navigation.pde'];2;48
f29ad3a2e0908930fe3f62644349baa3c8511dbe;f29ad3a2;copter;copter;bug fix for when WP_YAW_BEHAVIOR is 0;bug fix for when WP_YAW_BEHAVIOR is 0;['ArduCopter/control_auto.pde'];1;4
c53a0fcfd91bbc4bfb8c3c08ec022f260dc1ecd8;c53a0fcf;copter;copter;conditional yaw fix;"conditional yaw fix

waypoint command was setting auto_yaw_mode when it was run after the
do-cmd
yaw_look_at_heading was being set to current heading which was
overwriting the caller's desired heading";['ArduCopter/control_auto.pde', 'ArduCopter/commands_logic.pde'];2;12
b9a8ef3b513ae16b9f92208ecf1479b95464e095;b9a8ef3b;library;apm_control;fixed a bug in autotune servo saturation check;"fixed a bug in autotune servo saturation check

its in degrees not centi-degrees";['libraries/APM_Control/AP_AutoTune.cpp', 'libraries/APM_Control/AP_AutoTune.h'];2;60
7dda8afd609c25a21557180c578c56d699499c24;7dda8afd;copter;copter;Fixed GPS_ok() status checking;"Fixed GPS_ok() status checking

Fixed the GPS_ok() so that TRUE is returned in the cases of DGPS and Assisted GPS fixes, not just 3D fix.";['ArduCopter/system.pde'];1;2
aabcc2bb35c775179f124cfd40e381b4f9f0bb99;aabcc2bb;plane;plane;fixed a bug in PWM based throttle failsafe;"fixed a bug in PWM based throttle failsafe

many thanks to Sam Tabor for finding this bug!";['ArduPlane/radio.pde'];1;5
3fe94868685ffb6e70ee733e227e2a2c22109d4f;3fe94868;plane;plane;fix auto doc unit on GROUND_STEER_DPS;fix auto doc unit on GROUND_STEER_DPS;['ArduPlane/Parameters.pde'];1;4
552f33b39e77554d1ebf0bc20e8cca5912282d3c;552f33b3;library;gps;Support fix types of DGPS and RTK;Support fix types of DGPS and RTK;['libraries/AP_GPS/AP_GPS.h'];1;4
31082f4ce2f012a36fca74e42167a26de7049482;31082f4c;library;mission;fixed a bug re-entering AUTO;"fixed a bug re-entering AUTO

this fixes a bug found by Marco where we would continue in CRUISE mode
with no waypoint if we re-entered AUTO after a mission reset";['libraries/AP_Mission/AP_Mission.cpp'];1;24
7d5d0d12a283b330ed529b053ca9e0b4e8f117be;7d5d0d12;copter;copter;spline bug fixes;"spline bug fixes

Next waypoint's location must be passed in even if it's a straight
segment.
mission.get_next_nav_cmd's start_index should be the current command +1";['ArduCopter/control_auto.pde', 'ArduCopter/commands_logic.pde'];2;14
ac364c93dd64862adfce742d992c16f0158db27e;ac364c93;copter;copter;bug fix for simple_mode when run at 400hz;"bug fix for simple_mode when run at 400hz

Mark radio frame as consumed so that simple mode does not apply the yaw
correction more than once when run at very high rates (like 400hz on
Pixhawk)";['ArduCopter/ArduCopter.pde'];1;3
ffcac9112015950be7842fbcc6ebf855260d6938;ffcac911;library;antennatracker;update_GPS now sets HOME position and compass.set_initial_location on first good GPS fix;update_GPS now sets HOME position and compass.set_initial_location on first good GPS fix;['Tools/AntennaTracker/sensors.pde'];1;36
71f61c9bef813693946e09bc0d8c6e8e3d4e3eeb;71f61c9b;copter;copter;fix typo to show ATUN FMT in dataflash logs;fix typo to show ATUN FMT in dataflash logs;['ArduCopter/Log.pde'];1;2
df5c874f73ffae394b79512a039377d757d4be5d;df5c874f;rover;rover;fix to support uploading partial missions;fix to support uploading partial missions;['APMrover2/GCS_Mavlink.pde'];1;10
48329c1bba5d481dff8149bb7939f928ed49467c;48329c1b;library;mission;bug fix for loading consecutive do-cmds;"bug fix for loading consecutive do-cmds

The verify step was not being run for the 2nd consecutive do-command in
a mission list";['libraries/AP_Mission/AP_Mission.cpp'];1;1
982ce56d2b2c909103d9938cb5a45fb1203f186d;982ce56d;plane;plane;bug fix to set_current_cmd;"bug fix to set_current_cmd

When set_current_cmd mavlink message is received, resume mission only if
the mission has completed.
Stop mission when vehicle leaves AUTO mode.";['ArduPlane/system.pde', 'ArduPlane/GCS_Mavlink.pde'];2;29
266a1ce9af88ffd868ab2b288fb88c51d617f299;266a1ce9;library;mission;bug fix set_current_cmd;"bug fix set_current_cmd

If mission had completed desired command index was ignored";['libraries/AP_Mission/AP_Mission.cpp'];1;4
27969175d91f291d2d85687f80a6d4689ebcfd02;27969175;plane;plane;bug fix to Loiter after mission completes;bug fix to Loiter after mission completes;['ArduPlane/commands_process.pde'];1;10
802ab79c84912c4ea3e77dcf188e284b406168c4;802ab79c;plane;plane;bug fix for setting flight_stage based on current command;bug fix for setting flight_stage based on current command;['ArduPlane/ArduPlane.pde'];1;11
52a08a5284680a40fb331ea3dcad5d242522ae7e;52a08a52;plane;plane;CMD dataflash logs use uint16 for total and num;"CMD dataflash logs use uint16 for total and num

Also bug fix for Log_Write_Cmd definition when logging disabled";['ArduPlane/Log.pde'];1;12
bc86a5043a5a86a70d1e446231a3eda3ebbe57da;bc86a504;plane;plane;bug fix for relative alt;bug fix for relative alt;['ArduPlane/commands.pde', 'ArduPlane/GCS_Mavlink.pde'];2;10
148fd889bcc8443063ac438cebaf0b906054a052;148fd889;rover;rover;fix for X8R receiver on SBUS in failsafe;"fix for X8R receiver on SBUS in failsafe

the X8R briefly gives PWM of 874 on all channels when the receiver is
setup as ""no pulses"" failsafe handling. This was interpreted as switch
position 0, which was AUTO for me.

This change rejects pulse widths below 900 for mode changes";['APMrover2/control_modes.pde'];1;7
9287e283077757ef964b4a990f67c5987a075323;9287e283;copter;copter;bug fix display of PerfMon log's num long loops;bug fix display of PerfMon log's num long loops;['ArduCopter/perf_info.pde'];1;8
95dd252f29ec27949435fb5b7861e1fffaecd779;95dd252f;plane;plane;pass fix type to gps->setHIL();pass fix type to gps->setHIL();['ArduPlane/GCS_Mavlink.pde'];1;3
2fcbdc405659e6cb4e612c19302f873314f907f0;2fcbdc40;copter;copter;pass fix type to gps->setHIL();pass fix type to gps->setHIL();['ArduCopter/GCS_Mavlink.pde'];1;3
50f89d0aa69f7f4289edd0ca6ce841fe4c787cf3;50f89d0a;rover;rover;pass fix type to gps->setHIL();pass fix type to gps->setHIL();['APMrover2/GCS_Mavlink.pde'];1;3
63874dfffd8de764b430aa012c47a3a7c536bac5;63874dff;library;navekf;set fix type in GPS replay;set fix type in GPS replay;['libraries/AP_NavEKF/examples/AP_NavEKF/AP_NavEKF.pde', 'libraries/AP_NavEKF/examples/AP_NavEKF/LogReader.cpp'];2;6
d7b2a09919339f97e0dc9cf6b9dbd91be83ac83e;d7b2a099;library;gps;added fix type to setHIL;added fix type to setHIL;['libraries/AP_GPS/AP_GPS_HIL.cpp', 'libraries/AP_GPS/GPS.h', 'libraries/AP_GPS/AP_GPS_HIL.h', 'libraries/AP_GPS/GPS.cpp'];4;14
ffbd655ba0280c5925c09658e9fb9528363c89ad;ffbd655b;library;navekf;support dual sensors in log replay, and fix flight altitude;support dual sensors in log replay, and fix flight altitude;['libraries/AP_NavEKF/examples/AP_NavEKF/AP_NavEKF.pde', 'libraries/AP_NavEKF/examples/AP_NavEKF/LogReader.h', 'libraries/AP_NavEKF/examples/AP_NavEKF/LogReader.cpp'];3;22
f222f2ef1e68ec528148de2bf32eb256fa00db4f;f222f2ef;library;dataflash;fixed logging on PX4v1;"fixed logging on PX4v1

large writes break IO, a NuttX bug";['libraries/DataFlash/DataFlash_File.cpp'];1;5
024855014f1622144b262b1f28204ab0685997dd;02485501;library;ac_poscontrol;update _pos_error if it is being limited;"update _pos_error if it is being limited

This fixes a bug that causes 10hz throttle noise.";['libraries/AC_AttitudeControl/AC_PosControl.cpp'];1;2
bf68edd01ca2c66dadfa6bcae2e2c03869d60d22;bf68edd0;copter;copter;bug fix to 50hz logging rate;"bug fix to 50hz logging rate

Caught by Emile Castelnuovo";['ArduCopter/ArduCopter.pde'];1;2
4e1c51aa65bf8a7ef79434f11ea88da305df6a1f;4e1c51aa;copter;copter;bug to disarm at end of mission;bug to disarm at end of mission;['ArduCopter/commands_process.pde'];1;10
d277b6cabd1ad93f78a67d6f765fa20f0010cc59;d277b6ca;library;ac_attcontrol;fix @Units parameter descriptions;fix @Units parameter descriptions;['libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp', 'libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];2;18
6af705d4554defc27aa475dab99f918b26de3ce1;6af705d4;library;ac_circle;bug fix for pos target when radius is zero;bug fix for pos target when radius is zero;['libraries/AC_WPNav/AC_Circle.h', 'libraries/AC_WPNav/AC_Circle.cpp'];2;20
6618bdae673a923cdc763d5d98f39c347ea04fa4;6618bdae;library;dataflash;periodically use lseek to avoid NuttX seek bug;periodically use lseek to avoid NuttX seek bug;['libraries/DataFlash/DataFlash_File.cpp'];1;7
bb715424eeff17ca56476257887a969de93bb64c;bb715424;library;barometer;fix BMP085 example sketch;fix BMP085 example sketch;['libraries/AP_Baro/examples/AP_Baro_BMP085_test/AP_Baro_BMP085_test.pde'];1;6
28fb5e364b95e8b9c8243687c328dea3a6598d26;28fb5e36;library;navekf;Fixed bug in pos/vel/hgt reset on timout;Fixed bug in pos/vel/hgt reset on timout;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;3
128f71157d2019d0aa7e17856d455f5784caecd8;128f7115;library;navekf;Fixed bug in pre GPS fix updates;Fixed bug in pre GPS fix updates;['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;77
b6b0c2a489ce145a368302cb7b48ed440c67f694;b6b0c2a4;library;navekf;fixed bug in flag reset for hgt fusion;fixed bug in flag reset for hgt fusion;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;1
f9aae1b90b2405a2638411c775e46fbbc1f2dee2;f9aae1b9;library;navekf;fixed bug in variance constraint code;fixed bug in variance constraint code;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;18
c87a5aaf3470a2476de8644adc3eed25f5c1b240;c87a5aaf;library;navekf;added PositionReset public function to fix pre-arm loss of solution;added PositionReset public function to fix pre-arm loss of solution;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;1
e69eea308613b13307e12f555729585270fffddc;e69eea30;library;navekf;Bug fix in covariance error correction;Bug fix in covariance error correction;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;2
43dc9bc05559f8af413d417eece127957694b006;43dc9bc0;library;navekf;Added improved covariance matrix error fix;Added improved covariance matrix error fix;['libraries/AP_NavEKF/AP_NavEKF.cpp'];1;13
c28e89e4b7314cad7f496d8538cda3d2b0897d34;c28e89e4;library;navekf;bug fixes for height fusion and covariance initialisation;bug fixes for height fusion and covariance initialisation;['libraries/AP_NavEKF/examples/AP_NavEKF/AP_NavEKF.pde', 'libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp', 'libraries/AP_NavEKF/examples/AP_NavEKF/pitch.gnu', 'libraries/AP_NavEKF/examples/AP_NavEKF/roll.gnu'];5;126
163cfd839d5eb1a77da99e0aa98519a0e3ef7838;163cfd83;library;navekf;enable airspeed and fix getLLH();enable airspeed and fix getLLH();['libraries/AP_NavEKF/AP_NavEKF.h', 'libraries/AP_NavEKF/AP_NavEKF.cpp'];2;18
006cf58b2dfe78661c3395cabc414285b8dc702d;006cf58b;copter;copter;fix merge error for g.angle_max;fix merge error for g.angle_max;['ArduCopter/motors.pde'];1;2
aa79e22ce0c824dec3d9f93764a719bbc46bd047;aa79e22c;library;drift;bug fix for throttle;bug fix for throttle;['ArduCopter/control_drift.pde'];1;7
5f89e9e746343b8e9a6ad7bbff82bf1d8c980dc5;5f89e9e7;library;ac_attcontrol;bug fix to yaw rate limit;bug fix to yaw rate limit;['libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];1;2
1648ecc6e51fe4625bbf5a7f8a876e6742a6b440;1648ecc6;copter;copter;bug fix for heli_control_acro throttle;bug fix for heli_control_acro throttle;['ArduCopter/heli_control_acro.pde'];1;8
c73c9f03a536fdd309ee32404ee6eb8ad433ea71;c73c9f03;copter;copter;bug fix for control_acro throttle;bug fix for control_acro throttle;['ArduCopter/control_acro.pde'];1;8
212ced63f6f35bbc086fd378215d5b63723806da;212ced63;copter;copter;bug fix for do_loiter_time alt target;bug fix for do_loiter_time alt target;['ArduCopter/commands_logic.pde'];1;14
fc427967ae026d44684e941be4757bf5eb292909;fc427967;library;ac_wpnav;set wp origin to horiz and vert stopping point;"set wp origin to horiz and vert stopping point

Also bug fix to set pos_control's down speed as a negative number";['libraries/AC_WPNav/AC_WPNav.cpp'];1;3
1b714defcc782557933fcd8837324bf7dd417a32;1b714def;copter;copter;move auto to control_auto.pde and fix yaw;move auto to control_auto.pde and fix yaw;['ArduCopter/control_stabilize.pde', 'ArduCopter/control_auto.pde'];2;300
ba3ba9e157990a8d9d8a867583e35420038b473c;ba3ba9e1;library;ac_attcontrol;bug fix for yaw target handling;bug fix for yaw target handling;['libraries/AC_AttitudeControl/AC_AttitudeControl.h', 'libraries/AC_AttitudeControl/AC_AttitudeControl.cpp'];2;5
49367c5a301c289eb606e3326f8f7d178bf384a7;49367c5a;copter;copter;GCS.h include fix;GCS.h include fix;['ArduCopter/ArduCopter.pde'];1;2
e1bf4af1b8b402e1f80f203c684dc51b9ea0cb58;e1bf4af1;copter;copter;bug fix to set angle_boost in stab mode;bug fix to set angle_boost in stab mode;['ArduCopter/control_stabilize.pde'];1;6
0431b7e1d45296db1d37e82fba38e3c38edbd48c;0431b7e1;copter;copter;bug fix for stabilize_run's yaw control;bug fix for stabilize_run's yaw control;['ArduCopter/control_stabilize.pde'];1;19
63910bf8cd6d36d7db4bb10aac0bc3e35a0c6656;63910bf8;library;dataflash;work around a NuttX bug;"work around a NuttX bug

the seek offset of files can get badly mucked up when it crosses
cluster boundaries. We need to fix this in NuttX, but meanwhile this
works around the bug. It seems that doing a lseek(fd, 0, SEEK_CUR)
fixes the seek offset in the file.

The bug seems to first happen at an offset of 315392. It also
doesn't happen every time - it is more likely to happen on the first
log download after booting";['libraries/DataFlash/DataFlash_File.cpp'];1;19
81c5edbdb5dd1bf429addcf0177000f6678f6bd7;81c5edbd;gcs;gcs_mavlink;fixed a log download bug for repeated downloads;"fixed a log download bug for repeated downloads

we were not resetting the offset to 0 correctly";['libraries/GCS_MAVLink/GCS_Logs.cpp'];1;2
262d384025636394cee389d2febad5b99699f3ec;262d3840;library;coax;Yaw fix;"Yaw fix

Was using _rc_yaw servo_out instead of pwm_out to modify motors.
Corrected and less touchy in Yaw";['libraries/AP_Motors/AP_MotorsCoax.cpp'];1;7
91b78c0cbebc1f3962fc45c4cd30fd3b4eeb96e1;91b78c0c;copter;copter;bug fix for duplicate single and coax params;bug fix for duplicate single and coax params;['ArduCopter/Parameters.pde'];1;24
a963ec7e3bc940429d95599516f573acb9118810;a963ec7e;library;math;bug fix to wrap_360 and wrap_180;"bug fix to wrap_360 and wrap_180

angles above 720deg and below 3200deg might not have been properly
wrapped.
wrap_360_cd could return 36000 when really this should be wrapped back
to zero.";['libraries/AP_Math/location.cpp'];1;8
311bba14194cb98b02f763d785de055126266395;311bba14;copter;copter;landing_complete stays true until thr is raised;"landing_complete stays true until thr is raised

The idea of the fix is we can't leave land while throttle is 0 and then
we ignore the baro and it's disturbances.";['ArduCopter/Attitude.pde'];1;2
a6078cd281998acc941803a27b93698215203826;a6078cd2;copter;copter;Fix SYSID ranges to support GCS display of param correctly;Fix SYSID ranges to support GCS display of param correctly;['ArduCopter/Parameters.pde'];1;2
2bfcb93cb15086ebec90570d2af50524133a973f;2bfcb93c;rover;rover;Fix SYSID ranges to support GCS display of param correctly;Fix SYSID ranges to support GCS display of param correctly;['APMrover2/Parameters.pde'];1;2
d362bb45fdb7c0a94515d84b134c7957c317cf77;d362bb45;copter;copter;move sensor init from setup(to init_ardupilot;"move sensor init from setup(to init_ardupilot

This fixes a bug in which the external led was not being disabled if the
EPM was enabled (they share pins).  The cause of the problem was the EPM
was being initialised before it's parameters had been loaded";['ArduCopter/system.pde', 'ArduCopter/ArduCopter.pde'];2;68
4f242aedec3e3f31a46ab2e6a0f13c854facb777;4f242aed;plane;plane;fixed a bug where mode would not revert on geo-fence disable;"fixed a bug where mode would not revert on geo-fence disable

the mode would not revert if the switch was in position 0";['ArduPlane/control_modes.pde', 'ArduPlane/ArduPlane.pde', 'ArduPlane/geofence.pde'];3;15
782ce54a5c7a0807bb615f0152e1ea53a1d080ac;782ce54a;library;tradheli;Fix for yaw offset switching.  Yaw Offset should switch on and off with the main motor, not waiting until the rotor has reached full speed.;Fix for yaw offset switching.  Yaw Offset should switch on and off with the main motor, not waiting until the rotor has reached full speed.;['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;2
279d515e59839cda0de115acb4e172e784a0d7c7;279d515e;copter;copter;Y6 new motor factor fix;Y6 new motor factor fix;['libraries/AP_Motors/AP_MotorsY6.cpp'];1;12
c4df3ea18780e15fc1f8e88186d08d79799e9488;c4df3ea1;library;fence;parameter display name fix;parameter display name fix;['libraries/AC_Fence/AC_Fence.cpp'];1;4
c32d77c62607784ae97311016f36c22aaff0df1e;c32d77c6;copter;copter;fix @Group for SingleCopter;fix @Group for SingleCopter;['ArduCopter/Parameters.pde'];1;2
fe6ad3579cc3a2bcea832a6b2848fff120fab1ca;fe6ad357;copter;copter;log GPS messages even when no fix;log GPS messages even when no fix;['ArduCopter/ArduCopter.pde'];1;49
b47cd6d5be112c585de71c6e004e4e6859d3d7a3;b47cd6d5;copter;copter;fix SingleCopter motor parameters link;fix SingleCopter motor parameters link;['ArduCopter/Parameters.pde'];1;2
afbb1995442d025b094c4ebb7faa85e4fce413a1;afbb1995;library;tradheli;remove slash from parameter description;"remove slash from parameter description

This may fix the issue in which the parameter descriptions are appearing
twice on the arducopter-parameters wiki page";['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;2
5cc877294761544d1f054e51fd8a743d2f88c964;5cc87729;copter;copter;bug fix to Tricopter motor logging;"bug fix to Tricopter motor logging

Fourth motor taken from yaw channel's radio_out instead of random
location in memory";['ArduCopter/Log.pde'];1;2
9ac051c56de606a254a0508d017979b5a191803c;9ac051c5;library;tradheli;BugFix to ColYaw;"BugFix to ColYaw

Credit to Jolyon Saunders for finding this bug.";['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;2
633e91b7d46e10b2d1e7e1e5c6e8f7d696cc9108;633e91b7;copter;copter;initialise roll, pitch, yaw modes to stabilize;"initialise roll, pitch, yaw modes to stabilize

This fixes a bug in which the stabilize throttle controller would be
non-tilt compensated until the user switched to another flight mode and
back again";['ArduCopter/system.pde', 'ArduCopter/config.h', 'ArduCopter/ArduCopter.pde'];3;16
e23e4bc7d8eaf8dc43122f6d512fa042b18f89fd;e23e4bc7;library;tradheli;Bug Fix on Dynamic Flight / TakeOff Detector;Bug Fix on Dynamic Flight / TakeOff Detector;['ArduCopter/ArduCopter.pde'];1;15
f5b1114aea54e8bf5ada99fb11dd0f05bebab3ac;f5b1114a;copter;copter;range check pilot requested lean angles;"range check pilot requested lean angles

This fixes a bug uncovered by MHA in which the receiver output 900 pwm
for roll and pitch to the APM which was interpreted as requesting an 80
deg lean angle which the copter then attempted to do!";['ArduCopter/Attitude.pde'];1;4
f29f7d9777ce75230dea752217483a6275de8a30;f29f7d97;copter;copter;bug fix to take-off in Loiter and AltHold;"bug fix to take-off in Loiter and AltHold

Always set the target altitude after take-off to be current altitude +
20cm.  This resolves a bug in which the target altitude could end up
being a couple of meters higher than the current altitude if the user
entered Loiter / Alt Hold mode before inertial nav altitude estimate had
settled.";['ArduCopter/Attitude.pde'];1;5
a7931b1581cd935d2b2dfbd80258359500af15e6;a7931b15;library;ahrs;fixed wrapping bug in GPS based heading error;"fixed wrapping bug in GPS based heading error

this bug could cause the GPS based yaw to use an expensive reset far
too often";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;2
1c7d9f43c1faae52d1bc8b9608db16284f78e3cc;1c7d9f43;library;inertialnav;fix for get_velocity_xy;"fix for get_velocity_xy

forgot to sq";['libraries/AP_InertialNav/AP_InertialNav.cpp'];1;2
2a82d1b0b0555d7e3a8e697680c320374f951e22;2a82d1b0;copter;copter;CH7 SaveWP fix corner case;"CH7 SaveWP fix corner case

If the user is on the ground and flips CH7, do nothing instead of recording a bad takeoff altitude. Do another check to avoid a land right after a takeoff.";['ArduCopter/control_modes.pde'];1;33
e23135faa1fab89822c569253fa3b5e2ce7034fc;e23135fa;library;inertialnav;bug fix for gps delay handling;bug fix for gps delay handling;['libraries/AP_InertialNav/AP_InertialNav.cpp'];1;6
5af51140a961e2c2cf94a43137aec72bdf89d50d;5af51140;library;hal_linux;fixed scheduler initialisation bug in Linux HAL as well;fixed scheduler initialisation bug in Linux HAL as well;['libraries/AP_HAL_Linux/Scheduler.cpp'];1;9
8ea3e686202b3614c094bbb4fc28fec419be9192;8ea3e686;copter;copter;bug fix for loading missions while armed;bug fix for loading missions while armed;['ArduCopter/GCS_Mavlink.pde'];1;4
6f3458eb253f8c6aa5b8b09a8dfe064a4e885eb4;6f3458eb;plane;plane;fixed setting of waypoint when not in AUTO;"fixed setting of waypoint when not in AUTO

this fixes a bug where the next waypoint is set incorrectly if set via
MAVLink when not in AUTO";['ArduPlane/commands_process.pde'];1;13
fb49cd82c11c770eade78615032e421ecab4e13d;fb49cd82;copter;copter;add LAND to aux switch;"add LAND to aux switch

Fix aux switch AUTO and RTL so they resets flight mode if still in those
modes when switch brought low";['ArduCopter/defines.h', 'ArduCopter/Parameters.pde', 'ArduCopter/control_modes.pde'];3;25
78acea820fbcdd26ad442f5ff3856d26f513d545;78acea82;copter;copter;fix  symmetry in stability patch for Tricopters;"fix  symmetry in stability patch for Tricopters

Removes the ""Increase opposing motors by 1/2 the overage of the high
motor"" logic and merely moves all 3 motors down by the same amount if
one is over out_max. This eliminates the asymmetric scaling of
the previous logic when more than one motor is over out_max. This
resolves #537";['libraries/AP_Motors/AP_MotorsTri.cpp'];1;12
5499c6ea6d8dea298a85c9cdd152d1d3ad77de1f;5499c6ea;copter;copter;autotune bug fix for starting autotune;"autotune bug fix for starting autotune

log completion to dataflash";['ArduCopter/auto_tune.pde', 'ArduCopter/ArduCopter.pde'];2;20
4036f50fc2572203956251f45ced42f9de02fcc9;4036f50f;copter;copter;bug fix to convert old batt params to BATT_ lib;bug fix to convert old batt params to BATT_ lib;['ArduCopter/Parameters.pde'];1;2
6c0cb5f84dade81a10d89fd68d0e606022fadb5d;6c0cb5f8;library;autotune;bug fix and GCS messages;bug fix and GCS messages;['ArduCopter/auto_tune.pde', 'ArduCopter/control_modes.pde', 'ArduCopter/defines.h', 'ArduCopter/ArduCopter.pde'];4;114
f13b45467f5e16d99bf8b1e622b3b5f6cc88066c;f13b4546;copter;copter;autotune bug fix for restarting tuning from suspended state;autotune bug fix for restarting tuning from suspended state;['ArduCopter/auto_tune.pde'];1;6
34770fe6bf5df246088dffd62bafbec64d87c635;34770fe6;library;hal_avr;fixed SPI bus speed switching;"fixed SPI bus speed switching

this fixes a bug in changing the bus speed between devices";['libraries/AP_HAL_AVR/SPIDevice_SPI3.cpp', 'libraries/AP_HAL_AVR/SPIDevice_SPI0.cpp', 'libraries/AP_HAL_AVR/SPIDevice_SPI2.cpp'];3;20
25d3e5b7e9898189a7b93f949013c791720c44d7;25d3e5b7;library;gps;changed fake GPS fix to have a latitude/longitude;"changed fake GPS fix to have a latitude/longitude

Pair-Programmed-With: Randy Mackay <rmackay9@yahoo.com>";['libraries/AP_GPS/AP_GPS_UBLOX.cpp'];1;6
c90c1b9998e99da58259d55fffc1c2c8ad6ccc39;c90c1b99;library;inertialsensor;Improvements to Flymaple sensors;"Improvements to Flymaple sensors

Fix a bug that caused hang after 71 minutes. Use I2CDriver semaphore.
Remove test for in_accumulate: not needed.";['libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.h', 'libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.cpp'];2;29
68a7cac9a2ef2b604660f17c5c694d34a68095bb;68a7cac9;library;hal_flymaple;Improvements to FLYMAPLEStorage;"Improvements to FLYMAPLEStorage

Fix a number of bugs and expand storage to an emulated 4kb, as needed by AP.";['libraries/AP_HAL_FLYMAPLE/examples/Storage/Storage.pde', 'libraries/AP_HAL_FLYMAPLE/Storage.cpp'];2;100
29707f4401d570a614abe9beb610295b62d9a5b6;29707f44;library;hal_flymaple;Modest speed improvements to I2CDriver;"Modest speed improvements to I2CDriver

Can now achieve about 285kHz using bitbanging.
Proper low-level hardware I2C support has been written and stashed,
but has to wait until a bug in libmaple is addressed.
Ref: http://forums.leaflabs.com/topic.php?id=13458";['libraries/AP_HAL_FLYMAPLE/I2CDriver.cpp'];1;3
34f7f88190b6513ab114fc6ec6ef55db319295a5;34f7f881;library;gps;check for corret GPS solution rates in flight and fix;"check for corret GPS solution rates in flight and fix

if the GPS is giving us data at less than 300ms intervals then re-send
the configuration messages to try to kick it into the right rates

Pair-Programmed-With: Randy Mackay <rmackay9@yahoo.com>";['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h'];2;85
f1309ed63ff063063c9a854eec3924b2ff681048;f1309ed6;library;battmonitor;bug fix for current_total_mah;bug fix for current_total_mah;['libraries/AP_BattMonitor/AP_BattMonitor.cpp', 'libraries/AP_BattMonitor/AP_BattMonitor.h'];2;4
14636e1cdffbf626e67e32c793e6f0e9eb5fb4e9;14636e1c;library;inertialsensor;changed num_samples_available() to sample_available();"changed num_samples_available() to sample_available()

this makes the interface clearer. It also fixes a 3D accel cal bug.";['libraries/AP_InertialSensor/examples/MPU6000/MPU6000.pde', 'libraries/AP_InertialSensor/AP_InertialSensor_Stub.h', 'libraries/AP_InertialSensor/AP_InertialSensor.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h', 'libraries/AP_InertialSensor/AP_InertialSensor_PX4.h', 'libraries/AP_InertialSensor/AP_InertialSensor_Oilpan.h', 'libraries/AP_InertialSensor/AP_InertialSensor_Oilpan.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor.h', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/examples/OilPan/OilPan.pde', 'libraries/AP_InertialSensor/AP_InertialSensor_PX4.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.h', 'libraries/AP_InertialSensor/examples/PX4/PX4.pde', 'libraries/AP_InertialSensor/AP_InertialSensor_Stub.cpp'];15;77
b02dbca9d4a2b228da4cc598baccca33f74f864f;b02dbca9;library;inertialsensor;fix orientation of Flymaple sensors;fix orientation of Flymaple sensors;['libraries/AP_InertialSensor/AP_InertialSensor_Flymaple.cpp', 'libraries/AP_HAL_FLYMAPLE/FlymaplePortingNotes.txt'];2;68
55c94b3b41ae4edf4ccfa74ca7645f7fe5f6bd25;55c94b3b;library;gps_glitch;bug fix for enable/disable parameter;bug fix for enable/disable parameter;['libraries/AP_GPS/AP_GPS_Glitch.cpp'];1;1
770b7b590131a770b283d2426960d94ffac442fb;770b7b59;library;inertialsensor;prevent a lockup in MPU6000 driver;"prevent a lockup in MPU6000 driver

thanks to the VRBrain port for noticing this bug.

Failing to get the semaphore is an expected error with the MPU6000, as
we read data both from timer context and mainline code. That means
semaphore conflicts are inevitable. We shouldn't consider them an
error, and shouldn't panic when some arbitrary number of them have
happened since boot.

Instead the wait_for_sample() code checks that we receive new data at
least every 50ms. That is a much safer test.";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;18
54fc00495639dd170b8a1026e85e3988c6a2c124;54fc0049;sitl;sitl;fix sitl timer issues under cygwin;fix sitl timer issues under cygwin;['libraries/AP_HAL_AVR_SITL/Scheduler.h', 'libraries/AP_HAL_AVR_SITL/SITL_State.cpp', 'libraries/AP_HAL_AVR_SITL/Scheduler.cpp'];3;75
feac9d130664e26770dcbf8fc29c8975d1c8c387;feac9d13;library;compass;fixed a bug in the tilt compass calculation;"fixed a bug in the tilt compass calculation

The simplification applied a few months ago was incorrect";['libraries/AP_Compass/Compass.cpp'];1;8
8b79798e8d75a86df713372760a31bcead948b5d;8b79798e;copter;copter;Leonard's sport fix re slow roll;Leonard's sport fix re slow roll;['ArduCopter/Attitude.pde'];1;2
34b11f7be0e4936f74139f6a60b2e1e54022499c;34b11f7b;copter;copter;angle limiter fix for max lean angle;angle limiter fix for max lean angle;['ArduCopter/Attitude.pde'];1;8
c4f11e6c742d8c19779db85fefe517eec0de5987;c4f11e6c;copter;copter;fix longitude_scale() call for new API;"fix longitude_scale() call for new API

Pair-Programmed-With: Brandon Jones <brnjones@gmail.com>";['ArduCopter/commands.pde'];1;2
f3b3e23bbc88a04bc732a6c467397262f357e173;f3b3e23b;library;camera;fix for new AP_Math API;"fix for new AP_Math API

Pair-Programmed-With: Brandon Jones <brnjones@gmail.com>";['libraries/AP_Camera/AP_Camera.cpp'];1;2
6b5ee80b701c36c734a6a25785cf9c8e36aae14e;6b5ee80b;library;inertialnav;fix for new AP_Math API;"fix for new AP_Math API

Pair-Programmed-With: Brandon Jones <brnjones@gmail.com>";['libraries/AP_InertialNav/AP_InertialNav.cpp'];1;2
cf4a74cfb86171fd3ce6813a473036e5f274c45e;cf4a74cf;library;l1_control;fix for new AP_Math API;"fix for new AP_Math API

Pair-Programmed-With: Brandon Jones <brnjones@gmail.com>";['libraries/AP_L1_Control/AP_L1_Control.cpp'];1;8
612ede81f4c21d0a97baae12cdf3427f89aed819;612ede81;library;limits;fix for new AP_Math API;"fix for new AP_Math API

Pair-Programmed-With: Brandon Jones <brnjones@gmail.com>";['libraries/AP_Limits/AP_Limit_Geofence.cpp'];1;2
9672742b42a394ed42f91f6c45557e2e61ebfdc6;9672742b;copter;copter;bug fix to look_ahead_yaw;"bug fix to look_ahead_yaw

Fix received from David Dewey
Was incorrectly using the direction instead of heading when deciding
whether to point forward or not.  Reduced YAW_LOOK_AHEAD_MIN_SPEED to
1m/s because bug meant it was nearly always pointing forward and 10m/s
(the old value) seemed too high";['ArduCopter/Attitude.pde', 'ArduCopter/config.h'];2;4
05248738e2cdff53072ce2a0289e0266495a4e4d;05248738;copter;copter;bug fix for take-off in loiter;bug fix for take-off in loiter;['ArduCopter/navigation.pde', 'ArduCopter/ArduCopter.pde'];2;9
23ea151ca570921060ab5137054ea8386e50447d;23ea151c;library;tradheli;Fix Heli rate controller filter rates.;Fix Heli rate controller filter rates.;['ArduCopter/Attitude.pde', 'ArduCopter/ArduCopter.pde'];2;7
62f3eed4e0d31d07c252600d7ce234a29589ab50;62f3eed4;copter;copter;fix to SPIN_ARMED parameter desciption;fix to SPIN_ARMED parameter desciption;['libraries/AP_Motors/AP_Motors_Class.cpp'];1;2
02b64e259db238d4d3424b7ddb54123fb54adcf3;02b64e25;copter;copter;bug fix for descent during loiter_turns;bug fix for descent during loiter_turns;['ArduCopter/navigation.pde'];1;1
47ab02d68612e4b1668db66539d26455584125c9;47ab02d6;copter;copter;bug fix to ROI to pull target from conditional command queue;bug fix to ROI to pull target from conditional command queue;['ArduCopter/commands_logic.pde', 'ArduCopter/GCS_Mavlink.pde'];2;10
399970e76f87b481d3e5be3ed1d4265c32317619;399970e7;plane;plane;fixed default deadzone for the throttle channel;"fixed default deadzone for the throttle channel

this is the 2nd half of the fix for issue #303";['ArduPlane/radio.pde'];1;2
21859f9364f6b043231d0ac41b1442fa62c18302;21859f93;library;rc_channel;fixed dead_zone for range channels;"fixed dead_zone for range channels

The dead_zone was being used inconsistently, used in PWM space in one
place, and in control output space in another.

The fix required us to move the index number of the RC channel eeprom
value for RCn_DZ, as users will have a throttle deadzone of 3 set in
their eeprom due to a bug that Randy just fixed that caused the value
to always be saved to eeprom. In plane we then need to fix the
deadzone for the throttle to be 30

this fixes issue #303

Thanks to Soren Kuula for spotting this!";['libraries/RC_Channel/RC_Channel.cpp'];1;11
5a40ee7a3803ab17340b0336118bc46efcaa6b09;5a40ee7a;copter;copter;fix to gps present check in mavlink extended status 1 msg;fix to gps present check in mavlink extended status 1 msg;['ArduCopter/GCS_Mavlink.pde'];1;2
1772a62415f35ee58a44efedc5dfaed7b499574e;1772a624;plane;plane;fix to gps present check in mavlink extended status 1 msg;fix to gps present check in mavlink extended status 1 msg;['ArduPlane/GCS_Mavlink.pde'];1;2
ea9ae31a7a7c250f6a4413e8cf7e1f5a83b198cb;ea9ae31a;plane;plane;fixed a bug with altitude drift in FBWB mode;"fixed a bug with altitude drift in FBWB mode

not taking account of deadzone correctly";['ArduPlane/ArduPlane.pde'];1;2
012d7b0c0ad58a4b765bcc8be1a18aaf354dd192;012d7b0c;library;optflow;initialisation fix;"initialisation fix

Thanks to DongFang (aka Soren) for finding the issue and the solution";['libraries/AP_OpticalFlow/AP_OpticalFlow_ADNS3080.cpp', 'libraries/AP_OpticalFlow/AP_OpticalFlow_ADNS3080.h'];2;38
204f6134673f22f6de01befa66ec1792f0ec4715;204f6134;library;wpnav;bug fix to reported distance to target;"bug fix to reported distance to target

This value is for reporting purposes only";['libraries/AC_WPNav/AC_WPNav.cpp'];1;3
518eba0729238d97d6cabf50aa9164209fe7bf59;518eba07;library;wpnav;bug fix to loiter accel calculation;"bug fix to loiter accel calculation

Contribution from Leonard Hall";['libraries/AC_WPNav/AC_WPNav.cpp'];1;20
c4f17b32357a18ca8359e2811d73e9e71b543b96;c4f17b32;library;wpnav;rounding error fix in loiter;"rounding error fix in loiter

Contributed by Leonard Hall";['libraries/AC_WPNav/AC_WPNav.cpp'];1;4
f459d35e3e58bf250f062b5521448e778f6d75ca;f459d35e;copter;copter;roll-pitch fix to allow I to reduce;"roll-pitch fix to allow I to reduce

Contributed by Leonard Hall";['ArduCopter/Attitude.pde'];1;22
7860d06b91a74b7457a0347fb0033adad3017cfe;7860d06b;library;ahrs;typo fix for ORIENTATION param description;typo fix for ORIENTATION param description;['libraries/AP_AHRS/AP_AHRS.cpp'];1;2
40612ed551b1ee6ac54e8de64a2f2a7a7f570fc8;40612ed5;copter;copter;yaw limit fix to allow I to reduce;"yaw limit fix to allow I to reduce

We now allow the I term even if we've hit the yaw limits as long as
updating the I term will reduce it";['ArduCopter/Attitude.pde'];1;12
073e2c9f155f5ef5994277bcb05e950233e5d8ad;073e2c9f;library;acmotors;bug fix to yaw limit;bug fix to yaw limit;['libraries/AP_Motors/AP_MotorsMatrix.cpp'];1;25
b21bc5a85a4780582afd10fc7f2aa0aa852543a1;b21bc5a8;copter;copter;Fixed bug in battery current integration;Fixed bug in battery current integration;['ArduCopter/sensors.pde'];1;11
24e1f074d0dce5e47b4f7bb51720cf8e8aafe1ed;24e1f074;copter;copter;Fence missing GPS 3D fix check;"Fence missing GPS 3D fix check

Fence was missing GPS 3D fix check before selecting recovery decision.";['ArduCopter/fence.pde'];1;2
facd8fc89ffc4a5b3aa753884c7406b2927da2c1;facd8fc8;copter;copter;calculate home position and bearing when we have 2D Fix;calculate home position and bearing when we have 2D Fix;['ArduCopter/navigation.pde'];1;2
f1bedc70ac77d3875b2553bd9fae20b7687bfb53;f1bedc70;copter;copter;SuperSimple mode bug;"SuperSimple mode bug

SuperSimple bearing was updated without checking for GPS 3D Fix availability.";['ArduCopter/navigation.pde'];1;2
6bac13f9e2c5c6831fef53a1dd34fa6c24cb46ca;6bac13f9;plane;plane;fixed RCMAP_* to fix channel ranges for no-reboot changes;fixed RCMAP_* to fix channel ranges for no-reboot changes;['ArduPlane/radio.pde'];1;12
9f59f2724fef29c7538b96762e5f21868700eae7;9f59f272;copter;copter;bug fix for take-off when throttle is zero;"bug fix for take-off when throttle is zero

Verify_takeoff was always returning false if throttle was zero.  The
pilot should be able to move their throttle back to zero immediately
after initiating the mission";['ArduCopter/commands_logic.pde'];1;6
26b7de668abbb824ccb9c27c146f2f387e41239e;26b7de66;library;param;fixed parameter save bug;"fixed parameter save bug

This bug affected parameters where the defaults are overridden in the
object constructor. For example, a PID object may have a default value
for PID_D of 0.0, but have a constructor based default of 0.2. If the
user tries to set the value to exactly 0.0, then the set wouldn't happen,
as the value matches the value in the object default var_info[]
table. 

This change ensures we force a save to eeprom if the value is changing
from the current value, regardless of the var_info[] default.

Thanks to Tom Coyle for finding this bug!";['libraries/AP_Param/AP_Param.h', 'libraries/AP_Param/AP_Param.cpp'];2;16
0460147a15cd6add8e693825a7a053a5a7b0c3cc;0460147a;copter;copter;guided mode yaw fix;"guided mode yaw fix

Nose of copter now points at next guided point if it is more than 10m
away";['ArduCopter/commands_logic.pde', 'ArduCopter/GCS_Mavlink.pde'];2;36
d203f0295bf06ad23f37be4293a7c598eb02db14;d203f029;copter;copter;bug fix for vertical speed during missions;bug fix for vertical speed during missions;['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;39
d1791bab76525414717051a26d0ed764846797d3;d1791bab;copter;copter;fix barometer cli test;fix barometer cli test;['ArduCopter/system.pde', 'ArduCopter/sensors.pde', 'ArduCopter/test.pde'];3;35
d10e3bc75f21f5ebe0edf43c0644dec6916b01a9;d10e3bc7;copter;copter;send_text_P bug fix for short messages;send_text_P bug fix for short messages;['ArduCopter/GCS_Mavlink.pde'];1;3
31e3f3293070dea8a1c0038d3eb9800ec90c53e3;31e3f329;rover;rover;send_text_P bug fix for short messages;send_text_P bug fix for short messages;['APMrover2/GCS_Mavlink.pde'];1;3
c7961a72fc8bd5dd1df26ea77d706b3538422de4;c7961a72;plane;plane;send_text_P bug fix for short messages;send_text_P bug fix for short messages;['ArduPlane/GCS_Mavlink.pde'];1;3
e843bf3dfde4ee83c2e7fb7e3bf16c4f0658b754;e843bf3d;copter;copter;bug fix for POSITION mode throttle;"bug fix for POSITION mode throttle

Was using alt-hold throttle controller instead of manual throttle
controller";['ArduCopter/config.h'];1;2
55235630b6d96d475c8a355350bbff24e5204478;55235630;copter;copter;bug fix for slow loiter repositioning;bug fix for slow loiter repositioning;['libraries/AC_WPNav/AC_WPNav.cpp'];1;2
429f9004608f2fda80e63fddc54baeb3af4b720c;429f9004;copter;copter;bug fix for RTL bearing;"bug fix for RTL bearing

Also smooth RTL's initial climb stage by projecting stopping point";['ArduCopter/commands_logic.pde'];1;20
1b52ee211a4b44c04af5091593eb84f2e8ab16db;1b52ee21;copter;copter;bug fix for RTL yaw control;"bug fix for RTL yaw control

Nose was only pointing home if your initial altitude was above the
RTL_ALT";['ArduCopter/commands_logic.pde'];1;4
ed5ddfd9db7f4d55239b91c6f0a1424e2538ffea;ed5ddfd9;library;wpnav;initialise desired roll, pitch;"initialise desired roll, pitch

bug-fix to resolve 1/10th second twitch when loiter or waypoint
controller are first engaged";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp', 'ArduCopter/ArduCopter.pde'];3;18
d0fb332e9f94b5f3336bb8161b4e78581a7746b6;d0fb332e;copter;copter;init_rc_out in cli's compassmot setup;"init_rc_out in cli's compassmot setup

Bug fix to allow cli's compass motor compensation to be run from the
mission planner's terminal window";['ArduCopter/setup.pde'];1;2
4704b729c2cf93284a29a9b343ea6cfbd0eb8f96;4704b729;library;wpnav;reduce max acceleration to 2.5m/s;"reduce max acceleration to 2.5m/s

Also includes bug fix to ramp up of speed of intermediate point";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;7
328d900647aae1dbedc3ed73fb6462dedf0b7937;328d9006;library;wpnav;flexible loiter speed;"flexible loiter speed

Also includes bug fix to allow speeds > 10m/s during missions";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;142
6f1cee640633b3ff44e45d41397475f16416a0c5;6f1cee64;library;ahrs;fixed position estimate with 2D fix or low satellite count;"fixed position estimate with 2D fix or low satellite count

we should still use the GPS for position fixes when we have a low
number of satellites, but we should stop using it for velocity
estimates and attitude correction.";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;24
fdd509a7c1657893d51c91167b8125b5f18a31f0;fdd509a7;plane;plane;move baro init earlier in startup;"move baro init earlier in startup

this ensures it is initialised when CLI takeover by MP happens

Thanks to Prof Avi Levi for reporting this bug";['ArduPlane/system.pde'];1;5
36634265503ad4973b1ab4de6f4bb335a192e12f;36634265;plane;plane;Fixed bug in groundspeed_undershoot that could cause a fly-away in windy conditions.;"Fixed bug in groundspeed_undershoot that could cause a fly-away in windy conditions.

Use the component of velocity in the forward direction rather than the magnitude";['ArduPlane/navigation.pde'];1;11
66150a41fe2d0b229fdb64ef89e373dea2434fe3;66150a41;library;vartest;fix for AP_Baro_HIL;fix for AP_Baro_HIL;['Tools/VARTest/VARTest.pde'];1;2
cb5f8826f89fd3c4ebb73899eca4642ca452f776;cb5f8826;copter;copter;Leonard's fix for trapezoidal frame;"Leonard's fix for trapezoidal frame

We need to allow yaw_factors to be floats in the add_motor method";['libraries/AP_Motors/AP_MotorsHexa.cpp', 'libraries/AP_Motors/AP_MotorsY6.cpp', 'libraries/AP_Motors/AP_MotorsOctaQuad.cpp', 'libraries/AP_Motors/AP_MotorsQuad.cpp', 'libraries/AP_Motors/AP_MotorsMatrix.cpp', 'libraries/AP_Motors/AP_MotorsOcta.cpp', 'libraries/AP_Motors/AP_MotorsMatrix.h'];7;144
fb0f5d46bac5cfd20f589dadae083d0716307ab7;fb0f5d46;copter;copter;use BIT_IF_SET();"use BIT_IF_SET()

this should fix the problem with simple mode on PX4

Pair-Programmed-With: Randy Mackay <rmackay9@yahoo.com>";['ArduCopter/setup.pde', 'ArduCopter/control_modes.pde'];2;12
610069e729f945b005886c26739ad8e351492054;610069e7;library;dcm;fixed airspeed bug;"fixed airspeed bug

we incorrectly went via the wind estimate when we had a working airspeed sensor";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;2
2fc25da4c3acfed122c3a3d79e119869729043dd;2fc25da4;copter;copter;Leonard's fix for get_loiter_accel_to_lean_angle;Leonard's fix for get_loiter_accel_to_lean_angle;['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp', 'ArduCopter/ArduCopter.pde'];3;26
37abfdc65aab6bd0fc0948a2456e6f9ad23499a0;37abfdc6;copter;copter;make CIRCLE_RATE a tunable parameter;"make CIRCLE_RATE a tunable parameter

Also bug fix to check of how many time it has rotated during a loiter
turns mission command";['ArduCopter/Parameters.h', 'ArduCopter/defines.h', 'ArduCopter/config.h', 'ArduCopter/Parameters.pde', 'ArduCopter/commands_logic.pde', 'ArduCopter/navigation.pde', 'ArduCopter/ArduCopter.pde'];7;32
d65d7d95e2501cc5abbcc24e9329f58c6b487140;d65d7d95;copter;copter;bug fix for take-off so it never descends;"bug fix for take-off so it never descends

If copter was already flying when take-off command was received it could
descend to the target altitude if it was below the current altitude.";['ArduCopter/commands_logic.pde'];1;2
02bd24cf57d3e0b995e8bf263e3a80f8a7cd5122;02bd24cf;library;scheduler;fixed _last_run initialisation;"fixed _last_run initialisation

another valgrind bug";['libraries/AP_Scheduler/AP_Scheduler.cpp'];1;3
d2bd818b2dc3e39a8eef91ec67b8b0679ac87980;d2bd818b;copter;copter;bug fix for auto_armed logic;"bug fix for auto_armed logic

Zero throttle when switching into an auto flight mode would cause the
motors to stop.";['ArduCopter/system.pde', 'ArduCopter/test.pde', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/motors.pde', 'ArduCopter/ArduCopter.pde'];5;42
68051f3ea6b7b2844ff1b01799f763f4bb810aa2;68051f3e;tools;menu;fixed crash bug in strtok_r() handling;"fixed crash bug in strtok_r() handling

on PX4 this causes a hard fault in CLI menus";['libraries/AP_Menu/AP_Menu.cpp'];1;3
a7b32caf728739b1acb657e37956831f3c9bab94;a7b32caf;copter;copter;bug fix for loiter_time check;"bug fix for loiter_time check

loiter_time_max was changed to hold the loiter time in seconds
(previously it was milliseconds) in order to allow the delay to be more
than 65 seconds but the verify_loiter_time check was missed from that
change";['ArduCopter/commands_logic.pde'];1;2
a185fa950c9a2495f8b69008e3d97b2463e20bbc;a185fa95;copter;copter;Jason's fix to auto disarming;"Jason's fix to auto disarming

Added check so that it only starts counting down when motors are armed.
This removes the issue in which the copter sometimes disarms shortly
aftering being armed.";['ArduCopter/ArduCopter.pde'];1;2
9f0f482dd78fb3d737e4eee34d7e8d98071db1b5;9f0f482d;plane;plane;fixed LOITER_TIME to start when loiter starts;"fixed LOITER_TIME to start when loiter starts

thanks to Paul Riseborough for finding this bug!";['ArduPlane/commands_logic.pde'];1;10
1ee825ee9a20b14c79cc0395470dbc21b25774e4;1ee825ee;copter;copter;move alt and wp checking to AC_WPNAV;"move alt and wp checking to AC_WPNAV

RTL fix so that if it starts rtl-ing from above 80m it returns home
while descending instead of descending at initial position.
add get and set_target_alt_for_reporting";['ArduCopter/toy.pde', 'ArduCopter/test.pde', 'ArduCopter/Log.pde', 'ArduCopter/navigation.pde', 'ArduCopter/AP_State.pde', 'ArduCopter/Attitude.pde', 'ArduCopter/commands_process.pde', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/commands_logic.pde', 'ArduCopter/defines.h', 'ArduCopter/ArduCopter.pde'];11;453
9d7d174995f4e1ff1cbc9326f5bf1cb7ec1376c4;9d7d1749;library;ac_wpnav;check distance to waypoint within library;"check distance to waypoint within library

bug fix for loiter using lat/lon position instead of NED position when
calculating desired velocity towards target";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;82
afd2f82768fb8ac922fa4447323ed344511a56c0;afd2f827;library;ac_wpnav;bug fix for track covered being 2D;"bug fix for track covered being 2D

Replaced abs and fabs with fabsf
Added get_destination method";['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;17
553f40a99c135de33d29582b76e82cc72146f4e7;553f40a9;copter;copter;bug fix to loiter delay;"bug fix to loiter delay

change delay to seconds to allow delays longer than 65seconds";['ArduCopter/commands_logic.pde', 'ArduCopter/ArduCopter.pde'];2;10
0d70ba10302ed3eadc68768add9724c767cee0aa;0d70ba10;library;ac_wpnav;bug fix to dt calculation;bug fix to dt calculation;['libraries/AC_WPNav/AC_WPNav.h', 'libraries/AC_WPNav/AC_WPNav.cpp'];2;12
cdb532a594a0c5040b6bc295e804a769cc9cd8bc;cdb532a5;copter;copter;bug fix for loiter target;bug fix for loiter target;['ArduCopter/navigation.pde', 'libraries/AP_InertialNav/AP_InertialNav.h'];2;8
95d944f610f984c8193d020b1ce2eb65e6c2bdde;95d944f6;copter;copter;Jason's bug fix for loiter's set_next_WP_latlon;Jason's bug fix for loiter's set_next_WP_latlon;['ArduCopter/navigation.pde'];1;4
24dd1676072b74b9ad949ec6d13a58b168b0d71c;24dd1676;copter;copter;ACRO bug fix from Jason;ACRO bug fix from Jason;['ArduCopter/Attitude.pde'];1;2
a49fe272ad7b222f3062233c4561e30c16a82233;a49fe272;plane;plane;replace gps fix with status;"replace gps fix with status

Required to ensure 3d fix is used for initialising home";['ArduPlane/ArduPlane.pde'];1;4
6cb47cee6b28afaa7cb7529899066d5051d2e25e;6cb47cee;rover;rover;add support for GPS fix type 2D;add support for GPS fix type 2D;['APMrover2/APMrover2.pde', 'APMrover2/GCS_Mavlink.pde'];2;13
27309a553fe296ddb4710ab78dc702b3f89b24b7;27309a55;library;gps;fixes after review;"fixes after review

Ensure 3D fix before returning velocity_down
UBLOX: restore check of fix_status as part of determining 2D or 3D fix
SIRF: add missing brackets on fix type check";['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/GPS.h', 'libraries/AP_GPS/AP_GPS_SIRF.cpp'];3;30
c2055557f53897c04f94295fbb77bd315adcd087;c2055557;plane;plane;add support for GPS fix type 2D;add support for GPS fix type 2D;['ArduPlane/commands_logic.pde', 'ArduPlane/navigation.pde', 'ArduPlane/GCS_Mavlink.pde', 'ArduPlane/system.pde', 'ArduPlane/Attitude.pde'];5;55
f7d977fe372498399159003d91ee44860d1e3151;f7d977fe;copter;copter;add support for GPS fix type 2D;add support for GPS fix type 2D;['ArduCopter/leds.pde', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/ArduCopter.pde'];3;102
24044dc0c42d265afc9295a70911f95726a78dd1;24044dc0;library;ahrs;add support for GPS fix type 2D;add support for GPS fix type 2D;['libraries/AP_AHRS/AP_AHRS.h', 'libraries/AP_AHRS/AP_AHRS.cpp', 'libraries/AP_AHRS/AP_AHRS_DCM.cpp'];3;8
d7454bb09e86006c263f048156505ea733218a8d;d7454bb0;library;gps;add 2D fix type;add 2D fix type;['libraries/AP_GPS/AP_GPS_HIL.cpp', 'libraries/AP_GPS/AP_GPS_MTK19.cpp', 'libraries/AP_GPS/AP_GPS_MTK.cpp', 'libraries/AP_GPS/GPS.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h', 'libraries/AP_GPS/GPS.h', 'libraries/AP_GPS/AP_GPS_NMEA.cpp', 'libraries/AP_GPS/AP_GPS_SIRF.cpp'];9;99
744f610409d5f2286aedff4eb7463f620c29e8e7;744f6104;library;rangefinder_i2c;fixed bug with interchanged min max values;"fixed bug with interchanged min max values
- add usage of mode-filter and min-max constrain, similar to MaxsonarXL";['libraries/AP_RangeFinder/AP_RangeFinder_MaxsonarI2CXL.cpp'];1;11
a1295c042b8030adf4dbb6703d4707c7e6efe864;a1295c04;copter;copter;fix init of wp_verify_byte so wp alt is always required;fix init of wp_verify_byte so wp alt is always required;['ArduCopter/commands_logic.pde'];1;5
37040adfaaa573471ee1870840cf3666cc309ea1;37040adf;copter;copter;bug fix for auto missions over 320m;"bug fix for auto missions over 320m

get_throttle_althold_with_slew's target_alt parameter defined as int16_t
(instead of int32_t) meaning missions with altitudes >320m could wrap
around and become negative.";['ArduCopter/Attitude.pde'];1;2
476a6d0164a3cafdddf303124cbeade48a34e635;476a6d01;copter;copter;fix for acro throttle bug;fix for acro throttle bug;['ArduCopter/Attitude.pde'];1;6
37d3e1d7e4cdf64783490d7de7889b44607add98;37d3e1d7;copter;copter;add zero slope checks to wpinav;"add zero slope checks to wpinav

also added RTL fix to set wpinav target explicitly";['ArduCopter/commands_logic.pde', 'ArduCopter/navigation.pde', 'ArduCopter/commands.pde'];3;123
7d5b975da27f76fbb7efd485b4f3ec42d32ff93a;7d5b975d;library;ac;Flip code fix;"Flip code fix

Flight tested it today and made some flips. Throttle adjusted in Manual throttle modes. Not tested in AP throttle modes such as alt hold.";['ArduCopter/flip.pde', 'ArduCopter/ArduCopter.pde'];2;61
1007f2ef07233fca2d49f4a673a8395e54ff4cbc;1007f2ef;plane;plane;fixed a bug with setting stream rates ;"fixed a bug with setting stream rates 

this is what caused the ""no sensors"" problem in the 2.69 release";['ArduPlane/GCS_Mavlink.pde'];1;35
9d3224ef349495a88a2a03b36718f88bf357ee34;9d3224ef;plane;plane;fixed target speed reload on landing;"fixed target speed reload on landing

thanks to Doug for this fix!";['ArduPlane/commands_logic.pde'];1;14
9d34ead48632dea72efdeb8eb0f143b7f4e36151;9d34ead4;copter;copter;fix up some casting issues for wp_distance;fix up some casting issues for wp_distance;['ArduCopter/commands_logic.pde'];1;4
df1c0d92bd6c4ae1e2906c4137f43c2d1181bd5c;df1c0d92;copter;copter;manual throttle scaling fix;"manual throttle scaling fix

Scaling of bottom half of throttle was changed from THR_MIN ~ 500.
Previously it was from 0 ~ 500.";['ArduCopter/Attitude.pde'];1;2
481352672530f75cd6b473fd5224f5a4021af913;48135267;copter;copter;bug fix for autotrim's roll axis backwards;bug fix for autotrim's roll axis backwards;['ArduCopter/control_modes.pde'];1;2
9c3b9907dd417b20e5009b3f38013750aac0fd9b;9c3b9907;copter;copter;bug fix to set sonar_alt_health to zero when disabled;bug fix to set sonar_alt_health to zero when disabled;['ArduCopter/sensors.pde', 'ArduCopter/ArduCopter.pde'];2;12
70371be4a1bf3a1f696cfc63af2e379ae30bd936;70371be4;copter;copter;use AP_Math's longitude_scale;"use AP_Math's longitude_scale

bug fix to base scaling on home location instead of next_WP which may
not have been initialised";['ArduCopter/commands.pde'];1;5
ccaa7a52ef4aa9265384334918ff1d8716d24efa;ccaa7a52;copter;copter;RTL bug fix to initial step is always a climb and not a descent;"RTL bug fix to initial step is always a climb and not a descent

Also bug fix to hold yaw on take-off";['ArduCopter/commands_logic.pde'];1;13
2dab40abebfc0a87617529e50f272d86618b2785;2dab40ab;copter;copter;bug fix to altitude check of verify takeoff;"bug fix to altitude check of verify takeoff

set_next_WP function was not setting the alt_change_flag properly";['ArduCopter/commands.pde'];1;20
9d0f117c5db35c919d9d0a0abfe5dd17c7521fbd;9d0f117c;library;ppm;Another small fix found by John Arne;Another small fix found by John Arne;['Tools/ArduPPM/Libraries/PPM_Encoder.h'];1;5
08dc730d405a4b487bf01b7ba0cbc56876d643d0;08dc730d;copter;copter;bug fix to LAND flight mode not actually landing if initiated from failsafe;"bug fix to LAND flight mode not actually landing if initiated from failsafe

An hidden bit of failsafe functionality in the set_mode function was
switching the throttle mode back to THROTTLE_AUTO instead of
THROTTLE_LAND";['ArduCopter/system.pde'];1;15
177da0ca7457d3014d3de90a07f6944e2274150b;177da0ca;copter;copter;fixed minor bug in logging of parameter changes to dataflash;"fixed minor bug in logging of parameter changes to dataflash

It is questionable whether we should even bother writing these to the
dataflash as there is no way to recognise which parameter has been
affectded";['ArduCopter/GCS_Mavlink.pde'];1;12
910e09fc9699ad5258924af6a65896a25326db7f;910e09fc;library;inertialsensor_mpu6000;fix sync/async semaphore usage with new scheduler;fix sync/async semaphore usage with new scheduler;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h'];2;174
ea6147162aab8e98a11b730855daafe8e8841e4f;ea614716;library;hal_smaccm;fix to goofed PPM_MAX_CHANNELS macro;fix to goofed PPM_MAX_CHANNELS macro;['libraries/AP_HAL_SMACCM/RCInput.h', 'libraries/AP_HAL_SMACCM/RCInput.cpp'];2;10
46b07427105a6bd8ad11da8fd7e315206bb880d3;46b07427;library;hal_smaccm;Fix pin conflict between uartC and I2C.;"Fix pin conflict between uartC and I2C.

- uartC is currently disconnected.
- Set uartB to USART6 for GPS communication.";['libraries/AP_HAL_SMACCM/UARTDriver.cpp', 'libraries/AP_HAL_SMACCM/HAL_SMACCM_Class.cpp'];2;36
ab37f833dba988b31d92833ff58109bfff1726af;ab37f833;library;ms5611;Fix CONFIG_MS5611_SERIAL definitions.;"Fix CONFIG_MS5611_SERIAL definitions.

- Make sure the values are defined as integers.  We were always using
  SPI rather than using I2C when desired.";['ArduCopter/defines.h', 'ArduPlane/ArduPlane.pde', 'ArduCopter/config.h', 'Tools/VARTest/config.h', 'ArduPlane/config.h', 'ArduCopter/ArduCopter.pde'];6;17
44285cfbada3838da1c28b161ae162474d654919;44285cfb;library;dataflash;fixed a semaphore bug in APM1 dataflash code;fixed a semaphore bug in APM1 dataflash code;['libraries/DataFlash/DataFlash_APM1.cpp'];1;3
b39166b71af0f0e6c2dcbc675a95d65340b53fb7;b39166b7;library;mpu6000;fixed minor timing bug;"fixed minor timing bug

if we miss a sample due to SPI contention we shouldn't update last
sample time";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;2
0660873fa74976122ab14306ddb6725951648616;0660873f;library;hal_avr;pull-up UART RX lines to fix GPS spoofing (Tridge);"pull-up UART RX lines to fix GPS spoofing (Tridge)

Tridge discovered this bugfix:
https://groups.google.com/d/topic/drones-discuss/aek6LJeYQo8/discussion";['libraries/AP_HAL_AVR/HAL_AVR_APM2_Class.cpp', 'libraries/AP_HAL_AVR/HAL_AVR_APM1_Class.cpp'];2;26
1b7b096b05c86b19952a7e08d1a39f4111aabdd8;1b7b096b;library;relay;fix pin used on APM2/SITL per Sando on drones-discuss;"fix pin used on APM2/SITL per Sando on drones-discuss

* My bad, thanks for the fix Sandro";['libraries/AP_Relay/AP_Relay.cpp'];1;2
d808c19c10a1d87dc85a809c0d37dc41d31ac41f;d808c19c;library;inertialsensor_mpu6000;uses new semaphores;"uses new semaphores

* some refactoring to fix differences between timerprocess
  and non-timerprocess usage";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h'];2;114
16f99ebcab097c0915fe5913a100aaa87fbcf8d8;16f99ebc;copter;copter;fix to sub system used to record failsafe in dataflash ERR message;fix to sub system used to record failsafe in dataflash ERR message;['ArduCopter/events.pde'];1;4
576af6d487c92aaf77b0ff7f943b74fcf250a4d4;576af6d4;copter;copter;bug fix to althold desired rate calculation.  Fix from Jonathan.;bug fix to althold desired rate calculation.  Fix from Jonathan.;['ArduCopter/Attitude.pde', 'ArduCopter/navigation.pde'];2;9
ff40fa6aabe05d73a585adb5630468566ce5203d;ff40fa6a;copter;copter;alt hold bug fix - should use 2x linear distance when calculating the desired rate;"alt hold bug fix - should use 2x linear distance when calculating the desired rate

Bug fix from Leonard.";['ArduCopter/Attitude.pde'];1;2
393c893cdbf689f1fc6e5de40f56762b0ddd50d9;393c893c;copter;copter;bug fix (attempt #2) for accel based throttle controller;"bug fix (attempt #2) for accel based throttle controller

Thanks to Jonathan for this.";['ArduCopter/Attitude.pde'];1;4
e583ade62def2edd6fcec5852db713bf3081902b;e583ade6;copter;copter;bug fix to accel based throttle controller (was using m/s instead of cm/s);bug fix to accel based throttle controller (was using m/s instead of cm/s);['ArduCopter/Attitude.pde'];1;4
e77b54c7dc4197d15f347db3e43029a5b4f9880d;e77b54c7;copter;copter;bug fix to GUIDED mode.  Now checks that desired altitude was reached before deciding the waypoint is complete.;bug fix to GUIDED mode.  Now checks that desired altitude was reached before deciding the waypoint is complete.;['ArduCopter/commands_logic.pde', 'ArduCopter/defines.h', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/navigation.pde', 'ArduCopter/system.pde'];5;30
37b56662bd65b5cc448f864d62b12b62e5a4d364;37b56662;library;inertialnav;Jason's bug fix to inertial nav velocity and position calculations;Jason's bug fix to inertial nav velocity and position calculations;['libraries/AP_InertialNav/AP_InertialNav.cpp'];1;10
ac8af9a53f17995ed5a383ac43ecb1dd4f857bc3;ac8af9a5;copter;copter;Leonard Hall's changes to alt hold including adding low pass filter to climb rate;"Leonard Hall's changes to alt hold including adding low pass filter to climb rate

get_throttle_rate_stabilized changed to simply update the target altitude instead of talking directly to the rate controller.
get_throttle_althold changed to use sqrt of distance when calculating the desired rate towards the target altitude.
added reset of accel based throttle PID's I term.
unrelated small bug fix from Randy to allow CH6 tuning of throttle rate D term.";['ArduCopter/Attitude.pde', 'ArduCopter/ArduCopter.pde'];2;77
811550cca6ec73eb7bc1eb9a86fa21b686ad4c25;811550cc;library;gps_mtk19;"small bug fix re ""=="" vs ""=""";"small bug fix re ""=="" vs ""=""

Also saved 22 bytes of RAM by moving error message into program space.";['libraries/AP_GPS/AP_GPS_MTK19.cpp'];1;8
6da68c53a584ede158981d2f5075a973e641cf46;6da68c53;copter;copter;bug fix so AP_Limits does not use up memory if it is disabled;bug fix so AP_Limits does not use up memory if it is disabled;['ArduCopter/Parameters.pde', 'ArduCopter/system.pde', 'ArduCopter/GCS_Mavlink.pde', 'ArduCopter/motors.pde', 'ArduCopter/ArduCopter.pde'];5;14
5633164fa0394c1263670257f5a8de589626c41e;5633164f;copter;copter;bug fix for compass.accumulate check in main loop (millis vs micros issue);bug fix for compass.accumulate check in main loop (millis vs micros issue);['ArduCopter/ArduCopter.pde'];1;2
e2edad8a3fd0ec9c047de8b487be8c59cbcf7a0f;e2edad8a;library;inertialsensor;fixed last sample time in MPU6000;"fixed last sample time in MPU6000

we lost this in the final work on the DTR bug";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;1
9548e7e79ee737025d57cff0f29148062776bd87;9548e7e7;library;inertialsensor;simplify the data_ready interrupt handling;"simplify the data_ready interrupt handling

this avoids using the defer process code, and fixes a nasty bug that
caused the APM to lockup on reset";['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp', 'libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.h'];2;24
4a6b46c661319afda9d8e0987c39b6e036ca4dc9;4a6b46c6;library;gps;fixed multiple GPS detection bug;fixed multiple GPS detection bug;['libraries/AP_GPS/AP_GPS_Auto.cpp'];1;2
4c715bfd042507878578561c32179d57a3b74694;4c715bfd;library;hal_avr_sitl;add Util driver, fix deprecated deps on HAL_AVR.h;add Util driver, fix deprecated deps on HAL_AVR.h;['libraries/AP_HAL_AVR_SITL/Scheduler.cpp', 'libraries/AP_HAL_AVR_SITL/AnalogIn.cpp', 'libraries/AP_HAL_AVR_SITL/HAL_AVR_SITL_Class.cpp', 'libraries/AP_HAL_AVR_SITL/sitl_barometer.cpp', 'libraries/AP_HAL_AVR_SITL/Util.cpp', 'libraries/AP_HAL_AVR_SITL/Util.h', 'libraries/AP_HAL_AVR_SITL/AP_HAL_AVR_SITL_Namespace.h'];7;73
b43b00377761eab22ff3c83fc87e9a734bc9781b;b43b0037;library;adc;fix typo in test;fix typo in test;['libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.pde'];1;5
087b1fa196e1fffe6b3bab1d4630da2f8df7b1e7;087b1fa1;library;hal_avr;AnalogIn returns new ADCSource each time a channel is requested;"AnalogIn returns new ADCSource each time a channel is requested

* fixes a bug where multiple sources created as pin -1, then change to
  appropriate pin on mavlink messages. Make treat each creation as distinct
  object.";['libraries/AP_HAL_AVR/AnalogIn.h', 'libraries/AP_HAL_AVR/AnalogIn_Common.cpp'];2;12
76dabef7d65332dc749d92235f9351bb93375b14;76dabef7;library;hal_empty;fix public declaration for i2cdriver;fix public declaration for i2cdriver;['libraries/AP_HAL_Empty/I2CDriver.h'];1;1
eda450a16625841a8d7bf3cf80dd614b9896abb1;eda450a1;library;hal;I2CDriver bug fixed for pure virtual base class;I2CDriver bug fixed for pure virtual base class;['libraries/AP_HAL/I2CDriver.h'];1;3
a0151aa66cc47b4e8c0e56ce830b15e2b4e92db3;a0151aa6;copter;copter;fix cliSerial null ptr, do AP_Param::setup_sketch_defaults;"fix cliSerial null ptr, do AP_Param::setup_sketch_defaults

* plus make SITL DataFlash available.";['ArduCopter/ArduCopter.pde'];1;8
b0b3fa33b4c7826df4188f7e56d9527f421f7690;b0b3fa33;library;limits;fix for AP_Param var_info registration in AP_Limit_Module;"fix for AP_Param var_info registration in AP_Limit_Module

* AP_Limit_Module class does not have its own var_info table.";['libraries/AP_Limits/AP_Limit_Module.cpp'];1;1
901c692ee38812058076eb67cdade9df49b4473c;901c692e;copter;copter;type fix;type fix;['ArduCopter/system.pde'];1;3
265707401f50c2046397c6e4bbe8772ceb36f98a;26570740;library;memcheck;fix for new HAL_SITL;fix for new HAL_SITL;['libraries/memcheck/memcheck.cpp'];1;4
7017a35fc3c15fc4b436d2189b5d8f42454ed175;7017a35f;library;airspeed;fix for AnalogIn read_average;fix for AnalogIn read_average;['libraries/AP_Airspeed/AP_Airspeed.cpp', 'libraries/AP_Airspeed/AP_Airspeed.h'];2;13
8f99a12374c73c6054e149607c257bf58a61413d;8f99a123;library;adc_analogsource;fix for new AnalogIn interface;fix for new AnalogIn interface;['libraries/AP_ADC_AnalogSource/AP_ADC_AnalogSource.cpp', 'libraries/AP_ADC_AnalogSource/AP_ADC_AnalogSource.h'];2;15
88f09d100abb9f61209f1145a25d9fdad31cf9d4;88f09d10;library;hal_avr;fix implementation of delay in scheduler;fix implementation of delay in scheduler;['libraries/AP_HAL_AVR/Scheduler.cpp'];1;16
6e45ce12b2dc343f4c72b496f44852769d675d1e;6e45ce12;library;hal_avr;implement reboot in scheduler;"implement reboot in scheduler

* still need to fix system io register inits to do it like bootloader would";['libraries/AP_HAL_AVR/Scheduler.h', 'libraries/AP_HAL_AVR/Scheduler.cpp'];2;25
c393374d4c01224a0eef99168b8e5334389a10f4;c393374d;library;opticalflow;ported to AP_HAL;"ported to AP_HAL

* 78 wide
* remove SPI.h, SPI3.h, and FastSerial.h dependencies (though not objects)
* gotta totally refactor HAL SPI driver to fix the rest";['libraries/AP_OpticalFlow/examples/AP_OpticalFlow_test/Arduino.h', 'libraries/AP_OpticalFlow/AP_OpticalFlow_ADNS3080.cpp', 'libraries/AP_OpticalFlow/examples/AP_OpticalFlow_test/AP_OpticalFlow_test.pde', 'libraries/AP_OpticalFlow/examples/AP_OpticalFlow_test/nocore.inoflag', 'libraries/AP_OpticalFlow/AP_OpticalFlow.h', 'libraries/AP_OpticalFlow/AP_OpticalFlow.cpp', 'libraries/AP_OpticalFlow/AP_OpticalFlow_ADNS3080.h'];7;1023
a4f1f6a5db9981bc8dea0d28c91eb0c768f251c5;a4f1f6a5;library;progmem;fix dependencies for all sketches touched by AP_HAL_AVR;fix dependencies for all sketches touched by AP_HAL_AVR;['libraries/AP_HAL_AVR/examples/DataflashTest/DataflashTest.pde', 'libraries/AP_HAL_AVR/examples/RCPassthroughTest/RCPassthroughTest.pde', 'libraries/AP_HAL_AVR/examples/FastSerial/FastSerial.pde', 'libraries/AP_HAL_AVR/examples/Storage/Storage.pde', 'libraries/GCS_Console/examples/Console/Console.pde', 'libraries/AP_HAL_AVR/examples/AnalogIn/AnalogIn.pde', 'libraries/AP_Math/examples/polygon/polygon.pde', 'libraries/AP_GPS/examples/GPS_AUTO_test/GPS_AUTO_test.pde', 'libraries/Filter/examples/Derivative/Derivative.pde', 'libraries/AP_Airspeed/examples/Airspeed/Airspeed.pde', 'libraries/AP_Common/c++.cpp', 'libraries/AP_Baro/examples/AP_Baro_BMP085_test/AP_Baro_BMP085_test.pde', 'libraries/Filter/examples/Filter/Filter.pde', 'libraries/AP_HAL_AVR/examples/RCInputTest/RCInputTest.pde', 'ArduPlane/ArduPlane.pde', 'libraries/AP_HAL_AVR/Console.h', 'libraries/AP_GPS/examples/GPS_MTK_test/GPS_MTK_test.pde', 'APMrover2/APMrover2.pde', 'libraries/AC_PID/examples/AC_PID_test/AC_PID_test.pde', 'libraries/AP_HAL_AVR/examples/APM1/APM1.pde', 'libraries/AP_ADC/examples/AP_ADC_test/AP_ADC_test.pde', 'libraries/AP_Declination/examples/AP_Declination_test/AP_Declination_test.pde', 'libraries/AP_InertialSensor/examples/MPU6000/MPU6000.pde', 'libraries/AP_LeadFilter/examples/AP_LeadFilter/AP_LeadFilter.pde', 'libraries/AP_HAL_AVR/examples/LCDTest/LCDTest.pde', 'libraries/AP_HAL_AVR/examples/SPIDriver_MPU6000/SPIDriver_MPU6000.pde', 'libraries/AP_HAL_AVR/UARTDriver.h', 'libraries/AP_Math/examples/eulers/eulers.pde', 'libraries/AP_HAL_AVR/examples/Blink/Blink.pde', 'libraries/AP_Math/examples/rotations/rotations.pde', 'libraries/AP_HAL_AVR/examples/Scheduler/Scheduler.pde', 'libraries/AP_Baro/examples/AP_Baro_MS5611_test/AP_Baro_MS5611_test.pde', 'libraries/AP_GPS/examples/GPS_UBLOX_test/GPS_UBLOX_test.pde', 'libraries/AP_HAL_AVR/UARTDriver.cpp', 'libraries/AP_HAL_AVR/examples/Console/Console.pde', 'libraries/Filter/examples/LowPassFilter/LowPassFilter.pde', 'libraries/AP_HAL_AVR/examples/I2CDriver_HMC5883L/I2CDriver_HMC5883L.pde', 'libraries/AP_Compass/examples/AP_Compass_test/AP_Compass_test.pde', 'libraries/AP_Math/examples/location/location.pde', 'ArduCopter/ArduCopter.pde'];40;77
9f9dfc7c639759d818ebba29666481bd1a2c2a38;9f9dfc7c;library;limits;fix spacing to 80 columns, use standard cpp header guard conventions;"fix spacing to 80 columns, use standard cpp header guard conventions

* No idea what was going on there. Confusing.";['libraries/AP_Limits/AP_Limit_Module.cpp', 'libraries/AP_Limits/AP_Limit_GPSLock.h', 'libraries/AP_Limits/AP_Limit_Geofence.cpp', 'libraries/AP_Limits/AP_Limit_Altitude.h', 'libraries/AP_Limits/AP_Limit_Geofence.h', 'libraries/AP_Limits/AP_Limits.h', 'libraries/AP_Limits/AP_Limit_Module.h', 'libraries/AP_Limits/AP_Limit_GPSLock.cpp', 'libraries/AP_Limits/AP_Limits.cpp', 'libraries/AP_Limits/AP_Limit_Altitude.cpp'];10;376
deb96143d394933c3c75468b0e14f1435b941ae8;deb96143;library;gps_imu;fix type punning warnings by using memcpy;fix type punning warnings by using memcpy;['libraries/AP_GPS/AP_GPS_IMU.cpp'];1;27
1f670b4ce210534e5ade9be47e23d6a9d83a4b91;1f670b4c;library;hal_avr;bugfix to RCOutput_APM1 driver CH5 and CH6;"bugfix to RCOutput_APM1 driver CH5 and CH6

* copypasted the code from RCOutputAPM1 and forgot to fix the io pins
  to initialize properly";['libraries/AP_HAL_AVR/RCOutput_APM1.cpp'];1;4
af77425636ff63534864482821435211aed73bc7;af774256;copter;copter;fix Failed to Init Optflow message at startup;fix Failed to Init Optflow message at startup;['ArduCopter/Parameters.pde', 'ArduCopter/Attitude.pde'];2;6
0eb57bf93d4163f5098d7484f82f70d0e3c8576c;0eb57bf9;library;acm;TradHeli;"TradHeli
Fix to make update_throttle_cruise work with stab_throttle scaling.";['libraries/AP_Motors/AP_MotorsHeli.cpp', 'libraries/AP_Motors/AP_MotorsHeli.h', 'ArduCopter/Attitude.pde', 'ArduCopter/ArduCopter.pde'];4;24
cca9f9dbce15551d95d060125554ebec6303a9bc;cca9f9db;copter;copter;do_set_servo fix to resolve -1 being assigned to uint8_t;do_set_servo fix to resolve -1 being assigned to uint8_t;['ArduCopter/commands_logic.pde'];1;4
d3de77f74cd116f78c96e5d0a0c855f5465d0cc4;d3de77f7;copter;copter;fix do_set_servo so that it works again;fix do_set_servo so that it works again;['ArduCopter/commands_logic.pde'];1;44
269e02ee933a9f20ce9725c8148379b42a11c403;269e02ee;copter;copter;bug fix - initialise inertial nav;bug fix - initialise inertial nav;['ArduCopter/system.pde'];1;4
06d1c6b0c166e810f77ab29f1452ce5642553d88;06d1c6b0;library;buffer;bug fix to allow buffer to completely fill up.;"bug fix to allow buffer to completely fill up.

Also removed redundant _tail parameter which saves 1 byte.";['libraries/AP_Buffer/AP_Buffer.h'];1;81
a5c4e65cdfc5975b42b47da3f344c5af128fb99e;a5c4e65c;library;acm;TradHeli;"TradHeli
Fix for Rotor Speed Controller to switch on/off with Ch8 as opposed to the old way (throttle).";['libraries/AP_Motors/AP_MotorsHeli.cpp'];1;18
8c18a607660ed48472cf9735e059f186b022dd90;8c18a607;library;acm;Small fix to Yaw Look Ahead;Small fix to Yaw Look Ahead;['ArduCopter/navigation.pde'];1;1
8141f0b600f67f0efc4ab0088500abed797c34f2;8141f0b6;copter;copter;bug fix - increase mpu6k sample rate to 100hz;bug fix - increase mpu6k sample rate to 100hz;['ArduCopter/ArduCopter.pde'];1;2
f6fce1e2382f672d913601492318e963da5d7cd8;f6fce1e2;library;pid;don't reset _last_error on reset_I();"don't reset _last_error on reset_I()

resetting _last_error when you have a non-zero D term causes the D
contribution to the next call to be massively amplified. This can
cause crazy behaviour on auto takeoff in ArduPlane if you have a
non-zero D term for the roll or picth controllers

Thanks to Chris Miser for providing the tlog that allowed this bug to
be found.";['libraries/PID/PID.cpp'];1;1
ccb1f1722e81e3d1661f1b085f1a565bcc832920;ccb1f172;sitl;sitl;fixed a interrupt recursion bug;"fixed a interrupt recursion bug

this can be triggered by the timer scheduler re-enabling interrupts";['libraries/Desktop/support/sitl.cpp'];1;14
8561f08b2ff2e1d4c545423ceb4e39143bf0c375;8561f08b;library;ahrs;prevent a large delta_t from affecting DCM solution;"prevent a large delta_t from affecting DCM solution

this should fix large changes in attitude directly after arming
ArduCopter";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;9
ef919c4e36f059fed210bca921bf417334f438ff;ef919c4e;library;param;fixed a bug with setting nested parameters ;"fixed a bug with setting nested parameters 

This bug meant that setting a parameter in a parent class for a doubly
nested parameter group, where the parameter index in the parent class
is 4 or greater would actually set the first element in that parent
class.

At the moment only one parameter fits these narrow constraints - the
RCn_DZ element of the RC_Channel_aux class. So if someone set RC5_DZ
to 17 in ArduPlane it would actually set RC5_MIN to 17.";['libraries/AP_Common/AP_Param.cpp', 'libraries/AP_Common/AP_Param.h'];2;26
0159d8bd353e7e4cd473427d24a147b13348a6aa;0159d8bd;library;motors;bug fix to reached_limits so by default it returns true if any limits have been breached;bug fix to reached_limits so by default it returns true if any limits have been breached;['libraries/AP_Motors/AP_Motors.h'];1;3
e138b0a1d7eb11cf42d432834012cd57cc81e559;e138b0a1;library;acm;Added simple mode bearing logging for bug hunting;Added simple mode bearing logging for bug hunting;['ArduCopter/system.pde', 'ArduCopter/ArduCopter.pde'];2;5
a2a3eed0633082d9bec7e4b55f9a2a0d31cc43dc;a2a3eed0;copter;copter;bug fix for telemetry not working on APM1.;"bug fix for telemetry not working on APM1.

SPI3 is also UART3.  On APM1 we use UART3 for telemetry and don't need SPI3.";['ArduCopter/system.pde'];1;4
5fbe53a84d507b82a468bce0a8d4bef13abbf2bf;5fbe53a8;copter;copter;bug fix for get_yaw_rate_stabilized_ef;"bug fix for get_yaw_rate_stabilized_ef

Provided by Leonard Hall";['ArduCopter/Attitude.pde'];1;10
3c9ba94f42b04dfb9039a392ff553585e5c7ac40;3c9ba94f;copter;copter;bug fix to ROI when no camera mount is specific;bug fix to ROI when no camera mount is specific;['ArduCopter/commands_logic.pde'];1;2
7cf60e61b4a5d8b31c7828c7b5dd1ae2e9568eec;7cf60e61;copter;copter;bug fix in earth-frame to body-frame conversion for roll;bug fix in earth-frame to body-frame conversion for roll;['ArduCopter/Attitude.pde'];1;2
921ab3fe12ca142e35387a4bbcea042be7242793;921ab3fe;copter;copter;bug fix to DMP initialisation (it was freezing due to SPI bus conflicts);bug fix to DMP initialisation (it was freezing due to SPI bus conflicts);['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;10
280488fa5e2a3f5d59dd99ee2ae048c3f7f6fcf0;280488fa;copter;copter;bug fix to display ITERM enabled/disabled properly from cli;"bug fix to display ITERM enabled/disabled properly from cli

Also changed header for this message type to ITERM instead of just IT to make it more clear what it is";['ArduCopter/Log.pde'];1;4
56c354eb4f536581b92de60c72f13fc7fcfb1809;56c354eb;library;apm;fixed stick mixing in CIRCLE mode on throttle failsafe;"fixed stick mixing in CIRCLE mode on throttle failsafe

Many thanks to Andke for finding this bug!";['ArduPlane/Attitude.pde'];1;98
889d1bb36c3541b18cfcd1d79a42b0055280b355;889d1bb3;copter;copter;alt hold bug fix - removed reset next_WP in init_home;alt hold bug fix - removed reset next_WP in init_home;['ArduCopter/commands.pde'];1;3
2110231ee3bc8e6091faf6328174c44c5b30c2f2;2110231e;library;leadfilter;bug fix so velocity * _lag is used (otherwise we are assuming a 1sec lag);bug fix so velocity * _lag is used (otherwise we are assuming a 1sec lag);['libraries/AP_LeadFilter/AP_LeadFilter.cpp'];1;2
6f32f52377fd5e21bebd2bbe1285c14b4f0e6576;6f32f523;copter;copter;bug fix in Log_Read_Attitude.  It was printing two uninitialised variables.;bug fix in Log_Read_Attitude.  It was printing two uninitialised variables.;['ArduCopter/Log.pde'];1;2
ba9543ee04225308a0ea89ce669c7f094ddab42a;ba9543ee;library;gps;NMEA bug fix from Alexey Kozin;"NMEA bug fix from Alexey Kozin

thanks Alexey!";['libraries/AP_GPS/AP_GPS_NMEA.cpp'];1;2
5d3ddf1fc97ece546a5e6f18d39880b4e1f935a4;5d3ddf1f;copter;copter;bug fix for ROI not working if user did not have a camera mount;"bug fix for ROI not working if user did not have a camera mount

Changed verify_nav_roi command to attempt to point at the target if our camera mount type is not pan_tilt nor pan_tilt_roll";['ArduCopter/commands_logic.pde'];1;2
c9d34c1737a14e1c0acd0fe12fa67d18fc08d5ba;c9d34c17;copter;copter;fixes to allow AP_Mount to work on APM1 with original default channels and fix to reenable support for 3-axis gimbals on APM2.;"fixes to allow AP_Mount to work on APM1 with original default channels and fix to reenable support for 3-axis gimbals on APM2.

Channels 5 to 11 changed to RC_Channel_aux.
Removed channel 9 because APM_RC doesn't support it in any case.
Updated EEPROM format version to 119 because of the change to RC_Channel_aux and because k_param_rc_11 moved to be after k_param_rc_10.";['ArduCopter/Parameters.h', 'ArduCopter/radio.pde', 'ArduCopter/Parameters.pde', 'ArduCopter/ArduCopter.pde'];4;39
5994117f6f24d53b70107fbb6181d591329d0af4;5994117f;library;rc_channel_aux;bug fix which could cause channel to be assigned to the wrong function and miss others;bug fix which could cause channel to be assigned to the wrong function and miss others;['libraries/RC_Channel/RC_Channel_aux.cpp'];1;6
c965963d7b24bd883b0874c2786be918c9ad51d1;c965963d;library;inertialsensor_mpu6000;bug fix.  DMP was being enabled by default so although the results were not being used, this caused a delay in the main loop;bug fix.  DMP was being enabled by default so although the results were not being used, this caused a delay in the main loop;['libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp'];1;4
95c941664fa2266e80431ef3add0f986feab7daa;95c94166;library;apm;fixed bug in do_jump() navigation;"fixed bug in do_jump() navigation

this avoids a problem where the jump can cause the next command to be
reset to 0";['ArduPlane/commands_logic.pde', 'ArduPlane/commands_process.pde'];2;58
75459b09be0ec92c022da9a17ed789ad962b727c;75459b09;copter;copter;changed reset_throttle_counter to uint8_t to get rid of overflow bug that was preventing target altitude from being locked in after pilot input down throttle.;changed reset_throttle_counter to uint8_t to get rid of overflow bug that was preventing target altitude from being locked in after pilot input down throttle.;['ArduCopter/ArduCopter.pde'];1;2
9b3ced93eee2290617867d674df1b6ba79b2fc04;9b3ced93;library;compass;fix for mismatching set_initial_location parameters (forgot to change long to int32_t in .cpp file);fix for mismatching set_initial_location parameters (forgot to change long to int32_t in .cpp file);['libraries/AP_Compass/Compass.cpp'];1;2
07c7c3945d98d01f741cb3161931d3e550c4e57e;07c7c394;copter;copter;fixed small bug re arming_counter for TOY mode;fixed small bug re arming_counter for TOY mode;['ArduCopter/motors.pde'];1;2
14cdbd36cb0dd2c4b007cf5cea2cb824533be2c3;14cdbd36;library;ahrs;check for bad values in the error before they can affect DCM;"check for bad values in the error before they can affect DCM

this should fix the DCM renorm errors in autotest, probably caused by
bad climb rates";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;6
d9cc9675082931e61c1e43060fb5ad20c4ea8789;d9cc9675;library;ahrs;force an extra read of the compass on startup;"force an extra read of the compass on startup

the first read from the compass can be bad. This ensures we have a
good value when getting the initial AHRS yaw.

Thanks to Randy and Jason for the bug report!";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;5
d7d33c64b79024cee93ba1e892a6bcc723873921;d7d33c64;library;filter;fixed a off-by-one DerivativeFilter bug;"fixed a off-by-one DerivativeFilter bug

many thanks to Jon Challinger for noticing this!";['libraries/Filter/DerivativeFilter.cpp'];1;8
f79b90725e97b2f79fbcfcc30e6f425faa2dca72;f79b9072;copter;copter;Dan Gray's fix for Condition_Yaw;"Dan Gray's fix for Condition_Yaw

command_yaw_dir is an unsigned byte but was being set to a -ve number leading to very incorrect yaw target heading for counter clockwise turns.
command_yaw_end (i.e. turn's end target) was not being set if turn was of type ""relative""";['ArduCopter/commands_logic.pde'];1;45
c091c8e0e6fdb374cf8bf7dfaeb5716c68cbcbc6;c091c8e0;copter;copter;bug fix to reset yaw target when zero and when in stabilize or acro mode.;bug fix to reset yaw target when zero and when in stabilize or acro mode.;['ArduCopter/ArduCopter.pde'];1;2
176e6fdd687394e0e0e0ed3e4ed3e1f8e90276e5;176e6fdd;plane;plane;bug fix to global var_info parameter list for ahrs object.;bug fix to global var_info parameter list for ahrs object.;['ArduPlane/Parameters.pde'];1;4
a5b5f6a619e1c569b59d1c04afbe972bc90bdda0;a5b5f6a6;copter;copter;bug fix to global var_info parameter list for ahrs object.;bug fix to global var_info parameter list for ahrs object.;['ArduCopter/Parameters.pde'];1;4
8c47b0c087a87db47428910a5684d5514b5fe2c2;8c47b0c0;library;acm;Toy mode fix - Pitch flipped the sign on roll/Yaw coupling.;Toy mode fix - Pitch flipped the sign on roll/Yaw coupling.;['ArduCopter/Attitude.pde'];1;2
818805840446d1a62aea6519eccac53063f751ee;81880584;library;acm;Failsafe Fix for Mission planner initiated AUTO mode;"Failsafe Fix for Mission planner initiated AUTO mode

Keeps the failsafe from exiting Auto mode when returning from failsafe. Added arming ability for Toy mode.";['ArduCopter/events.pde', 'ArduCopter/motors.pde'];2;6
fcd0e12a1ee08ca0a621703123c8b55cf41c31d7;fcd0e12a;library;acm;Flip code revision to fix bad orientation bug.;Flip code revision to fix bad orientation bug.;['ArduCopter/flip.pde'];1;15
d02655ac56c525d6f761ad963bce2265830dbb27;d02655ac;library;apm;Fixed bug where landing_pitch wasnt initialized properly;"Fixed bug where landing_pitch wasnt initialized properly

this adds a new LAND_PITCH_CD parameter to control the landing pitch
when an airspeed sensor is not being used";['ArduPlane/Parameters.pde', 'ArduPlane/Parameters.h', 'ArduPlane/ArduPlane.pde'];3;14
acef75319c6209bc1f724b08d857fd9cf262955e;acef7531;library;motorsmatrix;small bug fix to limit checking on remove_motor call.  Fix thanks to Michael Peschel!;small bug fix to limit checking on remove_motor call.  Fix thanks to Michael Peschel!;['libraries/AP_Motors/AP_MotorsMatrix.cpp'];1;2
e3af0c79201ff84b8b0aa687f388fdd5fb8c11d8;e3af0c79;copter;copter;Yaw stop fix;Yaw stop fix;['ArduCopter/ArduCopter.pde'];1;7
4af392290b5a68782e6bc222f06932843192aaaa;4af39229;library;circle_wp;Fix for Yaw toward center, fix for transit to Circle WP from a distance;Fix for Yaw toward center, fix for transit to Circle WP from a distance;['ArduCopter/ArduCopter.pde'];1;27
d8ff5dcfabf6a216400a7457a8c0057ca15faca3;d8ff5dcf;copter;copter;Fix circle_WP;Fix circle_WP;['ArduCopter/commands_logic.pde', 'ArduCopter/ArduCopter.pde'];2;12
a28070e0e01815274de6585e44479f1058409e31;a28070e0;copter;copter;Loiter unlimited fix;Loiter unlimited fix;['ArduCopter/commands_logic.pde'];1;14
4dd4c95d5cd02bff86020d4c78acb78e0e70bb7f;4dd4c95d;library;analogsource_ino;"fix to allow analog port to be read to be specified as a ""channel"" (i.e. A0)";"fix to allow analog port to be read to be specified as a ""channel"" (i.e. A0)

Also fixed example range finder sketch to work with interrupt enabled AP_AnalogSource_Arduino class";['libraries/AP_RangeFinder/examples/AP_RangeFinder_test/AP_RangeFinder_test.pde', 'libraries/AP_AnalogSource/AP_AnalogSource_Arduino.cpp'];2;30
be763a6ead0b85c678bf25c7c7476b1e9d3d7d00;be763a6e;library;acm;use get_distance_cm() not get_distance();"use get_distance_cm() not get_distance()

this fixes a bug introduced in 28f2eb6b9";['ArduCopter/navigation.pde', 'ArduCopter/commands.pde'];2;8
46552b4222d183c680427d1c7a6a9841c5fa77f2;46552b42;library;mount;Fix radians/degrees scaling regressions;"Fix radians/degrees scaling regressions

Rename calculate() into stabilize()
Implement MAV_MOUNT_MODE_RC_TARGETING initialization
Document to make sure this radians/degrees mess up does not happen again";['libraries/AP_Mount/AP_Mount.h', 'libraries/AP_Mount/AP_Mount.cpp'];2;48
d4c8041c51c29f1f945923ec2a27671e6a253daa;d4c8041c;library;ahrs;first successful version of Bills new drift correction system;"first successful version of Bills new drift correction system

This makes 3 major changes:

 1) fixes the scaling of the yaw drift correction term to fix the time
 constant

 2) don't integrate the mag vector over multiple readings

 3) accumulate omega_I changes over 15 seconds before applying, to try
 to prevent omega_I picking up short term responses";['libraries/AP_AHRS/AP_AHRS_DCM.cpp', 'libraries/AP_AHRS/AP_AHRS_DCM.h'];2;351
1e38b0d535af85a0f88918dbc4b11fdc5451d13c;1e38b0d5;library;gps_nmea;fix from Roberto Navoni to improve NMEA accuracy;fix from Roberto Navoni to improve NMEA accuracy;['libraries/AP_GPS/AP_GPS_NMEA.cpp'];1;16
296e651b305ffb3888e322c7f2e27721e0b36701;296e651b;library;gps;fixed the UBLOX parser to handle unknown messages;"fixed the UBLOX parser to handle unknown messages

the parser was broken in several ways:

 1) when it received an unknown message it didn't update the ck_a and ck_b fields, so it
    thought the message had a bad checksum, which meant it got out of protocol sync

 2) the read() method would return false if the last message from the GPS was of an unknown type. 
    So we relied on the last msg always being one that we understand and want

 3) the parser considered any valid UBLOX message to be 'new data', whereas we only actually get 
    a new fix when we get box a new position and velned message

 4) the total message size per update is more than 128 bytes, but the serial port was opened 
    with only a 128 byte buffer, so we got corruption regularly";['libraries/AP_GPS/AP_GPS_UBLOX.cpp', 'libraries/AP_GPS/AP_GPS_UBLOX.h'];2;62
b6467cb1fa46cb86873295b63bfa495b0f333535;b6467cb1;library;mavlink;updates to mavlink headers to fix mavlink 1.0 issues;updates to mavlink headers to fix mavlink 1.0 issues;['libraries/GCS_MAVLink/include/mavlink/v1.0/mavlink_helpers.h', 'libraries/GCS_MAVLink/include/mavlink/v0.9/mavlink_helpers.h', 'libraries/GCS_MAVLink/include/mavlink/v0.9/common/version.h', 'libraries/GCS_MAVLink/include/mavlink/v1.0/ardupilotmega/version.h', 'libraries/GCS_MAVLink/include/mavlink/v0.9/protocol.h', 'libraries/GCS_MAVLink/include/mavlink/v0.9/ardupilotmega/version.h', 'libraries/GCS_MAVLink/include/mavlink/v1.0/common/version.h'];7;49
72d76558a71bf5a54ef6664e1db8d4ad923b797d;72d76558;copter;copter;Ensure update_GPS does nothing when gps is disabled.;"Ensure update_GPS does nothing when gps is disabled.

This fixes a bug in which an APM without a GPS would not work because it would constantly scan for a valid GPS long after it should have given up and moved on.";['ArduCopter/ArduCopter.pde'];1;5
dcdeae412eb5e242acd253e6bdc8ad04f1af4dab;dcdeae41;copter;copter;Another attempt at fixing the lat/lon printing bug in which small negative lattitudes or longitudes were appearing as positives.;"Another attempt at fixing the lat/lon printing bug in which small negative lattitudes or longitudes were appearing as positives.

Fixed in both ArduCopter Log.pde and the GPS Auto test sketch";['ArduCopter/Log.pde', 'libraries/AP_GPS/examples/GPS_AUTO_test/GPS_AUTO_test.pde'];2;30
2a216ce900a60a8bd2e8fd3231f11d072a1ded8f;2a216ce9;copter;copter;fixed print_latlon bug in which it would print negative lat/lon numbers incorrectly (i.e. -1234567890 would be printed as -124.xxx).;fixed print_latlon bug in which it would print negative lat/lon numbers incorrectly (i.e. -1234567890 would be printed as -124.xxx).;['ArduCopter/Log.pde', 'libraries/AP_GPS/examples/GPS_AUTO_test/GPS_AUTO_test.pde'];2;29
d9457ecc38ec3c7de141efa411d06939fe4ff5a9;d9457ecc;library;mavlink;send time of GPS fix accurately;"send time of GPS fix accurately

when we send a GPS_RAW message, set the usec field to the time we got
the fix from the GPS, not the current time. This makes it possible for
aerial photo processing to be more accurate, as the usec field with
more accurately reflect the planes position/time pair";['ArduCopter/GCS_Mavlink.pde', 'ArduPlane/GCS_Mavlink.pde'];2;8
f274df454a427ec88a3b1b9af072a55f09592313;f274df45;library;dcm;fixed a bug when using GPS for yaw correction;"fixed a bug when using GPS for yaw correction

When using GPS for yaw correction we need to apply the x and y omegaI
corrections from the _omega_I_sum in the period before we get to the
minimum ground speed for GPS yaw correction. Otherwise we get a large
sudden omega_I change on takeoff.";['libraries/AP_AHRS/AP_AHRS_DCM.cpp'];1;3
357d6c2d9bef9f47a56a3ed77adb41d2287a2c5c;357d6c2d;copter;copter;bug fix for reversing tri servo;"bug fix for reversing tri servo

Extended AP_MotorsTri class to take in pointer to rc_tail servo (rc_7) and we use this servo's REV parameter to determine whether to reverse the output to the tail servo or not";['libraries/AP_Motors/AP_MotorsTri.h', 'libraries/AP_Motors/AP_MotorsTri.cpp', 'ArduCopter/ArduCopter.pde'];3;15
51b70e4d36282a2693d6d918171a80f630b9c085;51b70e4d;copter;copter;Changed implementation of configuration value for automatic declination. There is now a FORCE_AUTOMATIC_DECLINATION_UPDATE that when enabled will update the declination on every GPS 3D fix regardless of whether or not the user saved a value to the EEPROM. By default the declination will only be set by the automatic declination routine if the user has not saved a declination to the EEPROM.;Changed implementation of configuration value for automatic declination. There is now a FORCE_AUTOMATIC_DECLINATION_UPDATE that when enabled will update the declination on every GPS 3D fix regardless of whether or not the user saved a value to the EEPROM. By default the declination will only be set by the automatic declination routine if the user has not saved a declination to the EEPROM.;['ArduCopter/config.h', 'ArduCopter/ArduCopter.pde'];2;11
48a0c9a81857677cdf7507df08e8e3c20b3c8f4a;48a0c9a8;library;acm;Small fix to nav_throttle to prevent too fast of a landing.;Small fix to nav_throttle to prevent too fast of a landing.;['ArduCopter/ArduCopter.pde'];1;8
7daaadf776717cde720eb462e96f976664e8a54e;7daaadf7;library;compass;fixed the order of rotations in the compass driver;"fixed the order of rotations in the compass driver

this should fix the massive heading issues that people have been
reporting. Please test!";['libraries/AP_Compass/AP_Compass_HMC5843.cpp'];1;2
d3667faef4764b603f7f78edf9b19f8309f65c20;d3667fae;library;declination;Added call to compass.set_initial_location if the compass is enabled when the 3D fix is obtained.;"Added call to compass.set_initial_location if the compass is enabled when the 3D fix is obtained.

Signed-off-by: Andrew Tridgell <tridge@samba.org>";['ArduPlane/ArduPlane.pde', 'ArduCopter/ArduCopter.pde'];2;27
2524f9c8df291f86e07c8d1fbf06d7211ee54b98;2524f9c8;library;declination;Added new config value to allow the user to have the declination overwritten on every 3D fix.;"Added new config value to allow the user to have the declination overwritten on every 3D fix.

Signed-off-by: Andrew Tridgell <tridge@samba.org>";['ArduCopter/APM_Config.h', 'ArduPlane/config.h', 'ArduPlane/APM_Config.h', 'ArduCopter/config.h'];4;12
fe8c896d692a270b7adb3cf6909d8d644d7d7395;fe8c896d;library;declination;Added method set_initial_location;"Added method set_initial_location

This will set the declination based on lat/lon if the user has
not yet saved one to the EEPROM, OR if they have specified via the
config parameter that they want it to overwrite the declination every
3D fix.

Signed-off-by: Andrew Tridgell <tridge@samba.org>";['libraries/AP_Compass/Compass.cpp', 'libraries/AP_Compass/Compass.h'];2;28
f70dfe440de69acef57410b1b439772445ae0863;f70dfe44;library;quaternion;fix the gyro bias in centripetal and remove smoothing;"fix the gyro bias in centripetal and remove smoothing

the centripetal code needs to take account of the current gyro
bias.

It turned out that the accel and gyro smoothing was causing
significant control lag, and we're better off just letting the
quaternion code handle it via its own smoothing parameters";['libraries/AP_Quaternion/AP_Quaternion.h', 'libraries/AP_Quaternion/AP_Quaternion.cpp'];2;49
bee4bd94748b1ee8b3ea869d4e5e9b9751ecf50f;bee4bd94;library;dcm;fixed bug in accel averaging;"fixed bug in accel averaging

sorry Randy!";['libraries/AP_DCM/AP_DCM.cpp'];1;1
9242c157eeb4ded11d1f9d5563750332e4b51b5c;9242c157;library;apm;Fix rudder in elevon mode.;"Fix rudder in elevon mode.

elevon planes can have rudders too";['ArduPlane/radio.pde', 'ArduPlane/Attitude.pde'];2;7
d90dc4d8933ac50d1233d8707a1609bbf5e4cfe4;d90dc4d8;library;gps;change back to 4Hz for MTK GPS;"change back to 4Hz for MTK GPS

this will hopefully fix the NO_GPS problems that have been regularly
happening in recent months. I will watch the logs carefully to see if
the problem recurs";['libraries/AP_GPS/AP_GPS_MTK16.cpp', 'libraries/AP_GPS/AP_GPS_MTK.cpp'];2;8
804332c3404c68794b6a92bd740b017959b62c73;804332c3;library;barometer;fixed some signed/unsigned warnings;"fixed some signed/unsigned warnings

and a potential bug on timer wrap";['libraries/AP_Baro/AP_Baro_MS5611.cpp', 'libraries/AP_Baro/AP_Baro_MS5611.h'];2;26
c1c3115b428b4f9c2c7ffe6ba30e2f7c6fcd3abc;c1c3115b;library;acm;fixed a alt hold bug;"fixed a alt hold bug

== instead of =";['ArduCopter/commands_logic.pde'];1;2
cd3729d993bb36ad9c80e7f576c1b988863ee7dd;cd3729d9;library;apm;added error checking on barometer read;"added error checking on barometer read

if the barometer is dead and the GPS has a fix, use the GPS for
altitude";['ArduPlane/sensors.pde', 'ArduPlane/ArduPlane.pde', 'ArduPlane/test.pde'];3;29
2e200834e19f3777c09c40b5471f671da24e3e71;2e200834;copter;copter;"Revert ""Switched to Gyro only startup""";"Revert ""Switched to Gyro only startup""

This reverts commit f932f0a9f6a29e9c3193622109298c657ed5a908.

I fixed this bug in 734185599cd9d6a487c675460c09895172e012b0.

It is no longer valid to call IMU::init_gyro() before IMU::init().";['ArduCopter/system.pde'];1;2
f3a4fbc7af41eead6a08a0e704746212a4be9b13;f3a4fbc7;library;imu_ins;Eliminate init_accel from cold start.;"Eliminate init_accel from cold start.

* Bug reported by Jason, 10 Dec 11";['libraries/AP_IMU/AP_IMU_INS.cpp'];1;1
92e0e929a4190da9ea4f7a81c08bd58152602d7b;92e0e929;library;common;replace strlcat_P() with a C implementation;"replace strlcat_P() with a C implementation

the one in the Arduino libc was giving us bogus results on one
machine, and is suspect. We couldn't spot what is wrong in the
assembler, but replacing the implementation with a C one fixes the
bug, so we replaced it";['libraries/AP_Common/AP_Common.h'];1;29
3b673219456458126f5224c6bf784a6089e0d19b;3b673219;library;log;try to fix -ve lat in logging;try to fix -ve lat in logging;['ArduCopter/Log.pde'];1;22
ae1e1c940f36774e96a859f626d06df104399b1a;ae1e1c94;library;log;fixed a bug where we could index outside an array;"fixed a bug where we could index outside an array

when we first start up, num_existing_logs may be zero";['ArduPlane/Log.pde', 'ArduCopter/Log.pde'];2;6
e099079cc074f23ebb957c524453b3a8851b6c9d;e099079c;library;var;fixed a logic bug in APVar::key();"fixed a logic bug in APVar::key()

We were using && instead of & for a bit check. Thanks to Mike for
spotting this!

Pair-Programmed-With: Mike Smith

git-svn-id: https://arducopter.googlecode.com/svn/trunk@3232 f9c3cf11-9bcb-44bc-f272-b75c42450872";['libraries/AP_Common/AP_Var.cpp'];1;2
2605c4b4b2cbe673cc142667d721267e87a61b06;2605c4b4;library;compass;fixed calibration of 5883L compass;"fixed calibration of 5883L compass

this fixes a compass initialisation bug where if the first value from
the compass isn't in the right range we would set bad calibration
scaling factors.

This also changes the maximum acceptable calibration values to 2000,
which is needed for the 5883 compass

pair-programmed-with: Randy Mackay

git-svn-id: https://arducopter.googlecode.com/svn/trunk@2718 f9c3cf11-9bcb-44bc-f272-b75c42450872";['libraries/AP_Compass/AP_Compass_HMC5843.cpp'];1;14
